
tp2 - Entregable.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000124  00800100  00001b28  00001bbc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001b28  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000014  00800224  00800224  00001ce0  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001ce0  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001d3c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001c8  00000000  00000000  00001d7c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001dcb  00000000  00000000  00001f44  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000cd5  00000000  00000000  00003d0f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000109e  00000000  00000000  000049e4  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000400  00000000  00000000  00005a84  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000092a  00000000  00000000  00005e84  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001155  00000000  00000000  000067ae  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000198  00000000  00000000  00007903  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__ctors_end>
       4:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
       8:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
       c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      10:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      14:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      18:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      1c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      20:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      24:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      28:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      2c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      30:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      34:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      38:	0c 94 45 07 	jmp	0xe8a	; 0xe8a <__vector_14>
      3c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      40:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      44:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      48:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      4c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      50:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      54:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      58:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      5c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      60:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      64:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>

00000068 <__trampolines_end>:
      68:	63 64       	ori	r22, 0x43	; 67
      6a:	69 6e       	ori	r22, 0xE9	; 233
      6c:	6f 70       	andi	r22, 0x0F	; 15
      6e:	73 75       	andi	r23, 0x53	; 83
      70:	78 58       	subi	r23, 0x88	; 136
      72:	5b 00       	.word	0x005b	; ????

00000074 <LcdCustomChar>:
      74:	00 1f 00 00 00 00 1f 00 00 1f 10 10 10 10 1f 00     ................
      84:	00 1f 18 18 18 18 1f 00 00 1f 1c 1c 1c 1c 1f 00     ................
      94:	00 1f 1e 1e 1e 1e 1f 00 00 1f 1f 1f 1f 1f 1f 00     ................
      a4:	03 07 0f 1f 0f 07 03 00 18 1c 1e 1f 1e 1c 18 00     ................

000000b4 <__ctors_end>:
      b4:	11 24       	eor	r1, r1
      b6:	1f be       	out	0x3f, r1	; 63
      b8:	cf ef       	ldi	r28, 0xFF	; 255
      ba:	d8 e0       	ldi	r29, 0x08	; 8
      bc:	de bf       	out	0x3e, r29	; 62
      be:	cd bf       	out	0x3d, r28	; 61

000000c0 <__do_copy_data>:
      c0:	12 e0       	ldi	r17, 0x02	; 2
      c2:	a0 e0       	ldi	r26, 0x00	; 0
      c4:	b1 e0       	ldi	r27, 0x01	; 1
      c6:	e8 e2       	ldi	r30, 0x28	; 40
      c8:	fb e1       	ldi	r31, 0x1B	; 27
      ca:	02 c0       	rjmp	.+4      	; 0xd0 <__do_copy_data+0x10>
      cc:	05 90       	lpm	r0, Z+
      ce:	0d 92       	st	X+, r0
      d0:	a4 32       	cpi	r26, 0x24	; 36
      d2:	b1 07       	cpc	r27, r17
      d4:	d9 f7       	brne	.-10     	; 0xcc <__do_copy_data+0xc>

000000d6 <__do_clear_bss>:
      d6:	22 e0       	ldi	r18, 0x02	; 2
      d8:	a4 e2       	ldi	r26, 0x24	; 36
      da:	b2 e0       	ldi	r27, 0x02	; 2
      dc:	01 c0       	rjmp	.+2      	; 0xe0 <.do_clear_bss_start>

000000de <.do_clear_bss_loop>:
      de:	1d 92       	st	X+, r1

000000e0 <.do_clear_bss_start>:
      e0:	a8 33       	cpi	r26, 0x38	; 56
      e2:	b2 07       	cpc	r27, r18
      e4:	e1 f7       	brne	.-8      	; 0xde <.do_clear_bss_loop>
      e6:	0e 94 2f 03 	call	0x65e	; 0x65e <main>
      ea:	0c 94 92 0d 	jmp	0x1b24	; 0x1b24 <_exit>

000000ee <__bad_interrupt>:
      ee:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000f2 <HELPER_CheckPassword>:
      f2:	bc 01       	movw	r22, r24
      f4:	20 e0       	ldi	r18, 0x00	; 0
      f6:	30 e0       	ldi	r19, 0x00	; 0
      f8:	80 e0       	ldi	r24, 0x00	; 0
      fa:	0d c0       	rjmp	.+26     	; 0x116 <HELPER_CheckPassword+0x24>
      fc:	fb 01       	movw	r30, r22
      fe:	e2 0f       	add	r30, r18
     100:	f3 1f       	adc	r31, r19
     102:	40 81       	ld	r20, Z
     104:	f9 01       	movw	r30, r18
     106:	e0 50       	subi	r30, 0x00	; 0
     108:	ff 4f       	sbci	r31, 0xFF	; 255
     10a:	90 81       	ld	r25, Z
     10c:	49 13       	cpse	r20, r25
     10e:	01 c0       	rjmp	.+2      	; 0x112 <HELPER_CheckPassword+0x20>
     110:	8f 5f       	subi	r24, 0xFF	; 255
     112:	2f 5f       	subi	r18, 0xFF	; 255
     114:	3f 4f       	sbci	r19, 0xFF	; 255
     116:	24 30       	cpi	r18, 0x04	; 4
     118:	31 05       	cpc	r19, r1
     11a:	84 f3       	brlt	.-32     	; 0xfc <HELPER_CheckPassword+0xa>
     11c:	84 30       	cpi	r24, 0x04	; 4
     11e:	11 f4       	brne	.+4      	; 0x124 <HELPER_CheckPassword+0x32>
     120:	81 e0       	ldi	r24, 0x01	; 1
     122:	08 95       	ret
     124:	80 e0       	ldi	r24, 0x00	; 0
     126:	08 95       	ret

00000128 <HELPER_ClearSecondLine>:
     128:	61 e0       	ldi	r22, 0x01	; 1
     12a:	80 e0       	ldi	r24, 0x00	; 0
     12c:	0e 94 77 02 	call	0x4ee	; 0x4ee <LCDGotoXY>
     130:	60 e1       	ldi	r22, 0x10	; 16
     132:	88 e1       	ldi	r24, 0x18	; 24
     134:	91 e0       	ldi	r25, 0x01	; 1
     136:	0e 94 5f 02 	call	0x4be	; 0x4be <LCDstring>
     13a:	08 95       	ret

0000013c <KEYPAD_Init>:
     13c:	84 b1       	in	r24, 0x04	; 4
     13e:	86 7e       	andi	r24, 0xE6	; 230
     140:	84 b9       	out	0x04, r24	; 4
     142:	8a b1       	in	r24, 0x0a	; 10
     144:	8f 77       	andi	r24, 0x7F	; 127
     146:	8a b9       	out	0x0a, r24	; 10
     148:	85 b1       	in	r24, 0x05	; 5
     14a:	89 61       	ori	r24, 0x19	; 25
     14c:	85 b9       	out	0x05, r24	; 5
     14e:	8b b1       	in	r24, 0x0b	; 11
     150:	80 68       	ori	r24, 0x80	; 128
     152:	8b b9       	out	0x0b, r24	; 11
     154:	8a b1       	in	r24, 0x0a	; 10
     156:	8c 63       	ori	r24, 0x3C	; 60
     158:	8a b9       	out	0x0a, r24	; 10
     15a:	8b b1       	in	r24, 0x0b	; 11
     15c:	83 7c       	andi	r24, 0xC3	; 195
     15e:	8b b9       	out	0x0b, r24	; 11
     160:	08 95       	ret

00000162 <KEYPAD_Scan>:
     162:	dc 01       	movw	r26, r24
     164:	60 e0       	ldi	r22, 0x00	; 0
     166:	80 e0       	ldi	r24, 0x00	; 0
     168:	76 c0       	rjmp	.+236    	; 0x256 <KEYPAD_Scan+0xf4>
     16a:	9a b1       	in	r25, 0x0a	; 10
     16c:	46 2f       	mov	r20, r22
     16e:	50 e0       	ldi	r21, 0x00	; 0
     170:	fa 01       	movw	r30, r20
     172:	e7 5d       	subi	r30, 0xD7	; 215
     174:	fe 4f       	sbci	r31, 0xFE	; 254
     176:	21 e0       	ldi	r18, 0x01	; 1
     178:	30 e0       	ldi	r19, 0x00	; 0
     17a:	00 80       	ld	r0, Z
     17c:	02 c0       	rjmp	.+4      	; 0x182 <KEYPAD_Scan+0x20>
     17e:	22 0f       	add	r18, r18
     180:	33 1f       	adc	r19, r19
     182:	0a 94       	dec	r0
     184:	e2 f7       	brpl	.-8      	; 0x17e <KEYPAD_Scan+0x1c>
     186:	92 2b       	or	r25, r18
     188:	9a b9       	out	0x0a, r25	; 10
     18a:	9b b1       	in	r25, 0x0b	; 11
     18c:	20 95       	com	r18
     18e:	29 23       	and	r18, r25
     190:	2b b9       	out	0x0b, r18	; 11
     192:	90 e0       	ldi	r25, 0x00	; 0
     194:	4a c0       	rjmp	.+148    	; 0x22a <KEYPAD_Scan+0xc8>
     196:	93 30       	cpi	r25, 0x03	; 3
     198:	78 f4       	brcc	.+30     	; 0x1b8 <KEYPAD_Scan+0x56>
     19a:	73 b1       	in	r23, 0x03	; 3
     19c:	e9 2f       	mov	r30, r25
     19e:	f0 e0       	ldi	r31, 0x00	; 0
     1a0:	e3 5d       	subi	r30, 0xD3	; 211
     1a2:	fe 4f       	sbci	r31, 0xFE	; 254
     1a4:	21 e0       	ldi	r18, 0x01	; 1
     1a6:	30 e0       	ldi	r19, 0x00	; 0
     1a8:	00 80       	ld	r0, Z
     1aa:	02 c0       	rjmp	.+4      	; 0x1b0 <KEYPAD_Scan+0x4e>
     1ac:	22 0f       	add	r18, r18
     1ae:	33 1f       	adc	r19, r19
     1b0:	0a 94       	dec	r0
     1b2:	e2 f7       	brpl	.-8      	; 0x1ac <KEYPAD_Scan+0x4a>
     1b4:	27 23       	and	r18, r23
     1b6:	0e c0       	rjmp	.+28     	; 0x1d4 <KEYPAD_Scan+0x72>
     1b8:	79 b1       	in	r23, 0x09	; 9
     1ba:	e9 2f       	mov	r30, r25
     1bc:	f0 e0       	ldi	r31, 0x00	; 0
     1be:	e3 5d       	subi	r30, 0xD3	; 211
     1c0:	fe 4f       	sbci	r31, 0xFE	; 254
     1c2:	21 e0       	ldi	r18, 0x01	; 1
     1c4:	30 e0       	ldi	r19, 0x00	; 0
     1c6:	00 80       	ld	r0, Z
     1c8:	02 c0       	rjmp	.+4      	; 0x1ce <KEYPAD_Scan+0x6c>
     1ca:	22 0f       	add	r18, r18
     1cc:	33 1f       	adc	r19, r19
     1ce:	0a 94       	dec	r0
     1d0:	e2 f7       	brpl	.-8      	; 0x1ca <KEYPAD_Scan+0x68>
     1d2:	27 23       	and	r18, r23
     1d4:	21 11       	cpse	r18, r1
     1d6:	12 c0       	rjmp	.+36     	; 0x1fc <KEYPAD_Scan+0x9a>
     1d8:	e9 2f       	mov	r30, r25
     1da:	f0 e0       	ldi	r31, 0x00	; 0
     1dc:	ee 0f       	add	r30, r30
     1de:	ff 1f       	adc	r31, r31
     1e0:	ee 0f       	add	r30, r30
     1e2:	ff 1f       	adc	r31, r31
     1e4:	ef 5c       	subi	r30, 0xCF	; 207
     1e6:	fe 4f       	sbci	r31, 0xFE	; 254
     1e8:	e4 0f       	add	r30, r20
     1ea:	f5 1f       	adc	r31, r21
     1ec:	30 81       	ld	r19, Z
     1ee:	70 91 04 01 	lds	r23, 0x0104	; 0x800104 <ultimaTecla.2152>
     1f2:	37 17       	cp	r19, r23
     1f4:	19 f0       	breq	.+6      	; 0x1fc <KEYPAD_Scan+0x9a>
     1f6:	30 93 04 01 	sts	0x0104, r19	; 0x800104 <ultimaTecla.2152>
     1fa:	16 c0       	rjmp	.+44     	; 0x228 <KEYPAD_Scan+0xc6>
     1fc:	22 23       	and	r18, r18
     1fe:	a1 f0       	breq	.+40     	; 0x228 <KEYPAD_Scan+0xc6>
     200:	e9 2f       	mov	r30, r25
     202:	f0 e0       	ldi	r31, 0x00	; 0
     204:	ee 0f       	add	r30, r30
     206:	ff 1f       	adc	r31, r31
     208:	ee 0f       	add	r30, r30
     20a:	ff 1f       	adc	r31, r31
     20c:	ef 5c       	subi	r30, 0xCF	; 207
     20e:	fe 4f       	sbci	r31, 0xFE	; 254
     210:	e4 0f       	add	r30, r20
     212:	f5 1f       	adc	r31, r21
     214:	30 81       	ld	r19, Z
     216:	20 91 04 01 	lds	r18, 0x0104	; 0x800104 <ultimaTecla.2152>
     21a:	32 13       	cpse	r19, r18
     21c:	05 c0       	rjmp	.+10     	; 0x228 <KEYPAD_Scan+0xc6>
     21e:	2c 93       	st	X, r18
     220:	8f ef       	ldi	r24, 0xFF	; 255
     222:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <ultimaTecla.2152>
     226:	81 e0       	ldi	r24, 0x01	; 1
     228:	9f 5f       	subi	r25, 0xFF	; 255
     22a:	94 30       	cpi	r25, 0x04	; 4
     22c:	08 f4       	brcc	.+2      	; 0x230 <KEYPAD_Scan+0xce>
     22e:	b3 cf       	rjmp	.-154    	; 0x196 <KEYPAD_Scan+0x34>
     230:	9b b1       	in	r25, 0x0b	; 11
     232:	fa 01       	movw	r30, r20
     234:	e7 5d       	subi	r30, 0xD7	; 215
     236:	fe 4f       	sbci	r31, 0xFE	; 254
     238:	21 e0       	ldi	r18, 0x01	; 1
     23a:	30 e0       	ldi	r19, 0x00	; 0
     23c:	00 80       	ld	r0, Z
     23e:	02 c0       	rjmp	.+4      	; 0x244 <KEYPAD_Scan+0xe2>
     240:	22 0f       	add	r18, r18
     242:	33 1f       	adc	r19, r19
     244:	0a 94       	dec	r0
     246:	e2 f7       	brpl	.-8      	; 0x240 <KEYPAD_Scan+0xde>
     248:	92 2b       	or	r25, r18
     24a:	9b b9       	out	0x0b, r25	; 11
     24c:	9a b1       	in	r25, 0x0a	; 10
     24e:	20 95       	com	r18
     250:	29 23       	and	r18, r25
     252:	2a b9       	out	0x0a, r18	; 10
     254:	6f 5f       	subi	r22, 0xFF	; 255
     256:	64 30       	cpi	r22, 0x04	; 4
     258:	08 f4       	brcc	.+2      	; 0x25c <KEYPAD_Scan+0xfa>
     25a:	87 cf       	rjmp	.-242    	; 0x16a <KEYPAD_Scan+0x8>
     25c:	08 95       	ret

0000025e <LCDsendChar>:
     25e:	65 b1       	in	r22, 0x05	; 5
     260:	98 2f       	mov	r25, r24
     262:	90 74       	andi	r25, 0x40	; 64
     264:	49 2f       	mov	r20, r25
     266:	50 e0       	ldi	r21, 0x00	; 0
     268:	55 95       	asr	r21
     26a:	47 95       	ror	r20
     26c:	55 95       	asr	r21
     26e:	47 95       	ror	r20
     270:	55 95       	asr	r21
     272:	47 95       	ror	r20
     274:	55 95       	asr	r21
     276:	47 95       	ror	r20
     278:	98 2f       	mov	r25, r24
     27a:	90 78       	andi	r25, 0x80	; 128
     27c:	29 2f       	mov	r18, r25
     27e:	30 e0       	ldi	r19, 0x00	; 0
     280:	02 2e       	mov	r0, r18
     282:	23 2f       	mov	r18, r19
     284:	00 0c       	add	r0, r0
     286:	22 1f       	adc	r18, r18
     288:	33 0b       	sbc	r19, r19
     28a:	00 0c       	add	r0, r0
     28c:	22 1f       	adc	r18, r18
     28e:	33 1f       	adc	r19, r19
     290:	96 2f       	mov	r25, r22
     292:	99 7f       	andi	r25, 0xF9	; 249
     294:	49 2b       	or	r20, r25
     296:	24 2b       	or	r18, r20
     298:	25 b9       	out	0x05, r18	; 5
     29a:	68 b1       	in	r22, 0x08	; 8
     29c:	98 2f       	mov	r25, r24
     29e:	90 71       	andi	r25, 0x10	; 16
     2a0:	49 2f       	mov	r20, r25
     2a2:	50 e0       	ldi	r21, 0x00	; 0
     2a4:	55 95       	asr	r21
     2a6:	47 95       	ror	r20
     2a8:	55 95       	asr	r21
     2aa:	47 95       	ror	r20
     2ac:	55 95       	asr	r21
     2ae:	47 95       	ror	r20
     2b0:	98 2f       	mov	r25, r24
     2b2:	90 72       	andi	r25, 0x20	; 32
     2b4:	29 2f       	mov	r18, r25
     2b6:	30 e0       	ldi	r19, 0x00	; 0
     2b8:	35 95       	asr	r19
     2ba:	27 95       	ror	r18
     2bc:	35 95       	asr	r19
     2be:	27 95       	ror	r18
     2c0:	35 95       	asr	r19
     2c2:	27 95       	ror	r18
     2c4:	96 2f       	mov	r25, r22
     2c6:	99 7f       	andi	r25, 0xF9	; 249
     2c8:	49 2b       	or	r20, r25
     2ca:	24 2b       	or	r18, r20
     2cc:	28 b9       	out	0x08, r18	; 8
     2ce:	9b b1       	in	r25, 0x0b	; 11
     2d0:	92 60       	ori	r25, 0x02	; 2
     2d2:	9b b9       	out	0x0b, r25	; 11
     2d4:	9b b1       	in	r25, 0x0b	; 11
     2d6:	91 60       	ori	r25, 0x01	; 1
     2d8:	9b b9       	out	0x0b, r25	; 11
     2da:	25 ed       	ldi	r18, 0xD5	; 213
     2dc:	2a 95       	dec	r18
     2de:	f1 f7       	brne	.-4      	; 0x2dc <LCDsendChar+0x7e>
     2e0:	00 00       	nop
     2e2:	9b b1       	in	r25, 0x0b	; 11
     2e4:	9e 7f       	andi	r25, 0xFE	; 254
     2e6:	9b b9       	out	0x0b, r25	; 11
     2e8:	9b b1       	in	r25, 0x0b	; 11
     2ea:	9d 7f       	andi	r25, 0xFD	; 253
     2ec:	9b b9       	out	0x0b, r25	; 11
     2ee:	95 ed       	ldi	r25, 0xD5	; 213
     2f0:	9a 95       	dec	r25
     2f2:	f1 f7       	brne	.-4      	; 0x2f0 <LCDsendChar+0x92>
     2f4:	00 00       	nop
     2f6:	65 b1       	in	r22, 0x05	; 5
     2f8:	20 e1       	ldi	r18, 0x10	; 16
     2fa:	82 9f       	mul	r24, r18
     2fc:	c0 01       	movw	r24, r0
     2fe:	11 24       	eor	r1, r1
     300:	ac 01       	movw	r20, r24
     302:	40 74       	andi	r20, 0x40	; 64
     304:	55 27       	eor	r21, r21
     306:	55 95       	asr	r21
     308:	47 95       	ror	r20
     30a:	55 95       	asr	r21
     30c:	47 95       	ror	r20
     30e:	55 95       	asr	r21
     310:	47 95       	ror	r20
     312:	55 95       	asr	r21
     314:	47 95       	ror	r20
     316:	9c 01       	movw	r18, r24
     318:	20 78       	andi	r18, 0x80	; 128
     31a:	33 27       	eor	r19, r19
     31c:	02 2e       	mov	r0, r18
     31e:	23 2f       	mov	r18, r19
     320:	00 0c       	add	r0, r0
     322:	22 1f       	adc	r18, r18
     324:	33 0b       	sbc	r19, r19
     326:	00 0c       	add	r0, r0
     328:	22 1f       	adc	r18, r18
     32a:	33 1f       	adc	r19, r19
     32c:	36 2f       	mov	r19, r22
     32e:	39 7f       	andi	r19, 0xF9	; 249
     330:	43 2b       	or	r20, r19
     332:	24 2b       	or	r18, r20
     334:	25 b9       	out	0x05, r18	; 5
     336:	48 b1       	in	r20, 0x08	; 8
     338:	9c 01       	movw	r18, r24
     33a:	20 71       	andi	r18, 0x10	; 16
     33c:	33 27       	eor	r19, r19
     33e:	35 95       	asr	r19
     340:	27 95       	ror	r18
     342:	35 95       	asr	r19
     344:	27 95       	ror	r18
     346:	35 95       	asr	r19
     348:	27 95       	ror	r18
     34a:	80 72       	andi	r24, 0x20	; 32
     34c:	99 27       	eor	r25, r25
     34e:	95 95       	asr	r25
     350:	87 95       	ror	r24
     352:	95 95       	asr	r25
     354:	87 95       	ror	r24
     356:	95 95       	asr	r25
     358:	87 95       	ror	r24
     35a:	94 2f       	mov	r25, r20
     35c:	99 7f       	andi	r25, 0xF9	; 249
     35e:	29 2b       	or	r18, r25
     360:	82 2b       	or	r24, r18
     362:	88 b9       	out	0x08, r24	; 8
     364:	8b b1       	in	r24, 0x0b	; 11
     366:	82 60       	ori	r24, 0x02	; 2
     368:	8b b9       	out	0x0b, r24	; 11
     36a:	8b b1       	in	r24, 0x0b	; 11
     36c:	81 60       	ori	r24, 0x01	; 1
     36e:	8b b9       	out	0x0b, r24	; 11
     370:	85 ed       	ldi	r24, 0xD5	; 213
     372:	8a 95       	dec	r24
     374:	f1 f7       	brne	.-4      	; 0x372 <LCDsendChar+0x114>
     376:	00 00       	nop
     378:	8b b1       	in	r24, 0x0b	; 11
     37a:	8e 7f       	andi	r24, 0xFE	; 254
     37c:	8b b9       	out	0x0b, r24	; 11
     37e:	8b b1       	in	r24, 0x0b	; 11
     380:	8d 7f       	andi	r24, 0xFD	; 253
     382:	8b b9       	out	0x0b, r24	; 11
     384:	95 ed       	ldi	r25, 0xD5	; 213
     386:	9a 95       	dec	r25
     388:	f1 f7       	brne	.-4      	; 0x386 <LCDsendChar+0x128>
     38a:	00 00       	nop
     38c:	08 95       	ret

0000038e <LCDsendCommand>:
     38e:	65 b1       	in	r22, 0x05	; 5
     390:	98 2f       	mov	r25, r24
     392:	90 74       	andi	r25, 0x40	; 64
     394:	49 2f       	mov	r20, r25
     396:	50 e0       	ldi	r21, 0x00	; 0
     398:	55 95       	asr	r21
     39a:	47 95       	ror	r20
     39c:	55 95       	asr	r21
     39e:	47 95       	ror	r20
     3a0:	55 95       	asr	r21
     3a2:	47 95       	ror	r20
     3a4:	55 95       	asr	r21
     3a6:	47 95       	ror	r20
     3a8:	98 2f       	mov	r25, r24
     3aa:	90 78       	andi	r25, 0x80	; 128
     3ac:	29 2f       	mov	r18, r25
     3ae:	30 e0       	ldi	r19, 0x00	; 0
     3b0:	02 2e       	mov	r0, r18
     3b2:	23 2f       	mov	r18, r19
     3b4:	00 0c       	add	r0, r0
     3b6:	22 1f       	adc	r18, r18
     3b8:	33 0b       	sbc	r19, r19
     3ba:	00 0c       	add	r0, r0
     3bc:	22 1f       	adc	r18, r18
     3be:	33 1f       	adc	r19, r19
     3c0:	96 2f       	mov	r25, r22
     3c2:	99 7f       	andi	r25, 0xF9	; 249
     3c4:	49 2b       	or	r20, r25
     3c6:	24 2b       	or	r18, r20
     3c8:	25 b9       	out	0x05, r18	; 5
     3ca:	68 b1       	in	r22, 0x08	; 8
     3cc:	98 2f       	mov	r25, r24
     3ce:	90 71       	andi	r25, 0x10	; 16
     3d0:	49 2f       	mov	r20, r25
     3d2:	50 e0       	ldi	r21, 0x00	; 0
     3d4:	55 95       	asr	r21
     3d6:	47 95       	ror	r20
     3d8:	55 95       	asr	r21
     3da:	47 95       	ror	r20
     3dc:	55 95       	asr	r21
     3de:	47 95       	ror	r20
     3e0:	98 2f       	mov	r25, r24
     3e2:	90 72       	andi	r25, 0x20	; 32
     3e4:	29 2f       	mov	r18, r25
     3e6:	30 e0       	ldi	r19, 0x00	; 0
     3e8:	35 95       	asr	r19
     3ea:	27 95       	ror	r18
     3ec:	35 95       	asr	r19
     3ee:	27 95       	ror	r18
     3f0:	35 95       	asr	r19
     3f2:	27 95       	ror	r18
     3f4:	96 2f       	mov	r25, r22
     3f6:	99 7f       	andi	r25, 0xF9	; 249
     3f8:	49 2b       	or	r20, r25
     3fa:	24 2b       	or	r18, r20
     3fc:	28 b9       	out	0x08, r18	; 8
     3fe:	9b b1       	in	r25, 0x0b	; 11
     400:	91 60       	ori	r25, 0x01	; 1
     402:	9b b9       	out	0x0b, r25	; 11
     404:	ef e9       	ldi	r30, 0x9F	; 159
     406:	ff e0       	ldi	r31, 0x0F	; 15
     408:	31 97       	sbiw	r30, 0x01	; 1
     40a:	f1 f7       	brne	.-4      	; 0x408 <__EEPROM_REGION_LENGTH__+0x8>
     40c:	00 c0       	rjmp	.+0      	; 0x40e <__EEPROM_REGION_LENGTH__+0xe>
     40e:	00 00       	nop
     410:	9b b1       	in	r25, 0x0b	; 11
     412:	9e 7f       	andi	r25, 0xFE	; 254
     414:	9b b9       	out	0x0b, r25	; 11
     416:	ef e9       	ldi	r30, 0x9F	; 159
     418:	ff e0       	ldi	r31, 0x0F	; 15
     41a:	31 97       	sbiw	r30, 0x01	; 1
     41c:	f1 f7       	brne	.-4      	; 0x41a <__EEPROM_REGION_LENGTH__+0x1a>
     41e:	00 c0       	rjmp	.+0      	; 0x420 <__EEPROM_REGION_LENGTH__+0x20>
     420:	00 00       	nop
     422:	65 b1       	in	r22, 0x05	; 5
     424:	f0 e1       	ldi	r31, 0x10	; 16
     426:	8f 9f       	mul	r24, r31
     428:	c0 01       	movw	r24, r0
     42a:	11 24       	eor	r1, r1
     42c:	ac 01       	movw	r20, r24
     42e:	40 74       	andi	r20, 0x40	; 64
     430:	55 27       	eor	r21, r21
     432:	55 95       	asr	r21
     434:	47 95       	ror	r20
     436:	55 95       	asr	r21
     438:	47 95       	ror	r20
     43a:	55 95       	asr	r21
     43c:	47 95       	ror	r20
     43e:	55 95       	asr	r21
     440:	47 95       	ror	r20
     442:	9c 01       	movw	r18, r24
     444:	20 78       	andi	r18, 0x80	; 128
     446:	33 27       	eor	r19, r19
     448:	02 2e       	mov	r0, r18
     44a:	23 2f       	mov	r18, r19
     44c:	00 0c       	add	r0, r0
     44e:	22 1f       	adc	r18, r18
     450:	33 0b       	sbc	r19, r19
     452:	00 0c       	add	r0, r0
     454:	22 1f       	adc	r18, r18
     456:	33 1f       	adc	r19, r19
     458:	36 2f       	mov	r19, r22
     45a:	39 7f       	andi	r19, 0xF9	; 249
     45c:	43 2b       	or	r20, r19
     45e:	24 2b       	or	r18, r20
     460:	25 b9       	out	0x05, r18	; 5
     462:	48 b1       	in	r20, 0x08	; 8
     464:	9c 01       	movw	r18, r24
     466:	20 71       	andi	r18, 0x10	; 16
     468:	33 27       	eor	r19, r19
     46a:	35 95       	asr	r19
     46c:	27 95       	ror	r18
     46e:	35 95       	asr	r19
     470:	27 95       	ror	r18
     472:	35 95       	asr	r19
     474:	27 95       	ror	r18
     476:	80 72       	andi	r24, 0x20	; 32
     478:	99 27       	eor	r25, r25
     47a:	95 95       	asr	r25
     47c:	87 95       	ror	r24
     47e:	95 95       	asr	r25
     480:	87 95       	ror	r24
     482:	95 95       	asr	r25
     484:	87 95       	ror	r24
     486:	94 2f       	mov	r25, r20
     488:	99 7f       	andi	r25, 0xF9	; 249
     48a:	29 2b       	or	r18, r25
     48c:	82 2b       	or	r24, r18
     48e:	88 b9       	out	0x08, r24	; 8
     490:	8b b1       	in	r24, 0x0b	; 11
     492:	81 60       	ori	r24, 0x01	; 1
     494:	8b b9       	out	0x0b, r24	; 11
     496:	8f e9       	ldi	r24, 0x9F	; 159
     498:	9f e0       	ldi	r25, 0x0F	; 15
     49a:	01 97       	sbiw	r24, 0x01	; 1
     49c:	f1 f7       	brne	.-4      	; 0x49a <__EEPROM_REGION_LENGTH__+0x9a>
     49e:	00 c0       	rjmp	.+0      	; 0x4a0 <__EEPROM_REGION_LENGTH__+0xa0>
     4a0:	00 00       	nop
     4a2:	8b b1       	in	r24, 0x0b	; 11
     4a4:	8e 7f       	andi	r24, 0xFE	; 254
     4a6:	8b b9       	out	0x0b, r24	; 11
     4a8:	ef e9       	ldi	r30, 0x9F	; 159
     4aa:	ff e0       	ldi	r31, 0x0F	; 15
     4ac:	31 97       	sbiw	r30, 0x01	; 1
     4ae:	f1 f7       	brne	.-4      	; 0x4ac <__EEPROM_REGION_LENGTH__+0xac>
     4b0:	00 c0       	rjmp	.+0      	; 0x4b2 <__EEPROM_REGION_LENGTH__+0xb2>
     4b2:	00 00       	nop
     4b4:	08 95       	ret

000004b6 <LCDclr>:
     4b6:	81 e0       	ldi	r24, 0x01	; 1
     4b8:	0e 94 c7 01 	call	0x38e	; 0x38e <LCDsendCommand>
     4bc:	08 95       	ret

000004be <LCDstring>:
     4be:	0f 93       	push	r16
     4c0:	1f 93       	push	r17
     4c2:	cf 93       	push	r28
     4c4:	df 93       	push	r29
     4c6:	00 97       	sbiw	r24, 0x00	; 0
     4c8:	69 f0       	breq	.+26     	; 0x4e4 <LCDstring+0x26>
     4ca:	d6 2f       	mov	r29, r22
     4cc:	8c 01       	movw	r16, r24
     4ce:	c0 e0       	ldi	r28, 0x00	; 0
     4d0:	07 c0       	rjmp	.+14     	; 0x4e0 <LCDstring+0x22>
     4d2:	f8 01       	movw	r30, r16
     4d4:	ec 0f       	add	r30, r28
     4d6:	f1 1d       	adc	r31, r1
     4d8:	80 81       	ld	r24, Z
     4da:	0e 94 2f 01 	call	0x25e	; 0x25e <LCDsendChar>
     4de:	cf 5f       	subi	r28, 0xFF	; 255
     4e0:	cd 17       	cp	r28, r29
     4e2:	b8 f3       	brcs	.-18     	; 0x4d2 <LCDstring+0x14>
     4e4:	df 91       	pop	r29
     4e6:	cf 91       	pop	r28
     4e8:	1f 91       	pop	r17
     4ea:	0f 91       	pop	r16
     4ec:	08 95       	ret

000004ee <LCDGotoXY>:
     4ee:	62 30       	cpi	r22, 0x02	; 2
     4f0:	31 f0       	breq	.+12     	; 0x4fe <LCDGotoXY+0x10>
     4f2:	63 30       	cpi	r22, 0x03	; 3
     4f4:	31 f0       	breq	.+12     	; 0x502 <LCDGotoXY+0x14>
     4f6:	61 30       	cpi	r22, 0x01	; 1
     4f8:	29 f4       	brne	.+10     	; 0x504 <LCDGotoXY+0x16>
     4fa:	80 5c       	subi	r24, 0xC0	; 192
     4fc:	03 c0       	rjmp	.+6      	; 0x504 <LCDGotoXY+0x16>
     4fe:	8c 5e       	subi	r24, 0xEC	; 236
     500:	01 c0       	rjmp	.+2      	; 0x504 <LCDGotoXY+0x16>
     502:	8c 5a       	subi	r24, 0xAC	; 172
     504:	80 68       	ori	r24, 0x80	; 128
     506:	0e 94 c7 01 	call	0x38e	; 0x38e <LCDsendCommand>
     50a:	08 95       	ret

0000050c <LCDdefinechar>:
     50c:	ef 92       	push	r14
     50e:	ff 92       	push	r15
     510:	0f 93       	push	r16
     512:	1f 93       	push	r17
     514:	cf 93       	push	r28
     516:	df 93       	push	r29
     518:	7c 01       	movw	r14, r24
     51a:	86 2f       	mov	r24, r22
     51c:	90 e0       	ldi	r25, 0x00	; 0
     51e:	88 0f       	add	r24, r24
     520:	99 1f       	adc	r25, r25
     522:	88 0f       	add	r24, r24
     524:	99 1f       	adc	r25, r25
     526:	88 0f       	add	r24, r24
     528:	99 1f       	adc	r25, r25
     52a:	80 64       	ori	r24, 0x40	; 64
     52c:	c0 e0       	ldi	r28, 0x00	; 0
     52e:	d0 e0       	ldi	r29, 0x00	; 0
     530:	0d c0       	rjmp	.+26     	; 0x54c <LCDdefinechar+0x40>
     532:	f7 01       	movw	r30, r14
     534:	ec 0f       	add	r30, r28
     536:	fd 1f       	adc	r31, r29
     538:	14 91       	lpm	r17, Z
     53a:	01 e0       	ldi	r16, 0x01	; 1
     53c:	08 0f       	add	r16, r24
     53e:	0e 94 c7 01 	call	0x38e	; 0x38e <LCDsendCommand>
     542:	81 2f       	mov	r24, r17
     544:	0e 94 2f 01 	call	0x25e	; 0x25e <LCDsendChar>
     548:	21 96       	adiw	r28, 0x01	; 1
     54a:	80 2f       	mov	r24, r16
     54c:	c8 30       	cpi	r28, 0x08	; 8
     54e:	d1 05       	cpc	r29, r1
     550:	80 f3       	brcs	.-32     	; 0x532 <LCDdefinechar+0x26>
     552:	df 91       	pop	r29
     554:	cf 91       	pop	r28
     556:	1f 91       	pop	r17
     558:	0f 91       	pop	r16
     55a:	ff 90       	pop	r15
     55c:	ef 90       	pop	r14
     55e:	08 95       	ret

00000560 <LCDinit>:
     560:	cf 93       	push	r28
     562:	df 93       	push	r29
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     564:	8f e5       	ldi	r24, 0x5F	; 95
     566:	9a ee       	ldi	r25, 0xEA	; 234
     568:	01 97       	sbiw	r24, 0x01	; 1
     56a:	f1 f7       	brne	.-4      	; 0x568 <LCDinit+0x8>
     56c:	00 c0       	rjmp	.+0      	; 0x56e <LCDinit+0xe>
     56e:	00 00       	nop
     570:	85 b1       	in	r24, 0x05	; 5
     572:	89 7f       	andi	r24, 0xF9	; 249
     574:	85 b9       	out	0x05, r24	; 5
     576:	88 b1       	in	r24, 0x08	; 8
     578:	89 7f       	andi	r24, 0xF9	; 249
     57a:	88 b9       	out	0x08, r24	; 8
     57c:	1b b8       	out	0x0b, r1	; 11
     57e:	87 b1       	in	r24, 0x07	; 7
     580:	86 60       	ori	r24, 0x06	; 6
     582:	87 b9       	out	0x07, r24	; 7
     584:	84 b1       	in	r24, 0x04	; 4
     586:	86 60       	ori	r24, 0x06	; 6
     588:	84 b9       	out	0x04, r24	; 4
     58a:	84 b1       	in	r24, 0x04	; 4
     58c:	86 60       	ori	r24, 0x06	; 6
     58e:	84 b9       	out	0x04, r24	; 4
     590:	87 b1       	in	r24, 0x07	; 7
     592:	86 60       	ori	r24, 0x06	; 6
     594:	87 b9       	out	0x07, r24	; 7
     596:	8a b1       	in	r24, 0x0a	; 10
     598:	83 60       	ori	r24, 0x03	; 3
     59a:	8a b9       	out	0x0a, r24	; 10
     59c:	85 b1       	in	r24, 0x05	; 5
     59e:	89 7f       	andi	r24, 0xF9	; 249
     5a0:	85 b9       	out	0x05, r24	; 5
     5a2:	88 b1       	in	r24, 0x08	; 8
     5a4:	86 60       	ori	r24, 0x06	; 6
     5a6:	88 b9       	out	0x08, r24	; 8
     5a8:	8b b1       	in	r24, 0x0b	; 11
     5aa:	81 60       	ori	r24, 0x01	; 1
     5ac:	8b b9       	out	0x0b, r24	; 11
     5ae:	8f e9       	ldi	r24, 0x9F	; 159
     5b0:	9f e0       	ldi	r25, 0x0F	; 15
     5b2:	01 97       	sbiw	r24, 0x01	; 1
     5b4:	f1 f7       	brne	.-4      	; 0x5b2 <LCDinit+0x52>
     5b6:	00 c0       	rjmp	.+0      	; 0x5b8 <LCDinit+0x58>
     5b8:	00 00       	nop
     5ba:	8b b1       	in	r24, 0x0b	; 11
     5bc:	8e 7f       	andi	r24, 0xFE	; 254
     5be:	8b b9       	out	0x0b, r24	; 11
     5c0:	8f e9       	ldi	r24, 0x9F	; 159
     5c2:	9f e0       	ldi	r25, 0x0F	; 15
     5c4:	01 97       	sbiw	r24, 0x01	; 1
     5c6:	f1 f7       	brne	.-4      	; 0x5c4 <LCDinit+0x64>
     5c8:	00 c0       	rjmp	.+0      	; 0x5ca <LCDinit+0x6a>
     5ca:	00 00       	nop
     5cc:	85 b1       	in	r24, 0x05	; 5
     5ce:	89 7f       	andi	r24, 0xF9	; 249
     5d0:	85 b9       	out	0x05, r24	; 5
     5d2:	88 b1       	in	r24, 0x08	; 8
     5d4:	86 60       	ori	r24, 0x06	; 6
     5d6:	88 b9       	out	0x08, r24	; 8
     5d8:	8b b1       	in	r24, 0x0b	; 11
     5da:	81 60       	ori	r24, 0x01	; 1
     5dc:	8b b9       	out	0x0b, r24	; 11
     5de:	8f e9       	ldi	r24, 0x9F	; 159
     5e0:	9f e0       	ldi	r25, 0x0F	; 15
     5e2:	01 97       	sbiw	r24, 0x01	; 1
     5e4:	f1 f7       	brne	.-4      	; 0x5e2 <LCDinit+0x82>
     5e6:	00 c0       	rjmp	.+0      	; 0x5e8 <LCDinit+0x88>
     5e8:	00 00       	nop
     5ea:	8b b1       	in	r24, 0x0b	; 11
     5ec:	8e 7f       	andi	r24, 0xFE	; 254
     5ee:	8b b9       	out	0x0b, r24	; 11
     5f0:	8f e9       	ldi	r24, 0x9F	; 159
     5f2:	9f e0       	ldi	r25, 0x0F	; 15
     5f4:	01 97       	sbiw	r24, 0x01	; 1
     5f6:	f1 f7       	brne	.-4      	; 0x5f4 <LCDinit+0x94>
     5f8:	00 c0       	rjmp	.+0      	; 0x5fa <LCDinit+0x9a>
     5fa:	00 00       	nop
     5fc:	85 b1       	in	r24, 0x05	; 5
     5fe:	89 7f       	andi	r24, 0xF9	; 249
     600:	85 b9       	out	0x05, r24	; 5
     602:	88 b1       	in	r24, 0x08	; 8
     604:	89 7f       	andi	r24, 0xF9	; 249
     606:	84 60       	ori	r24, 0x04	; 4
     608:	88 b9       	out	0x08, r24	; 8
     60a:	8b b1       	in	r24, 0x0b	; 11
     60c:	81 60       	ori	r24, 0x01	; 1
     60e:	8b b9       	out	0x0b, r24	; 11
     610:	8f e9       	ldi	r24, 0x9F	; 159
     612:	9f e0       	ldi	r25, 0x0F	; 15
     614:	01 97       	sbiw	r24, 0x01	; 1
     616:	f1 f7       	brne	.-4      	; 0x614 <LCDinit+0xb4>
     618:	00 c0       	rjmp	.+0      	; 0x61a <LCDinit+0xba>
     61a:	00 00       	nop
     61c:	8b b1       	in	r24, 0x0b	; 11
     61e:	8e 7f       	andi	r24, 0xFE	; 254
     620:	8b b9       	out	0x0b, r24	; 11
     622:	8f e9       	ldi	r24, 0x9F	; 159
     624:	9f e0       	ldi	r25, 0x0F	; 15
     626:	01 97       	sbiw	r24, 0x01	; 1
     628:	f1 f7       	brne	.-4      	; 0x626 <LCDinit+0xc6>
     62a:	00 c0       	rjmp	.+0      	; 0x62c <LCDinit+0xcc>
     62c:	00 00       	nop
     62e:	88 e2       	ldi	r24, 0x28	; 40
     630:	0e 94 c7 01 	call	0x38e	; 0x38e <LCDsendCommand>
     634:	8c e0       	ldi	r24, 0x0C	; 12
     636:	0e 94 c7 01 	call	0x38e	; 0x38e <LCDsendCommand>
     63a:	60 e0       	ldi	r22, 0x00	; 0
     63c:	c0 e0       	ldi	r28, 0x00	; 0
     63e:	0a c0       	rjmp	.+20     	; 0x654 <LCDinit+0xf4>
     640:	d1 e0       	ldi	r29, 0x01	; 1
     642:	d6 0f       	add	r29, r22
     644:	8c 2f       	mov	r24, r28
     646:	90 e0       	ldi	r25, 0x00	; 0
     648:	8c 58       	subi	r24, 0x8C	; 140
     64a:	9f 4f       	sbci	r25, 0xFF	; 255
     64c:	0e 94 86 02 	call	0x50c	; 0x50c <LCDdefinechar>
     650:	c8 5f       	subi	r28, 0xF8	; 248
     652:	6d 2f       	mov	r22, r29
     654:	c0 34       	cpi	r28, 0x40	; 64
     656:	a0 f3       	brcs	.-24     	; 0x640 <LCDinit+0xe0>
     658:	df 91       	pop	r29
     65a:	cf 91       	pop	r28
     65c:	08 95       	ret

0000065e <main>:
 */ 

#include "main.h"

int main() {
  	LCDinit();  	// inicializa el lcd
     65e:	0e 94 b0 02 	call	0x560	; 0x560 <LCDinit>
    KEYPAD_Init(); 	// inicializa el keypad
     662:	0e 94 9e 00 	call	0x13c	; 0x13c <KEYPAD_Init>
    SCHEDULER_Init(); 	// inicializa el timer
     666:	0e 94 68 04 	call	0x8d0	; 0x8d0 <SCHEDULER_Init>
    MEF_Init(); 	// inicializa la mef
     66a:	0e 94 3a 03 	call	0x674	; 0x674 <MEF_Init>
    while (1){
        SCHEDULER_Tasks();
     66e:	0e 94 2c 07 	call	0xe58	; 0xe58 <SCHEDULER_Tasks>
     672:	fd cf       	rjmp	.-6      	; 0x66e <main+0x10>

00000674 <MEF_Init>:
     674:	81 e0       	ldi	r24, 0x01	; 1
     676:	80 93 2c 02 	sts	0x022C, r24	; 0x80022c <System_state>
     67a:	8f ef       	ldi	r24, 0xFF	; 255
     67c:	80 93 2b 02 	sts	0x022B, r24	; 0x80022b <state_call_count>
     680:	0e 94 5b 02 	call	0x4b6	; 0x4b6 <LCDclr>
     684:	08 95       	ret

00000686 <MEF_GuardarHora>:
     686:	81 e0       	ldi	r24, 0x01	; 1
     688:	80 93 2c 02 	sts	0x022C, r24	; 0x80022c <System_state>
     68c:	8f ef       	ldi	r24, 0xFF	; 255
     68e:	80 93 2b 02 	sts	0x022B, r24	; 0x80022b <state_call_count>
     692:	80 e0       	ldi	r24, 0x00	; 0
     694:	0e 94 b7 04 	call	0x96e	; 0x96e <SCHEDULER_CambiarFormatoHora>
     698:	08 95       	ret

0000069a <MEF_ModificarHora>:
     69a:	cf 93       	push	r28
     69c:	c8 2f       	mov	r28, r24
     69e:	80 91 2b 02 	lds	r24, 0x022B	; 0x80022b <state_call_count>
     6a2:	81 11       	cpse	r24, r1
     6a4:	10 c0       	rjmp	.+32     	; 0x6c6 <MEF_ModificarHora+0x2c>
     6a6:	10 92 2a 02 	sts	0x022A, r1	; 0x80022a <cantTeclasIngresadas>
     6aa:	0e 94 94 00 	call	0x128	; 0x128 <HELPER_ClearSecondLine>
     6ae:	61 e0       	ldi	r22, 0x01	; 1
     6b0:	84 e0       	ldi	r24, 0x04	; 4
     6b2:	0e 94 77 02 	call	0x4ee	; 0x4ee <LCDGotoXY>
     6b6:	67 e0       	ldi	r22, 0x07	; 7
     6b8:	81 e4       	ldi	r24, 0x41	; 65
     6ba:	91 e0       	ldi	r25, 0x01	; 1
     6bc:	0e 94 5f 02 	call	0x4be	; 0x4be <LCDstring>
     6c0:	8c 2f       	mov	r24, r28
     6c2:	0e 94 b7 04 	call	0x96e	; 0x96e <SCHEDULER_CambiarFormatoHora>
     6c6:	89 e2       	ldi	r24, 0x29	; 41
     6c8:	92 e0       	ldi	r25, 0x02	; 2
     6ca:	0e 94 b1 00 	call	0x162	; 0x162 <KEYPAD_Scan>
     6ce:	88 23       	and	r24, r24
     6d0:	f9 f0       	breq	.+62     	; 0x710 <MEF_ModificarHora+0x76>
     6d2:	80 91 29 02 	lds	r24, 0x0229	; 0x800229 <teclaPresionada>
     6d6:	8a 30       	cpi	r24, 0x0A	; 10
     6d8:	50 f4       	brcc	.+20     	; 0x6ee <MEF_ModificarHora+0x54>
     6da:	60 91 24 02 	lds	r22, 0x0224	; 0x800224 <__data_end>
     6de:	0e 94 ba 04 	call	0x974	; 0x974 <SCHEDULER_EditarHora>
     6e2:	80 91 24 02 	lds	r24, 0x0224	; 0x800224 <__data_end>
     6e6:	8f 5f       	subi	r24, 0xFF	; 255
     6e8:	80 93 24 02 	sts	0x0224, r24	; 0x800224 <__data_end>
     6ec:	11 c0       	rjmp	.+34     	; 0x710 <MEF_ModificarHora+0x76>
     6ee:	ec 2f       	mov	r30, r28
     6f0:	f0 e0       	ldi	r31, 0x00	; 0
     6f2:	ec 5e       	subi	r30, 0xEC	; 236
     6f4:	fe 4f       	sbci	r31, 0xFE	; 254
     6f6:	90 81       	ld	r25, Z
     6f8:	89 13       	cpse	r24, r25
     6fa:	06 c0       	rjmp	.+12     	; 0x708 <MEF_ModificarHora+0x6e>
     6fc:	8c 2f       	mov	r24, r28
     6fe:	0e 94 ca 04 	call	0x994	; 0x994 <SCHEDULER_GuardarHora>
     702:	0e 94 43 03 	call	0x686	; 0x686 <MEF_GuardarHora>
     706:	04 c0       	rjmp	.+8      	; 0x710 <MEF_ModificarHora+0x76>
     708:	83 32       	cpi	r24, 0x23	; 35
     70a:	11 f4       	brne	.+4      	; 0x710 <MEF_ModificarHora+0x76>
     70c:	0e 94 43 03 	call	0x686	; 0x686 <MEF_GuardarHora>
     710:	80 91 24 02 	lds	r24, 0x0224	; 0x800224 <__data_end>
     714:	82 30       	cpi	r24, 0x02	; 2
     716:	10 f0       	brcs	.+4      	; 0x71c <MEF_ModificarHora+0x82>
     718:	10 92 24 02 	sts	0x0224, r1	; 0x800224 <__data_end>
     71c:	80 91 2b 02 	lds	r24, 0x022B	; 0x80022b <state_call_count>
     720:	88 3c       	cpi	r24, 0xC8	; 200
     722:	11 f4       	brne	.+4      	; 0x728 <MEF_ModificarHora+0x8e>
     724:	0e 94 43 03 	call	0x686	; 0x686 <MEF_GuardarHora>
     728:	cf 91       	pop	r28
     72a:	08 95       	ret

0000072c <MEF_Update>:
     72c:	80 91 2b 02 	lds	r24, 0x022B	; 0x80022b <state_call_count>
     730:	8f 5f       	subi	r24, 0xFF	; 255
     732:	80 93 2b 02 	sts	0x022B, r24	; 0x80022b <state_call_count>
     736:	90 91 2c 02 	lds	r25, 0x022C	; 0x80022c <System_state>
     73a:	92 30       	cpi	r25, 0x02	; 2
     73c:	09 f4       	brne	.+2      	; 0x740 <MEF_Update+0x14>
     73e:	a1 c0       	rjmp	.+322    	; 0x882 <__DATA_REGION_LENGTH__+0x82>
     740:	28 f4       	brcc	.+10     	; 0x74c <MEF_Update+0x20>
     742:	99 23       	and	r25, r25
     744:	61 f0       	breq	.+24     	; 0x75e <MEF_Update+0x32>
     746:	91 30       	cpi	r25, 0x01	; 1
     748:	31 f1       	breq	.+76     	; 0x796 <MEF_Update+0x6a>
     74a:	08 95       	ret
     74c:	94 30       	cpi	r25, 0x04	; 4
     74e:	09 f4       	brne	.+2      	; 0x752 <MEF_Update+0x26>
     750:	b7 c0       	rjmp	.+366    	; 0x8c0 <__DATA_REGION_LENGTH__+0xc0>
     752:	08 f4       	brcc	.+2      	; 0x756 <MEF_Update+0x2a>
     754:	b1 c0       	rjmp	.+354    	; 0x8b8 <__DATA_REGION_LENGTH__+0xb8>
     756:	95 30       	cpi	r25, 0x05	; 5
     758:	09 f4       	brne	.+2      	; 0x75c <MEF_Update+0x30>
     75a:	b6 c0       	rjmp	.+364    	; 0x8c8 <__DATA_REGION_LENGTH__+0xc8>
     75c:	08 95       	ret
     75e:	81 11       	cpse	r24, r1
     760:	0e c0       	rjmp	.+28     	; 0x77e <MEF_Update+0x52>
     762:	10 92 2a 02 	sts	0x022A, r1	; 0x80022a <cantTeclasIngresadas>
     766:	0e 94 94 00 	call	0x128	; 0x128 <HELPER_ClearSecondLine>
     76a:	61 e0       	ldi	r22, 0x01	; 1
     76c:	84 e0       	ldi	r24, 0x04	; 4
     76e:	0e 94 77 02 	call	0x4ee	; 0x4ee <LCDGotoXY>
     772:	67 e0       	ldi	r22, 0x07	; 7
     774:	89 e4       	ldi	r24, 0x49	; 73
     776:	91 e0       	ldi	r25, 0x01	; 1
     778:	0e 94 5f 02 	call	0x4be	; 0x4be <LCDstring>
     77c:	08 95       	ret
     77e:	8e 31       	cpi	r24, 0x1E	; 30
     780:	09 f0       	breq	.+2      	; 0x784 <MEF_Update+0x58>
     782:	a5 c0       	rjmp	.+330    	; 0x8ce <__DATA_REGION_LENGTH__+0xce>
     784:	0e 94 94 00 	call	0x128	; 0x128 <HELPER_ClearSecondLine>
     788:	81 e0       	ldi	r24, 0x01	; 1
     78a:	80 93 2c 02 	sts	0x022C, r24	; 0x80022c <System_state>
     78e:	8f ef       	ldi	r24, 0xFF	; 255
     790:	80 93 2b 02 	sts	0x022B, r24	; 0x80022b <state_call_count>
     794:	08 95       	ret
     796:	81 11       	cpse	r24, r1
     798:	0b c0       	rjmp	.+22     	; 0x7b0 <MEF_Update+0x84>
     79a:	0e 94 94 00 	call	0x128	; 0x128 <HELPER_ClearSecondLine>
     79e:	61 e0       	ldi	r22, 0x01	; 1
     7a0:	84 e0       	ldi	r24, 0x04	; 4
     7a2:	0e 94 77 02 	call	0x4ee	; 0x4ee <LCDGotoXY>
     7a6:	67 e0       	ldi	r22, 0x07	; 7
     7a8:	81 e4       	ldi	r24, 0x41	; 65
     7aa:	91 e0       	ldi	r25, 0x01	; 1
     7ac:	0e 94 5f 02 	call	0x4be	; 0x4be <LCDstring>
     7b0:	80 91 2b 02 	lds	r24, 0x022B	; 0x80022b <state_call_count>
     7b4:	8f 3f       	cpi	r24, 0xFF	; 255
     7b6:	19 f4       	brne	.+6      	; 0x7be <MEF_Update+0x92>
     7b8:	81 e0       	ldi	r24, 0x01	; 1
     7ba:	80 93 2b 02 	sts	0x022B, r24	; 0x80022b <state_call_count>
     7be:	80 91 2a 02 	lds	r24, 0x022A	; 0x80022a <cantTeclasIngresadas>
     7c2:	84 30       	cpi	r24, 0x04	; 4
     7c4:	91 f4       	brne	.+36     	; 0x7ea <MEF_Update+0xbe>
     7c6:	85 e2       	ldi	r24, 0x25	; 37
     7c8:	92 e0       	ldi	r25, 0x02	; 2
     7ca:	0e 94 79 00 	call	0xf2	; 0xf2 <HELPER_CheckPassword>
     7ce:	81 30       	cpi	r24, 0x01	; 1
     7d0:	31 f4       	brne	.+12     	; 0x7de <MEF_Update+0xb2>
     7d2:	10 92 2c 02 	sts	0x022C, r1	; 0x80022c <System_state>
     7d6:	8f ef       	ldi	r24, 0xFF	; 255
     7d8:	80 93 2b 02 	sts	0x022B, r24	; 0x80022b <state_call_count>
     7dc:	06 c0       	rjmp	.+12     	; 0x7ea <MEF_Update+0xbe>
     7de:	82 e0       	ldi	r24, 0x02	; 2
     7e0:	80 93 2c 02 	sts	0x022C, r24	; 0x80022c <System_state>
     7e4:	8f ef       	ldi	r24, 0xFF	; 255
     7e6:	80 93 2b 02 	sts	0x022B, r24	; 0x80022b <state_call_count>
     7ea:	89 e2       	ldi	r24, 0x29	; 41
     7ec:	92 e0       	ldi	r25, 0x02	; 2
     7ee:	0e 94 b1 00 	call	0x162	; 0x162 <KEYPAD_Scan>
     7f2:	88 23       	and	r24, r24
     7f4:	09 f4       	brne	.+2      	; 0x7f8 <MEF_Update+0xcc>
     7f6:	6b c0       	rjmp	.+214    	; 0x8ce <__DATA_REGION_LENGTH__+0xce>
     7f8:	80 91 29 02 	lds	r24, 0x0229	; 0x800229 <teclaPresionada>
     7fc:	81 34       	cpi	r24, 0x41	; 65
     7fe:	69 f0       	breq	.+26     	; 0x81a <__DATA_REGION_LENGTH__+0x1a>
     800:	30 f4       	brcc	.+12     	; 0x80e <__DATA_REGION_LENGTH__+0xe>
     802:	83 32       	cpi	r24, 0x23	; 35
     804:	09 f4       	brne	.+2      	; 0x808 <__DATA_REGION_LENGTH__+0x8>
     806:	63 c0       	rjmp	.+198    	; 0x8ce <__DATA_REGION_LENGTH__+0xce>
     808:	8a 32       	cpi	r24, 0x2A	; 42
     80a:	e1 f4       	brne	.+56     	; 0x844 <__DATA_REGION_LENGTH__+0x44>
     80c:	08 95       	ret
     80e:	83 34       	cpi	r24, 0x43	; 67
     810:	91 f0       	breq	.+36     	; 0x836 <__DATA_REGION_LENGTH__+0x36>
     812:	50 f0       	brcs	.+20     	; 0x828 <__DATA_REGION_LENGTH__+0x28>
     814:	84 34       	cpi	r24, 0x44	; 68
     816:	b1 f4       	brne	.+44     	; 0x844 <__DATA_REGION_LENGTH__+0x44>
     818:	08 95       	ret
     81a:	83 e0       	ldi	r24, 0x03	; 3
     81c:	80 93 2c 02 	sts	0x022C, r24	; 0x80022c <System_state>
     820:	8f ef       	ldi	r24, 0xFF	; 255
     822:	80 93 2b 02 	sts	0x022B, r24	; 0x80022b <state_call_count>
     826:	08 95       	ret
     828:	84 e0       	ldi	r24, 0x04	; 4
     82a:	80 93 2c 02 	sts	0x022C, r24	; 0x80022c <System_state>
     82e:	8f ef       	ldi	r24, 0xFF	; 255
     830:	80 93 2b 02 	sts	0x022B, r24	; 0x80022b <state_call_count>
     834:	08 95       	ret
     836:	85 e0       	ldi	r24, 0x05	; 5
     838:	80 93 2c 02 	sts	0x022C, r24	; 0x80022c <System_state>
     83c:	8f ef       	ldi	r24, 0xFF	; 255
     83e:	80 93 2b 02 	sts	0x022B, r24	; 0x80022b <state_call_count>
     842:	08 95       	ret
     844:	0e 94 94 00 	call	0x128	; 0x128 <HELPER_ClearSecondLine>
     848:	61 e0       	ldi	r22, 0x01	; 1
     84a:	86 e0       	ldi	r24, 0x06	; 6
     84c:	0e 94 77 02 	call	0x4ee	; 0x4ee <LCDGotoXY>
     850:	80 91 2a 02 	lds	r24, 0x022A	; 0x80022a <cantTeclasIngresadas>
     854:	90 e0       	ldi	r25, 0x00	; 0
     856:	88 0f       	add	r24, r24
     858:	99 1f       	adc	r25, r25
     85a:	88 0f       	add	r24, r24
     85c:	99 1f       	adc	r25, r25
     85e:	64 e0       	ldi	r22, 0x04	; 4
     860:	8b 5f       	subi	r24, 0xFB	; 251
     862:	9e 4f       	sbci	r25, 0xFE	; 254
     864:	0e 94 5f 02 	call	0x4be	; 0x4be <LCDstring>
     868:	80 91 2a 02 	lds	r24, 0x022A	; 0x80022a <cantTeclasIngresadas>
     86c:	e8 2f       	mov	r30, r24
     86e:	f0 e0       	ldi	r31, 0x00	; 0
     870:	eb 5d       	subi	r30, 0xDB	; 219
     872:	fd 4f       	sbci	r31, 0xFD	; 253
     874:	90 91 29 02 	lds	r25, 0x0229	; 0x800229 <teclaPresionada>
     878:	90 83       	st	Z, r25
     87a:	8f 5f       	subi	r24, 0xFF	; 255
     87c:	80 93 2a 02 	sts	0x022A, r24	; 0x80022a <cantTeclasIngresadas>
     880:	08 95       	ret
     882:	81 11       	cpse	r24, r1
     884:	0e c0       	rjmp	.+28     	; 0x8a2 <__DATA_REGION_LENGTH__+0xa2>
     886:	10 92 2a 02 	sts	0x022A, r1	; 0x80022a <cantTeclasIngresadas>
     88a:	0e 94 94 00 	call	0x128	; 0x128 <HELPER_ClearSecondLine>
     88e:	61 e0       	ldi	r22, 0x01	; 1
     890:	84 e0       	ldi	r24, 0x04	; 4
     892:	0e 94 77 02 	call	0x4ee	; 0x4ee <LCDGotoXY>
     896:	68 e0       	ldi	r22, 0x08	; 8
     898:	81 e5       	ldi	r24, 0x51	; 81
     89a:	91 e0       	ldi	r25, 0x01	; 1
     89c:	0e 94 5f 02 	call	0x4be	; 0x4be <LCDstring>
     8a0:	08 95       	ret
     8a2:	84 31       	cpi	r24, 0x14	; 20
     8a4:	a1 f4       	brne	.+40     	; 0x8ce <__DATA_REGION_LENGTH__+0xce>
     8a6:	0e 94 94 00 	call	0x128	; 0x128 <HELPER_ClearSecondLine>
     8aa:	81 e0       	ldi	r24, 0x01	; 1
     8ac:	80 93 2c 02 	sts	0x022C, r24	; 0x80022c <System_state>
     8b0:	8f ef       	ldi	r24, 0xFF	; 255
     8b2:	80 93 2b 02 	sts	0x022B, r24	; 0x80022b <state_call_count>
     8b6:	08 95       	ret
     8b8:	81 e0       	ldi	r24, 0x01	; 1
     8ba:	0e 94 4d 03 	call	0x69a	; 0x69a <MEF_ModificarHora>
     8be:	08 95       	ret
     8c0:	82 e0       	ldi	r24, 0x02	; 2
     8c2:	0e 94 4d 03 	call	0x69a	; 0x69a <MEF_ModificarHora>
     8c6:	08 95       	ret
     8c8:	83 e0       	ldi	r24, 0x03	; 3
     8ca:	0e 94 4d 03 	call	0x69a	; 0x69a <MEF_ModificarHora>
     8ce:	08 95       	ret

000008d0 <SCHEDULER_Init>:
int8_t nuevaHora;
/**
*	
*	TIMER0_Init: Inicia el timer configurando los registros correspondientes, lee el tiempo de compilacion y crea las variables de conteo temporal.*/
void SCHEDULER_Init(void){
	TCCR0B |= (1 << CS02) | (1 << CS00); // Selecciona un prescaler de 1024 para el temporizador Timer0
     8d0:	85 b5       	in	r24, 0x25	; 37
     8d2:	85 60       	ori	r24, 0x05	; 5
     8d4:	85 bd       	out	0x25, r24	; 37
	TCCR0A |= (1 << WGM01); // Configura el temporizador Timer0 en modo de comparación (CTC)
     8d6:	84 b5       	in	r24, 0x24	; 36
     8d8:	82 60       	ori	r24, 0x02	; 2
     8da:	84 bd       	out	0x24, r24	; 36
	OCR0A = 155;	// Carga el valor adecuado en el registro de comparación (OCR0A) para generar la interrupción cada 10ms
     8dc:	8b e9       	ldi	r24, 0x9B	; 155
     8de:	87 bd       	out	0x27, r24	; 39
	TIMSK0 |= (1 << OCIE0A); 	// Habilita las interrupciones del temporizador Timer0
     8e0:	ee e6       	ldi	r30, 0x6E	; 110
     8e2:	f0 e0       	ldi	r31, 0x00	; 0
     8e4:	80 81       	ld	r24, Z
     8e6:	82 60       	ori	r24, 0x02	; 2
     8e8:	80 83       	st	Z, r24
	sei();
     8ea:	78 94       	sei
	sscanf(__TIME__, "%hhu:%hhu:%hhu", &horas, &minutos, &segundos); // Lee la hora de compilación y la guarda en las variables correspondientes
     8ec:	84 e3       	ldi	r24, 0x34	; 52
     8ee:	92 e0       	ldi	r25, 0x02	; 2
     8f0:	9f 93       	push	r25
     8f2:	8f 93       	push	r24
     8f4:	83 e3       	ldi	r24, 0x33	; 51
     8f6:	92 e0       	ldi	r25, 0x02	; 2
     8f8:	9f 93       	push	r25
     8fa:	8f 93       	push	r24
     8fc:	82 e3       	ldi	r24, 0x32	; 50
     8fe:	92 e0       	ldi	r25, 0x02	; 2
     900:	9f 93       	push	r25
     902:	8f 93       	push	r24
     904:	8a e5       	ldi	r24, 0x5A	; 90
     906:	91 e0       	ldi	r25, 0x01	; 1
     908:	9f 93       	push	r25
     90a:	8f 93       	push	r24
     90c:	89 e6       	ldi	r24, 0x69	; 105
     90e:	91 e0       	ldi	r25, 0x01	; 1
     910:	9f 93       	push	r25
     912:	8f 93       	push	r24
     914:	0e 94 96 07 	call	0xf2c	; 0xf2c <sscanf>
	formatoHora = 0;
     918:	10 92 31 02 	sts	0x0231, r1	; 0x800231 <formatoHora>
}
     91c:	8d b7       	in	r24, 0x3d	; 61
     91e:	9e b7       	in	r25, 0x3e	; 62
     920:	0a 96       	adiw	r24, 0x0a	; 10
     922:	0f b6       	in	r0, 0x3f	; 63
     924:	f8 94       	cli
     926:	9e bf       	out	0x3e, r25	; 62
     928:	0f be       	out	0x3f, r0	; 63
     92a:	8d bf       	out	0x3d, r24	; 61
     92c:	08 95       	ret

0000092e <SCHEDULER_IncrementarSec>:

/**
*
*	TIMER0_IncrementarSec: Se llama cada 98 ticks (1 segundo) y actualiza las variables de tiempo.	*/
void SCHEDULER_IncrementarSec(void){ 
	segundos++;
     92e:	80 91 34 02 	lds	r24, 0x0234	; 0x800234 <segundos>
     932:	8f 5f       	subi	r24, 0xFF	; 255
     934:	80 93 34 02 	sts	0x0234, r24	; 0x800234 <segundos>
    if (segundos > 59)
     938:	8c 33       	cpi	r24, 0x3C	; 60
     93a:	38 f0       	brcs	.+14     	; 0x94a <SCHEDULER_IncrementarSec+0x1c>
    {
        segundos = 0;
     93c:	10 92 34 02 	sts	0x0234, r1	; 0x800234 <segundos>
        minutos++;
     940:	80 91 33 02 	lds	r24, 0x0233	; 0x800233 <minutos>
     944:	8f 5f       	subi	r24, 0xFF	; 255
     946:	80 93 33 02 	sts	0x0233, r24	; 0x800233 <minutos>
    }
    if (minutos > 59)
     94a:	80 91 33 02 	lds	r24, 0x0233	; 0x800233 <minutos>
     94e:	8c 33       	cpi	r24, 0x3C	; 60
     950:	38 f0       	brcs	.+14     	; 0x960 <SCHEDULER_IncrementarSec+0x32>
    {
        minutos = 0;
     952:	10 92 33 02 	sts	0x0233, r1	; 0x800233 <minutos>
        horas++;
     956:	80 91 32 02 	lds	r24, 0x0232	; 0x800232 <horas>
     95a:	8f 5f       	subi	r24, 0xFF	; 255
     95c:	80 93 32 02 	sts	0x0232, r24	; 0x800232 <horas>
    }
    if (horas > 23)
     960:	80 91 32 02 	lds	r24, 0x0232	; 0x800232 <horas>
     964:	88 31       	cpi	r24, 0x18	; 24
     966:	10 f0       	brcs	.+4      	; 0x96c <SCHEDULER_IncrementarSec+0x3e>
    {
        horas = 0;
     968:	10 92 32 02 	sts	0x0232, r1	; 0x800232 <horas>
     96c:	08 95       	ret

0000096e <SCHEDULER_CambiarFormatoHora>:
/**
*	Cambia el formato impresion de la hora.
*	@param {uint8_t} selec */

void SCHEDULER_CambiarFormatoHora(uint8_t selec){
	formatoHora = selec;
     96e:	80 93 31 02 	sts	0x0231, r24	; 0x800231 <formatoHora>
     972:	08 95       	ret

00000974 <SCHEDULER_EditarHora>:
*	@param {uint8_t} num: Contiene el nuevo digito a almacenar en la hora. 
*	@param {uint8_t} desplazador: Contiene un valor 0 o 1 que indica que digito de la hora se esta modificando. 
*	@param {uint8_t} selec: Contiene un valor 1,2,3 que indica que variable de tiempo se esta modificando siendo horas, minutos, segundos respectivamente. */

void SCHEDULER_EditarHora(uint8_t num, uint8_t desplazador) { 
	if (desplazador == 0) {
     974:	61 11       	cpse	r22, r1
     976:	03 c0       	rjmp	.+6      	; 0x97e <SCHEDULER_EditarHora+0xa>
		nuevaHora = num;
     978:	80 93 37 02 	sts	0x0237, r24	; 0x800237 <nuevaHora>
     97c:	08 95       	ret
	} else {
		nuevaHora = nuevaHora*10 + num;
     97e:	90 91 37 02 	lds	r25, 0x0237	; 0x800237 <nuevaHora>
     982:	99 0f       	add	r25, r25
     984:	29 2f       	mov	r18, r25
     986:	22 0f       	add	r18, r18
     988:	22 0f       	add	r18, r18
     98a:	92 0f       	add	r25, r18
     98c:	89 0f       	add	r24, r25
     98e:	80 93 37 02 	sts	0x0237, r24	; 0x800237 <nuevaHora>
     992:	08 95       	ret

00000994 <SCHEDULER_GuardarHora>:
/**
*	Comprueba si la modificacion realizada en la hora es valida y la almacena.
*	@param {uint8_t} selec: Contiene un valor 1,2,3 que indica que variable de tiempo se esta modificando siendo horas, minutos, segundos respectivamente. */

void SCHEDULER_GuardarHora(uint8_t selec) {
	switch (selec) {
     994:	82 30       	cpi	r24, 0x02	; 2
     996:	59 f0       	breq	.+22     	; 0x9ae <SCHEDULER_GuardarHora+0x1a>
     998:	83 30       	cpi	r24, 0x03	; 3
     99a:	81 f0       	breq	.+32     	; 0x9bc <SCHEDULER_GuardarHora+0x28>
     99c:	81 30       	cpi	r24, 0x01	; 1
     99e:	a1 f4       	brne	.+40     	; 0x9c8 <SCHEDULER_GuardarHora+0x34>
		case 1: 
		if (nuevaHora <= 23) {
     9a0:	80 91 37 02 	lds	r24, 0x0237	; 0x800237 <nuevaHora>
     9a4:	88 31       	cpi	r24, 0x18	; 24
     9a6:	84 f4       	brge	.+32     	; 0x9c8 <SCHEDULER_GuardarHora+0x34>
			horas = nuevaHora;
     9a8:	80 93 32 02 	sts	0x0232, r24	; 0x800232 <horas>
     9ac:	08 95       	ret
		}
		break;
		case 2:
		if (nuevaHora <= 59) {
     9ae:	80 91 37 02 	lds	r24, 0x0237	; 0x800237 <nuevaHora>
     9b2:	8c 33       	cpi	r24, 0x3C	; 60
     9b4:	4c f4       	brge	.+18     	; 0x9c8 <SCHEDULER_GuardarHora+0x34>
			minutos = nuevaHora;
     9b6:	80 93 33 02 	sts	0x0233, r24	; 0x800233 <minutos>
     9ba:	08 95       	ret
		}
		break;
		case 3:
		if (nuevaHora <= 59) {
     9bc:	80 91 37 02 	lds	r24, 0x0237	; 0x800237 <nuevaHora>
     9c0:	8c 33       	cpi	r24, 0x3C	; 60
     9c2:	14 f4       	brge	.+4      	; 0x9c8 <SCHEDULER_GuardarHora+0x34>
			segundos = nuevaHora;
     9c4:	80 93 34 02 	sts	0x0234, r24	; 0x800234 <segundos>
     9c8:	08 95       	ret

000009ca <SCHEDULER_ImprimirHora>:
*		0 Modo normal			--> 00:00:00			
*		1 Modo edicion horas	-->  _:00:00 ,   :00:00, _0:00:00,  0:00:00
*		2 Modo edicion minutos	--> 00: _:00 , 00:  :00, 00:_0:00,  0: 0:00
*		3 Modo edicion segundos	--> 00:00: _ , 00:00:  , 00:00:_0,  0:00: 0		*/

void SCHEDULER_ImprimirHora() {
     9ca:	cf 93       	push	r28
     9cc:	df 93       	push	r29
     9ce:	cd b7       	in	r28, 0x3d	; 61
     9d0:	de b7       	in	r29, 0x3e	; 62
     9d2:	28 97       	sbiw	r28, 0x08	; 8
     9d4:	0f b6       	in	r0, 0x3f	; 63
     9d6:	f8 94       	cli
     9d8:	de bf       	out	0x3e, r29	; 62
     9da:	0f be       	out	0x3f, r0	; 63
     9dc:	cd bf       	out	0x3d, r28	; 61
	LCDGotoXY(4,0);
     9de:	60 e0       	ldi	r22, 0x00	; 0
     9e0:	84 e0       	ldi	r24, 0x04	; 4
     9e2:	0e 94 77 02 	call	0x4ee	; 0x4ee <LCDGotoXY>
	char horario[8];
	switch (formatoHora) {	// Dependiendo del formato de hora elegido, imprime en modo normal o edicion.
     9e6:	80 91 31 02 	lds	r24, 0x0231	; 0x800231 <formatoHora>
     9ea:	81 30       	cpi	r24, 0x01	; 1
     9ec:	39 f1       	breq	.+78     	; 0xa3c <SCHEDULER_ImprimirHora+0x72>
     9ee:	38 f0       	brcs	.+14     	; 0x9fe <SCHEDULER_ImprimirHora+0x34>
     9f0:	82 30       	cpi	r24, 0x02	; 2
     9f2:	09 f4       	brne	.+2      	; 0x9f6 <SCHEDULER_ImprimirHora+0x2c>
     9f4:	ce c0       	rjmp	.+412    	; 0xb92 <SCHEDULER_ImprimirHora+0x1c8>
     9f6:	83 30       	cpi	r24, 0x03	; 3
     9f8:	09 f4       	brne	.+2      	; 0x9fc <SCHEDULER_ImprimirHora+0x32>
     9fa:	76 c1       	rjmp	.+748    	; 0xce8 <SCHEDULER_ImprimirHora+0x31e>
     9fc:	1f c2       	rjmp	.+1086   	; 0xe3c <SCHEDULER_ImprimirHora+0x472>
		case 0: // Modo normal
			sprintf(horario, "%02d:%02d:%02d", horas, minutos, segundos);
     9fe:	80 91 34 02 	lds	r24, 0x0234	; 0x800234 <segundos>
     a02:	1f 92       	push	r1
     a04:	8f 93       	push	r24
     a06:	80 91 33 02 	lds	r24, 0x0233	; 0x800233 <minutos>
     a0a:	1f 92       	push	r1
     a0c:	8f 93       	push	r24
     a0e:	80 91 32 02 	lds	r24, 0x0232	; 0x800232 <horas>
     a12:	1f 92       	push	r1
     a14:	8f 93       	push	r24
     a16:	82 e7       	ldi	r24, 0x72	; 114
     a18:	91 e0       	ldi	r25, 0x01	; 1
     a1a:	9f 93       	push	r25
     a1c:	8f 93       	push	r24
     a1e:	ce 01       	movw	r24, r28
     a20:	01 96       	adiw	r24, 0x01	; 1
     a22:	9f 93       	push	r25
     a24:	8f 93       	push	r24
     a26:	0e 94 74 07 	call	0xee8	; 0xee8 <sprintf>
			nuevaHora = -1;
     a2a:	8f ef       	ldi	r24, 0xFF	; 255
     a2c:	80 93 37 02 	sts	0x0237, r24	; 0x800237 <nuevaHora>
		break;
     a30:	0f b6       	in	r0, 0x3f	; 63
     a32:	f8 94       	cli
     a34:	de bf       	out	0x3e, r29	; 62
     a36:	0f be       	out	0x3f, r0	; 63
     a38:	cd bf       	out	0x3d, r28	; 61
     a3a:	00 c2       	rjmp	.+1024   	; 0xe3c <SCHEDULER_ImprimirHora+0x472>
		case 1: // Modo edicion horas
			if ((nuevaHora == -1) & (cursor_flag)) {
     a3c:	30 91 37 02 	lds	r19, 0x0237	; 0x800237 <nuevaHora>
     a40:	21 e0       	ldi	r18, 0x01	; 1
     a42:	3f 3f       	cpi	r19, 0xFF	; 255
     a44:	09 f0       	breq	.+2      	; 0xa48 <SCHEDULER_ImprimirHora+0x7e>
     a46:	20 e0       	ldi	r18, 0x00	; 0
     a48:	82 2f       	mov	r24, r18
     a4a:	90 e0       	ldi	r25, 0x00	; 0
     a4c:	40 91 30 02 	lds	r20, 0x0230	; 0x800230 <cursor_flag>
     a50:	64 2f       	mov	r22, r20
     a52:	70 e0       	ldi	r23, 0x00	; 0
     a54:	86 23       	and	r24, r22
     a56:	97 23       	and	r25, r23
     a58:	89 2b       	or	r24, r25
     a5a:	c1 f0       	breq	.+48     	; 0xa8c <SCHEDULER_ImprimirHora+0xc2>
				sprintf(horario, " _:%02d:%02d", minutos, segundos);	
     a5c:	80 91 34 02 	lds	r24, 0x0234	; 0x800234 <segundos>
     a60:	1f 92       	push	r1
     a62:	8f 93       	push	r24
     a64:	80 91 33 02 	lds	r24, 0x0233	; 0x800233 <minutos>
     a68:	1f 92       	push	r1
     a6a:	8f 93       	push	r24
     a6c:	81 e8       	ldi	r24, 0x81	; 129
     a6e:	91 e0       	ldi	r25, 0x01	; 1
     a70:	9f 93       	push	r25
     a72:	8f 93       	push	r24
     a74:	ce 01       	movw	r24, r28
     a76:	01 96       	adiw	r24, 0x01	; 1
     a78:	9f 93       	push	r25
     a7a:	8f 93       	push	r24
     a7c:	0e 94 74 07 	call	0xee8	; 0xee8 <sprintf>
     a80:	0f b6       	in	r0, 0x3f	; 63
     a82:	f8 94       	cli
     a84:	de bf       	out	0x3e, r29	; 62
     a86:	0f be       	out	0x3f, r0	; 63
     a88:	cd bf       	out	0x3d, r28	; 61
     a8a:	d8 c1       	rjmp	.+944    	; 0xe3c <SCHEDULER_ImprimirHora+0x472>
			} else if ((nuevaHora == -1) & !(cursor_flag)) {
     a8c:	91 e0       	ldi	r25, 0x01	; 1
     a8e:	41 11       	cpse	r20, r1
     a90:	90 e0       	ldi	r25, 0x00	; 0
     a92:	29 23       	and	r18, r25
     a94:	c1 f0       	breq	.+48     	; 0xac6 <SCHEDULER_ImprimirHora+0xfc>
				sprintf(horario, "  :%02d:%02d", minutos, segundos);
     a96:	80 91 34 02 	lds	r24, 0x0234	; 0x800234 <segundos>
     a9a:	1f 92       	push	r1
     a9c:	8f 93       	push	r24
     a9e:	80 91 33 02 	lds	r24, 0x0233	; 0x800233 <minutos>
     aa2:	1f 92       	push	r1
     aa4:	8f 93       	push	r24
     aa6:	8e e8       	ldi	r24, 0x8E	; 142
     aa8:	91 e0       	ldi	r25, 0x01	; 1
     aaa:	9f 93       	push	r25
     aac:	8f 93       	push	r24
     aae:	ce 01       	movw	r24, r28
     ab0:	01 96       	adiw	r24, 0x01	; 1
     ab2:	9f 93       	push	r25
     ab4:	8f 93       	push	r24
     ab6:	0e 94 74 07 	call	0xee8	; 0xee8 <sprintf>
     aba:	0f b6       	in	r0, 0x3f	; 63
     abc:	f8 94       	cli
     abe:	de bf       	out	0x3e, r29	; 62
     ac0:	0f be       	out	0x3f, r0	; 63
     ac2:	cd bf       	out	0x3d, r28	; 61
     ac4:	bb c1       	rjmp	.+886    	; 0xe3c <SCHEDULER_ImprimirHora+0x472>
			} else if ((nuevaHora < 9) & (cursor_flag)) {
     ac6:	81 e0       	ldi	r24, 0x01	; 1
     ac8:	39 30       	cpi	r19, 0x09	; 9
     aca:	0c f0       	brlt	.+2      	; 0xace <SCHEDULER_ImprimirHora+0x104>
     acc:	80 e0       	ldi	r24, 0x00	; 0
     ace:	48 2f       	mov	r20, r24
     ad0:	50 e0       	ldi	r21, 0x00	; 0
     ad2:	64 23       	and	r22, r20
     ad4:	75 23       	and	r23, r21
     ad6:	67 2b       	or	r22, r23
     ad8:	f1 f0       	breq	.+60     	; 0xb16 <SCHEDULER_ImprimirHora+0x14c>
				sprintf(horario, "_%d:%02d:%02d", nuevaHora, minutos, segundos);
     ada:	80 91 34 02 	lds	r24, 0x0234	; 0x800234 <segundos>
     ade:	1f 92       	push	r1
     ae0:	8f 93       	push	r24
     ae2:	80 91 33 02 	lds	r24, 0x0233	; 0x800233 <minutos>
     ae6:	1f 92       	push	r1
     ae8:	8f 93       	push	r24
     aea:	83 2f       	mov	r24, r19
     aec:	03 2e       	mov	r0, r19
     aee:	00 0c       	add	r0, r0
     af0:	99 0b       	sbc	r25, r25
     af2:	9f 93       	push	r25
     af4:	3f 93       	push	r19
     af6:	8b e9       	ldi	r24, 0x9B	; 155
     af8:	91 e0       	ldi	r25, 0x01	; 1
     afa:	9f 93       	push	r25
     afc:	8f 93       	push	r24
     afe:	ce 01       	movw	r24, r28
     b00:	01 96       	adiw	r24, 0x01	; 1
     b02:	9f 93       	push	r25
     b04:	8f 93       	push	r24
     b06:	0e 94 74 07 	call	0xee8	; 0xee8 <sprintf>
     b0a:	0f b6       	in	r0, 0x3f	; 63
     b0c:	f8 94       	cli
     b0e:	de bf       	out	0x3e, r29	; 62
     b10:	0f be       	out	0x3f, r0	; 63
     b12:	cd bf       	out	0x3d, r28	; 61
     b14:	93 c1       	rjmp	.+806    	; 0xe3c <SCHEDULER_ImprimirHora+0x472>
			} else if ((nuevaHora < 9) & !(cursor_flag)) {
     b16:	89 23       	and	r24, r25
     b18:	f1 f0       	breq	.+60     	; 0xb56 <SCHEDULER_ImprimirHora+0x18c>
				sprintf(horario, " %d:%02d:%02d", nuevaHora, minutos, segundos);
     b1a:	80 91 34 02 	lds	r24, 0x0234	; 0x800234 <segundos>
     b1e:	1f 92       	push	r1
     b20:	8f 93       	push	r24
     b22:	80 91 33 02 	lds	r24, 0x0233	; 0x800233 <minutos>
     b26:	1f 92       	push	r1
     b28:	8f 93       	push	r24
     b2a:	83 2f       	mov	r24, r19
     b2c:	03 2e       	mov	r0, r19
     b2e:	00 0c       	add	r0, r0
     b30:	99 0b       	sbc	r25, r25
     b32:	9f 93       	push	r25
     b34:	3f 93       	push	r19
     b36:	89 ea       	ldi	r24, 0xA9	; 169
     b38:	91 e0       	ldi	r25, 0x01	; 1
     b3a:	9f 93       	push	r25
     b3c:	8f 93       	push	r24
     b3e:	ce 01       	movw	r24, r28
     b40:	01 96       	adiw	r24, 0x01	; 1
     b42:	9f 93       	push	r25
     b44:	8f 93       	push	r24
     b46:	0e 94 74 07 	call	0xee8	; 0xee8 <sprintf>
     b4a:	0f b6       	in	r0, 0x3f	; 63
     b4c:	f8 94       	cli
     b4e:	de bf       	out	0x3e, r29	; 62
     b50:	0f be       	out	0x3f, r0	; 63
     b52:	cd bf       	out	0x3d, r28	; 61
     b54:	73 c1       	rjmp	.+742    	; 0xe3c <SCHEDULER_ImprimirHora+0x472>
			} else {
				sprintf(horario, "%02d:%02d:%02d", nuevaHora, minutos, segundos);
     b56:	80 91 34 02 	lds	r24, 0x0234	; 0x800234 <segundos>
     b5a:	1f 92       	push	r1
     b5c:	8f 93       	push	r24
     b5e:	80 91 33 02 	lds	r24, 0x0233	; 0x800233 <minutos>
     b62:	1f 92       	push	r1
     b64:	8f 93       	push	r24
     b66:	83 2f       	mov	r24, r19
     b68:	03 2e       	mov	r0, r19
     b6a:	00 0c       	add	r0, r0
     b6c:	99 0b       	sbc	r25, r25
     b6e:	9f 93       	push	r25
     b70:	3f 93       	push	r19
     b72:	82 e7       	ldi	r24, 0x72	; 114
     b74:	91 e0       	ldi	r25, 0x01	; 1
     b76:	9f 93       	push	r25
     b78:	8f 93       	push	r24
     b7a:	ce 01       	movw	r24, r28
     b7c:	01 96       	adiw	r24, 0x01	; 1
     b7e:	9f 93       	push	r25
     b80:	8f 93       	push	r24
     b82:	0e 94 74 07 	call	0xee8	; 0xee8 <sprintf>
     b86:	0f b6       	in	r0, 0x3f	; 63
     b88:	f8 94       	cli
     b8a:	de bf       	out	0x3e, r29	; 62
     b8c:	0f be       	out	0x3f, r0	; 63
     b8e:	cd bf       	out	0x3d, r28	; 61
     b90:	55 c1       	rjmp	.+682    	; 0xe3c <SCHEDULER_ImprimirHora+0x472>
			}
		break;	
		case 2: // Modo edicion minutos
			if ((nuevaHora == -1) & (cursor_flag)) {
     b92:	30 91 37 02 	lds	r19, 0x0237	; 0x800237 <nuevaHora>
     b96:	21 e0       	ldi	r18, 0x01	; 1
     b98:	3f 3f       	cpi	r19, 0xFF	; 255
     b9a:	09 f0       	breq	.+2      	; 0xb9e <SCHEDULER_ImprimirHora+0x1d4>
     b9c:	20 e0       	ldi	r18, 0x00	; 0
     b9e:	82 2f       	mov	r24, r18
     ba0:	90 e0       	ldi	r25, 0x00	; 0
     ba2:	40 91 30 02 	lds	r20, 0x0230	; 0x800230 <cursor_flag>
     ba6:	64 2f       	mov	r22, r20
     ba8:	70 e0       	ldi	r23, 0x00	; 0
     baa:	86 23       	and	r24, r22
     bac:	97 23       	and	r25, r23
     bae:	89 2b       	or	r24, r25
     bb0:	c1 f0       	breq	.+48     	; 0xbe2 <SCHEDULER_ImprimirHora+0x218>
				sprintf(horario, "%02d: _:%02d", horas, segundos);	
     bb2:	80 91 34 02 	lds	r24, 0x0234	; 0x800234 <segundos>
     bb6:	1f 92       	push	r1
     bb8:	8f 93       	push	r24
     bba:	80 91 32 02 	lds	r24, 0x0232	; 0x800232 <horas>
     bbe:	1f 92       	push	r1
     bc0:	8f 93       	push	r24
     bc2:	87 eb       	ldi	r24, 0xB7	; 183
     bc4:	91 e0       	ldi	r25, 0x01	; 1
     bc6:	9f 93       	push	r25
     bc8:	8f 93       	push	r24
     bca:	ce 01       	movw	r24, r28
     bcc:	01 96       	adiw	r24, 0x01	; 1
     bce:	9f 93       	push	r25
     bd0:	8f 93       	push	r24
     bd2:	0e 94 74 07 	call	0xee8	; 0xee8 <sprintf>
     bd6:	0f b6       	in	r0, 0x3f	; 63
     bd8:	f8 94       	cli
     bda:	de bf       	out	0x3e, r29	; 62
     bdc:	0f be       	out	0x3f, r0	; 63
     bde:	cd bf       	out	0x3d, r28	; 61
     be0:	2d c1       	rjmp	.+602    	; 0xe3c <SCHEDULER_ImprimirHora+0x472>
			} else if ((nuevaHora == -1) & !(cursor_flag)) {
     be2:	91 e0       	ldi	r25, 0x01	; 1
     be4:	41 11       	cpse	r20, r1
     be6:	90 e0       	ldi	r25, 0x00	; 0
     be8:	29 23       	and	r18, r25
     bea:	c1 f0       	breq	.+48     	; 0xc1c <SCHEDULER_ImprimirHora+0x252>
				sprintf(horario, "%02d:  :%02d", horas, segundos);
     bec:	80 91 34 02 	lds	r24, 0x0234	; 0x800234 <segundos>
     bf0:	1f 92       	push	r1
     bf2:	8f 93       	push	r24
     bf4:	80 91 32 02 	lds	r24, 0x0232	; 0x800232 <horas>
     bf8:	1f 92       	push	r1
     bfa:	8f 93       	push	r24
     bfc:	84 ec       	ldi	r24, 0xC4	; 196
     bfe:	91 e0       	ldi	r25, 0x01	; 1
     c00:	9f 93       	push	r25
     c02:	8f 93       	push	r24
     c04:	ce 01       	movw	r24, r28
     c06:	01 96       	adiw	r24, 0x01	; 1
     c08:	9f 93       	push	r25
     c0a:	8f 93       	push	r24
     c0c:	0e 94 74 07 	call	0xee8	; 0xee8 <sprintf>
     c10:	0f b6       	in	r0, 0x3f	; 63
     c12:	f8 94       	cli
     c14:	de bf       	out	0x3e, r29	; 62
     c16:	0f be       	out	0x3f, r0	; 63
     c18:	cd bf       	out	0x3d, r28	; 61
     c1a:	10 c1       	rjmp	.+544    	; 0xe3c <SCHEDULER_ImprimirHora+0x472>
			} else if ((nuevaHora < 9) & (cursor_flag)) {
     c1c:	81 e0       	ldi	r24, 0x01	; 1
     c1e:	39 30       	cpi	r19, 0x09	; 9
     c20:	0c f0       	brlt	.+2      	; 0xc24 <SCHEDULER_ImprimirHora+0x25a>
     c22:	80 e0       	ldi	r24, 0x00	; 0
     c24:	48 2f       	mov	r20, r24
     c26:	50 e0       	ldi	r21, 0x00	; 0
     c28:	64 23       	and	r22, r20
     c2a:	75 23       	and	r23, r21
     c2c:	67 2b       	or	r22, r23
     c2e:	f1 f0       	breq	.+60     	; 0xc6c <SCHEDULER_ImprimirHora+0x2a2>
				sprintf(horario, "%02d:_%d:%02d", horas, nuevaHora, segundos);
     c30:	80 91 34 02 	lds	r24, 0x0234	; 0x800234 <segundos>
     c34:	1f 92       	push	r1
     c36:	8f 93       	push	r24
     c38:	83 2f       	mov	r24, r19
     c3a:	03 2e       	mov	r0, r19
     c3c:	00 0c       	add	r0, r0
     c3e:	99 0b       	sbc	r25, r25
     c40:	9f 93       	push	r25
     c42:	3f 93       	push	r19
     c44:	80 91 32 02 	lds	r24, 0x0232	; 0x800232 <horas>
     c48:	1f 92       	push	r1
     c4a:	8f 93       	push	r24
     c4c:	81 ed       	ldi	r24, 0xD1	; 209
     c4e:	91 e0       	ldi	r25, 0x01	; 1
     c50:	9f 93       	push	r25
     c52:	8f 93       	push	r24
     c54:	ce 01       	movw	r24, r28
     c56:	01 96       	adiw	r24, 0x01	; 1
     c58:	9f 93       	push	r25
     c5a:	8f 93       	push	r24
     c5c:	0e 94 74 07 	call	0xee8	; 0xee8 <sprintf>
     c60:	0f b6       	in	r0, 0x3f	; 63
     c62:	f8 94       	cli
     c64:	de bf       	out	0x3e, r29	; 62
     c66:	0f be       	out	0x3f, r0	; 63
     c68:	cd bf       	out	0x3d, r28	; 61
     c6a:	e8 c0       	rjmp	.+464    	; 0xe3c <SCHEDULER_ImprimirHora+0x472>
			} else if ((nuevaHora < 9) & !(cursor_flag)) {
     c6c:	89 23       	and	r24, r25
     c6e:	f1 f0       	breq	.+60     	; 0xcac <SCHEDULER_ImprimirHora+0x2e2>
				sprintf(horario, "%02d: %d:%02d", horas, nuevaHora, segundos);
     c70:	80 91 34 02 	lds	r24, 0x0234	; 0x800234 <segundos>
     c74:	1f 92       	push	r1
     c76:	8f 93       	push	r24
     c78:	83 2f       	mov	r24, r19
     c7a:	03 2e       	mov	r0, r19
     c7c:	00 0c       	add	r0, r0
     c7e:	99 0b       	sbc	r25, r25
     c80:	9f 93       	push	r25
     c82:	3f 93       	push	r19
     c84:	80 91 32 02 	lds	r24, 0x0232	; 0x800232 <horas>
     c88:	1f 92       	push	r1
     c8a:	8f 93       	push	r24
     c8c:	8f ed       	ldi	r24, 0xDF	; 223
     c8e:	91 e0       	ldi	r25, 0x01	; 1
     c90:	9f 93       	push	r25
     c92:	8f 93       	push	r24
     c94:	ce 01       	movw	r24, r28
     c96:	01 96       	adiw	r24, 0x01	; 1
     c98:	9f 93       	push	r25
     c9a:	8f 93       	push	r24
     c9c:	0e 94 74 07 	call	0xee8	; 0xee8 <sprintf>
     ca0:	0f b6       	in	r0, 0x3f	; 63
     ca2:	f8 94       	cli
     ca4:	de bf       	out	0x3e, r29	; 62
     ca6:	0f be       	out	0x3f, r0	; 63
     ca8:	cd bf       	out	0x3d, r28	; 61
     caa:	c8 c0       	rjmp	.+400    	; 0xe3c <SCHEDULER_ImprimirHora+0x472>
			} else {
				sprintf(horario, "%02d:%02d:%02d", horas, nuevaHora, segundos);
     cac:	80 91 34 02 	lds	r24, 0x0234	; 0x800234 <segundos>
     cb0:	1f 92       	push	r1
     cb2:	8f 93       	push	r24
     cb4:	83 2f       	mov	r24, r19
     cb6:	03 2e       	mov	r0, r19
     cb8:	00 0c       	add	r0, r0
     cba:	99 0b       	sbc	r25, r25
     cbc:	9f 93       	push	r25
     cbe:	3f 93       	push	r19
     cc0:	80 91 32 02 	lds	r24, 0x0232	; 0x800232 <horas>
     cc4:	1f 92       	push	r1
     cc6:	8f 93       	push	r24
     cc8:	82 e7       	ldi	r24, 0x72	; 114
     cca:	91 e0       	ldi	r25, 0x01	; 1
     ccc:	9f 93       	push	r25
     cce:	8f 93       	push	r24
     cd0:	ce 01       	movw	r24, r28
     cd2:	01 96       	adiw	r24, 0x01	; 1
     cd4:	9f 93       	push	r25
     cd6:	8f 93       	push	r24
     cd8:	0e 94 74 07 	call	0xee8	; 0xee8 <sprintf>
     cdc:	0f b6       	in	r0, 0x3f	; 63
     cde:	f8 94       	cli
     ce0:	de bf       	out	0x3e, r29	; 62
     ce2:	0f be       	out	0x3f, r0	; 63
     ce4:	cd bf       	out	0x3d, r28	; 61
     ce6:	aa c0       	rjmp	.+340    	; 0xe3c <SCHEDULER_ImprimirHora+0x472>
			} 
		break;		
		case 3: // Modo edicion minutos
			if ((nuevaHora == -1) & (cursor_flag)) {
     ce8:	30 91 37 02 	lds	r19, 0x0237	; 0x800237 <nuevaHora>
     cec:	21 e0       	ldi	r18, 0x01	; 1
     cee:	3f 3f       	cpi	r19, 0xFF	; 255
     cf0:	09 f0       	breq	.+2      	; 0xcf4 <SCHEDULER_ImprimirHora+0x32a>
     cf2:	20 e0       	ldi	r18, 0x00	; 0
     cf4:	82 2f       	mov	r24, r18
     cf6:	90 e0       	ldi	r25, 0x00	; 0
     cf8:	40 91 30 02 	lds	r20, 0x0230	; 0x800230 <cursor_flag>
     cfc:	64 2f       	mov	r22, r20
     cfe:	70 e0       	ldi	r23, 0x00	; 0
     d00:	86 23       	and	r24, r22
     d02:	97 23       	and	r25, r23
     d04:	89 2b       	or	r24, r25
     d06:	c1 f0       	breq	.+48     	; 0xd38 <SCHEDULER_ImprimirHora+0x36e>
				sprintf(horario, "%02d:%02d: _", horas, minutos);	
     d08:	80 91 33 02 	lds	r24, 0x0233	; 0x800233 <minutos>
     d0c:	1f 92       	push	r1
     d0e:	8f 93       	push	r24
     d10:	80 91 32 02 	lds	r24, 0x0232	; 0x800232 <horas>
     d14:	1f 92       	push	r1
     d16:	8f 93       	push	r24
     d18:	8d ee       	ldi	r24, 0xED	; 237
     d1a:	91 e0       	ldi	r25, 0x01	; 1
     d1c:	9f 93       	push	r25
     d1e:	8f 93       	push	r24
     d20:	ce 01       	movw	r24, r28
     d22:	01 96       	adiw	r24, 0x01	; 1
     d24:	9f 93       	push	r25
     d26:	8f 93       	push	r24
     d28:	0e 94 74 07 	call	0xee8	; 0xee8 <sprintf>
     d2c:	0f b6       	in	r0, 0x3f	; 63
     d2e:	f8 94       	cli
     d30:	de bf       	out	0x3e, r29	; 62
     d32:	0f be       	out	0x3f, r0	; 63
     d34:	cd bf       	out	0x3d, r28	; 61
     d36:	82 c0       	rjmp	.+260    	; 0xe3c <SCHEDULER_ImprimirHora+0x472>
			} else if ((nuevaHora == -1) & !(cursor_flag)) {
     d38:	91 e0       	ldi	r25, 0x01	; 1
     d3a:	41 11       	cpse	r20, r1
     d3c:	90 e0       	ldi	r25, 0x00	; 0
     d3e:	29 23       	and	r18, r25
     d40:	c1 f0       	breq	.+48     	; 0xd72 <SCHEDULER_ImprimirHora+0x3a8>
				sprintf(horario, "%02d:%02d:  ", horas, minutos);
     d42:	80 91 33 02 	lds	r24, 0x0233	; 0x800233 <minutos>
     d46:	1f 92       	push	r1
     d48:	8f 93       	push	r24
     d4a:	80 91 32 02 	lds	r24, 0x0232	; 0x800232 <horas>
     d4e:	1f 92       	push	r1
     d50:	8f 93       	push	r24
     d52:	8a ef       	ldi	r24, 0xFA	; 250
     d54:	91 e0       	ldi	r25, 0x01	; 1
     d56:	9f 93       	push	r25
     d58:	8f 93       	push	r24
     d5a:	ce 01       	movw	r24, r28
     d5c:	01 96       	adiw	r24, 0x01	; 1
     d5e:	9f 93       	push	r25
     d60:	8f 93       	push	r24
     d62:	0e 94 74 07 	call	0xee8	; 0xee8 <sprintf>
     d66:	0f b6       	in	r0, 0x3f	; 63
     d68:	f8 94       	cli
     d6a:	de bf       	out	0x3e, r29	; 62
     d6c:	0f be       	out	0x3f, r0	; 63
     d6e:	cd bf       	out	0x3d, r28	; 61
     d70:	65 c0       	rjmp	.+202    	; 0xe3c <SCHEDULER_ImprimirHora+0x472>
			} else if ((nuevaHora < 9) & (cursor_flag)) {
     d72:	81 e0       	ldi	r24, 0x01	; 1
     d74:	39 30       	cpi	r19, 0x09	; 9
     d76:	0c f0       	brlt	.+2      	; 0xd7a <SCHEDULER_ImprimirHora+0x3b0>
     d78:	80 e0       	ldi	r24, 0x00	; 0
     d7a:	48 2f       	mov	r20, r24
     d7c:	50 e0       	ldi	r21, 0x00	; 0
     d7e:	64 23       	and	r22, r20
     d80:	75 23       	and	r23, r21
     d82:	67 2b       	or	r22, r23
     d84:	f1 f0       	breq	.+60     	; 0xdc2 <SCHEDULER_ImprimirHora+0x3f8>
				sprintf(horario, "%02d:%02d:_%d", horas, minutos, nuevaHora);
     d86:	83 2f       	mov	r24, r19
     d88:	03 2e       	mov	r0, r19
     d8a:	00 0c       	add	r0, r0
     d8c:	99 0b       	sbc	r25, r25
     d8e:	9f 93       	push	r25
     d90:	3f 93       	push	r19
     d92:	80 91 33 02 	lds	r24, 0x0233	; 0x800233 <minutos>
     d96:	1f 92       	push	r1
     d98:	8f 93       	push	r24
     d9a:	80 91 32 02 	lds	r24, 0x0232	; 0x800232 <horas>
     d9e:	1f 92       	push	r1
     da0:	8f 93       	push	r24
     da2:	87 e0       	ldi	r24, 0x07	; 7
     da4:	92 e0       	ldi	r25, 0x02	; 2
     da6:	9f 93       	push	r25
     da8:	8f 93       	push	r24
     daa:	ce 01       	movw	r24, r28
     dac:	01 96       	adiw	r24, 0x01	; 1
     dae:	9f 93       	push	r25
     db0:	8f 93       	push	r24
     db2:	0e 94 74 07 	call	0xee8	; 0xee8 <sprintf>
     db6:	0f b6       	in	r0, 0x3f	; 63
     db8:	f8 94       	cli
     dba:	de bf       	out	0x3e, r29	; 62
     dbc:	0f be       	out	0x3f, r0	; 63
     dbe:	cd bf       	out	0x3d, r28	; 61
     dc0:	3d c0       	rjmp	.+122    	; 0xe3c <SCHEDULER_ImprimirHora+0x472>
			} else if ((nuevaHora < 9) & !(cursor_flag)) {
     dc2:	89 23       	and	r24, r25
     dc4:	f1 f0       	breq	.+60     	; 0xe02 <SCHEDULER_ImprimirHora+0x438>
				sprintf(horario, "%02d:%02d: %d", horas, minutos, nuevaHora);
     dc6:	83 2f       	mov	r24, r19
     dc8:	03 2e       	mov	r0, r19
     dca:	00 0c       	add	r0, r0
     dcc:	99 0b       	sbc	r25, r25
     dce:	9f 93       	push	r25
     dd0:	3f 93       	push	r19
     dd2:	80 91 33 02 	lds	r24, 0x0233	; 0x800233 <minutos>
     dd6:	1f 92       	push	r1
     dd8:	8f 93       	push	r24
     dda:	80 91 32 02 	lds	r24, 0x0232	; 0x800232 <horas>
     dde:	1f 92       	push	r1
     de0:	8f 93       	push	r24
     de2:	85 e1       	ldi	r24, 0x15	; 21
     de4:	92 e0       	ldi	r25, 0x02	; 2
     de6:	9f 93       	push	r25
     de8:	8f 93       	push	r24
     dea:	ce 01       	movw	r24, r28
     dec:	01 96       	adiw	r24, 0x01	; 1
     dee:	9f 93       	push	r25
     df0:	8f 93       	push	r24
     df2:	0e 94 74 07 	call	0xee8	; 0xee8 <sprintf>
     df6:	0f b6       	in	r0, 0x3f	; 63
     df8:	f8 94       	cli
     dfa:	de bf       	out	0x3e, r29	; 62
     dfc:	0f be       	out	0x3f, r0	; 63
     dfe:	cd bf       	out	0x3d, r28	; 61
     e00:	1d c0       	rjmp	.+58     	; 0xe3c <SCHEDULER_ImprimirHora+0x472>
			} else {
				sprintf(horario, "%02d:%02d:%02d", horas, minutos, nuevaHora);
     e02:	83 2f       	mov	r24, r19
     e04:	03 2e       	mov	r0, r19
     e06:	00 0c       	add	r0, r0
     e08:	99 0b       	sbc	r25, r25
     e0a:	9f 93       	push	r25
     e0c:	3f 93       	push	r19
     e0e:	80 91 33 02 	lds	r24, 0x0233	; 0x800233 <minutos>
     e12:	1f 92       	push	r1
     e14:	8f 93       	push	r24
     e16:	80 91 32 02 	lds	r24, 0x0232	; 0x800232 <horas>
     e1a:	1f 92       	push	r1
     e1c:	8f 93       	push	r24
     e1e:	82 e7       	ldi	r24, 0x72	; 114
     e20:	91 e0       	ldi	r25, 0x01	; 1
     e22:	9f 93       	push	r25
     e24:	8f 93       	push	r24
     e26:	ce 01       	movw	r24, r28
     e28:	01 96       	adiw	r24, 0x01	; 1
     e2a:	9f 93       	push	r25
     e2c:	8f 93       	push	r24
     e2e:	0e 94 74 07 	call	0xee8	; 0xee8 <sprintf>
     e32:	0f b6       	in	r0, 0x3f	; 63
     e34:	f8 94       	cli
     e36:	de bf       	out	0x3e, r29	; 62
     e38:	0f be       	out	0x3f, r0	; 63
     e3a:	cd bf       	out	0x3d, r28	; 61
			}
		break;	
	}
	LCDstring(horario, 8);
     e3c:	68 e0       	ldi	r22, 0x08	; 8
     e3e:	ce 01       	movw	r24, r28
     e40:	01 96       	adiw	r24, 0x01	; 1
     e42:	0e 94 5f 02 	call	0x4be	; 0x4be <LCDstring>
}
     e46:	28 96       	adiw	r28, 0x08	; 8
     e48:	0f b6       	in	r0, 0x3f	; 63
     e4a:	f8 94       	cli
     e4c:	de bf       	out	0x3e, r29	; 62
     e4e:	0f be       	out	0x3f, r0	; 63
     e50:	cd bf       	out	0x3d, r28	; 61
     e52:	df 91       	pop	r29
     e54:	cf 91       	pop	r28
     e56:	08 95       	ret

00000e58 <SCHEDULER_Tasks>:
/**
*
*	TIMER0_Tasks: Se llama esta funcion en un loop, comprueba si debe actualizar la MEF, si debe imprimir la hora, si debe incrementar las variables de tiempo (hora,minutos,segundos).*/

void SCHEDULER_Tasks(void){
	if (MEF_flag) {	// Si esta activo el flag de actualizacion de estado llama a la funcion y resetea el flag.
     e58:	80 91 2f 02 	lds	r24, 0x022F	; 0x80022f <MEF_flag>
     e5c:	88 23       	and	r24, r24
     e5e:	21 f0       	breq	.+8      	; 0xe68 <SCHEDULER_Tasks+0x10>
		MEF_flag = 0;	
     e60:	10 92 2f 02 	sts	0x022F, r1	; 0x80022f <MEF_flag>
		MEF_Update(); 
     e64:	0e 94 96 03 	call	0x72c	; 0x72c <MEF_Update>
	}
	if (imprimirHora_flag) { // Si esta activado el flag de imprimir hora llama a la funcion y resetea el flag.
     e68:	80 91 2e 02 	lds	r24, 0x022E	; 0x80022e <imprimirHora_flag>
     e6c:	88 23       	and	r24, r24
     e6e:	21 f0       	breq	.+8      	; 0xe78 <SCHEDULER_Tasks+0x20>
		imprimirHora_flag = 0;
     e70:	10 92 2e 02 	sts	0x022E, r1	; 0x80022e <imprimirHora_flag>
		SCHEDULER_ImprimirHora();
     e74:	0e 94 e5 04 	call	0x9ca	; 0x9ca <SCHEDULER_ImprimirHora>
	}
	if (incrementarSegundo_flag) {
     e78:	80 91 2d 02 	lds	r24, 0x022D	; 0x80022d <incrementarSegundo_flag>
     e7c:	88 23       	and	r24, r24
     e7e:	21 f0       	breq	.+8      	; 0xe88 <SCHEDULER_Tasks+0x30>
		incrementarSegundo_flag = 0;
     e80:	10 92 2d 02 	sts	0x022D, r1	; 0x80022d <incrementarSegundo_flag>
		SCHEDULER_IncrementarSec();
     e84:	0e 94 97 04 	call	0x92e	; 0x92e <SCHEDULER_IncrementarSec>
     e88:	08 95       	ret

00000e8a <__vector_14>:
	LCDstring(horario, 8);
}

  
ISR(TIMER0_COMPA_vect) // cada 10 ms
{
     e8a:	1f 92       	push	r1
     e8c:	0f 92       	push	r0
     e8e:	0f b6       	in	r0, 0x3f	; 63
     e90:	0f 92       	push	r0
     e92:	11 24       	eor	r1, r1
     e94:	8f 93       	push	r24
     e96:	9f 93       	push	r25
	// Actualizar MEF cada 100 ms
	if (++contador_MEF==10) {
     e98:	80 91 36 02 	lds	r24, 0x0236	; 0x800236 <contador_MEF>
     e9c:	8f 5f       	subi	r24, 0xFF	; 255
     e9e:	80 93 36 02 	sts	0x0236, r24	; 0x800236 <contador_MEF>
     ea2:	8a 30       	cpi	r24, 0x0A	; 10
     ea4:	29 f4       	brne	.+10     	; 0xeb0 <__vector_14+0x26>
		MEF_flag=1;
     ea6:	81 e0       	ldi	r24, 0x01	; 1
     ea8:	80 93 2f 02 	sts	0x022F, r24	; 0x80022f <MEF_flag>
		contador_MEF=0;
     eac:	10 92 36 02 	sts	0x0236, r1	; 0x800236 <contador_MEF>
	}
	
	// Se ejecuta cada 1 segundo
	if (++contador_Segundos == 98){ 
     eb0:	80 91 35 02 	lds	r24, 0x0235	; 0x800235 <contador_Segundos>
     eb4:	8f 5f       	subi	r24, 0xFF	; 255
     eb6:	80 93 35 02 	sts	0x0235, r24	; 0x800235 <contador_Segundos>
     eba:	82 36       	cpi	r24, 0x62	; 98
     ebc:	71 f4       	brne	.+28     	; 0xeda <__vector_14+0x50>
		cursor_flag = !cursor_flag;
     ebe:	81 e0       	ldi	r24, 0x01	; 1
     ec0:	90 91 30 02 	lds	r25, 0x0230	; 0x800230 <cursor_flag>
     ec4:	91 11       	cpse	r25, r1
     ec6:	80 e0       	ldi	r24, 0x00	; 0
     ec8:	80 93 30 02 	sts	0x0230, r24	; 0x800230 <cursor_flag>
		imprimirHora_flag = 1;
     ecc:	81 e0       	ldi	r24, 0x01	; 1
     ece:	80 93 2e 02 	sts	0x022E, r24	; 0x80022e <imprimirHora_flag>
		incrementarSegundo_flag = 1;
     ed2:	80 93 2d 02 	sts	0x022D, r24	; 0x80022d <incrementarSegundo_flag>
		contador_Segundos = 0;
     ed6:	10 92 35 02 	sts	0x0235, r1	; 0x800235 <contador_Segundos>
	}
     eda:	9f 91       	pop	r25
     edc:	8f 91       	pop	r24
     ede:	0f 90       	pop	r0
     ee0:	0f be       	out	0x3f, r0	; 63
     ee2:	0f 90       	pop	r0
     ee4:	1f 90       	pop	r1
     ee6:	18 95       	reti

00000ee8 <sprintf>:
     ee8:	ae e0       	ldi	r26, 0x0E	; 14
     eea:	b0 e0       	ldi	r27, 0x00	; 0
     eec:	ea e7       	ldi	r30, 0x7A	; 122
     eee:	f7 e0       	ldi	r31, 0x07	; 7
     ef0:	0c 94 69 0d 	jmp	0x1ad2	; 0x1ad2 <__prologue_saves__+0x1c>
     ef4:	0d 89       	ldd	r16, Y+21	; 0x15
     ef6:	1e 89       	ldd	r17, Y+22	; 0x16
     ef8:	86 e0       	ldi	r24, 0x06	; 6
     efa:	8c 83       	std	Y+4, r24	; 0x04
     efc:	1a 83       	std	Y+2, r17	; 0x02
     efe:	09 83       	std	Y+1, r16	; 0x01
     f00:	8f ef       	ldi	r24, 0xFF	; 255
     f02:	9f e7       	ldi	r25, 0x7F	; 127
     f04:	9e 83       	std	Y+6, r25	; 0x06
     f06:	8d 83       	std	Y+5, r24	; 0x05
     f08:	ae 01       	movw	r20, r28
     f0a:	47 5e       	subi	r20, 0xE7	; 231
     f0c:	5f 4f       	sbci	r21, 0xFF	; 255
     f0e:	6f 89       	ldd	r22, Y+23	; 0x17
     f10:	78 8d       	ldd	r23, Y+24	; 0x18
     f12:	ce 01       	movw	r24, r28
     f14:	01 96       	adiw	r24, 0x01	; 1
     f16:	0e 94 af 07 	call	0xf5e	; 0xf5e <vfprintf>
     f1a:	ef 81       	ldd	r30, Y+7	; 0x07
     f1c:	f8 85       	ldd	r31, Y+8	; 0x08
     f1e:	e0 0f       	add	r30, r16
     f20:	f1 1f       	adc	r31, r17
     f22:	10 82       	st	Z, r1
     f24:	2e 96       	adiw	r28, 0x0e	; 14
     f26:	e4 e0       	ldi	r30, 0x04	; 4
     f28:	0c 94 85 0d 	jmp	0x1b0a	; 0x1b0a <__epilogue_restores__+0x1c>

00000f2c <sscanf>:
     f2c:	ae e0       	ldi	r26, 0x0E	; 14
     f2e:	b0 e0       	ldi	r27, 0x00	; 0
     f30:	ec e9       	ldi	r30, 0x9C	; 156
     f32:	f7 e0       	ldi	r31, 0x07	; 7
     f34:	0c 94 6b 0d 	jmp	0x1ad6	; 0x1ad6 <__prologue_saves__+0x20>
     f38:	85 e0       	ldi	r24, 0x05	; 5
     f3a:	8c 83       	std	Y+4, r24	; 0x04
     f3c:	8b 89       	ldd	r24, Y+19	; 0x13
     f3e:	9c 89       	ldd	r25, Y+20	; 0x14
     f40:	9a 83       	std	Y+2, r25	; 0x02
     f42:	89 83       	std	Y+1, r24	; 0x01
     f44:	ae 01       	movw	r20, r28
     f46:	49 5e       	subi	r20, 0xE9	; 233
     f48:	5f 4f       	sbci	r21, 0xFF	; 255
     f4a:	6d 89       	ldd	r22, Y+21	; 0x15
     f4c:	7e 89       	ldd	r23, Y+22	; 0x16
     f4e:	ce 01       	movw	r24, r28
     f50:	01 96       	adiw	r24, 0x01	; 1
     f52:	0e 94 2c 0b 	call	0x1658	; 0x1658 <vfscanf>
     f56:	2e 96       	adiw	r28, 0x0e	; 14
     f58:	e2 e0       	ldi	r30, 0x02	; 2
     f5a:	0c 94 87 0d 	jmp	0x1b0e	; 0x1b0e <__epilogue_restores__+0x20>

00000f5e <vfprintf>:
     f5e:	ab e0       	ldi	r26, 0x0B	; 11
     f60:	b0 e0       	ldi	r27, 0x00	; 0
     f62:	e5 eb       	ldi	r30, 0xB5	; 181
     f64:	f7 e0       	ldi	r31, 0x07	; 7
     f66:	0c 94 5b 0d 	jmp	0x1ab6	; 0x1ab6 <__prologue_saves__>
     f6a:	6c 01       	movw	r12, r24
     f6c:	7b 01       	movw	r14, r22
     f6e:	8a 01       	movw	r16, r20
     f70:	fc 01       	movw	r30, r24
     f72:	17 82       	std	Z+7, r1	; 0x07
     f74:	16 82       	std	Z+6, r1	; 0x06
     f76:	83 81       	ldd	r24, Z+3	; 0x03
     f78:	81 ff       	sbrs	r24, 1
     f7a:	cc c1       	rjmp	.+920    	; 0x1314 <vfprintf+0x3b6>
     f7c:	ce 01       	movw	r24, r28
     f7e:	01 96       	adiw	r24, 0x01	; 1
     f80:	3c 01       	movw	r6, r24
     f82:	f6 01       	movw	r30, r12
     f84:	93 81       	ldd	r25, Z+3	; 0x03
     f86:	f7 01       	movw	r30, r14
     f88:	93 fd       	sbrc	r25, 3
     f8a:	85 91       	lpm	r24, Z+
     f8c:	93 ff       	sbrs	r25, 3
     f8e:	81 91       	ld	r24, Z+
     f90:	7f 01       	movw	r14, r30
     f92:	88 23       	and	r24, r24
     f94:	09 f4       	brne	.+2      	; 0xf98 <vfprintf+0x3a>
     f96:	ba c1       	rjmp	.+884    	; 0x130c <vfprintf+0x3ae>
     f98:	85 32       	cpi	r24, 0x25	; 37
     f9a:	39 f4       	brne	.+14     	; 0xfaa <vfprintf+0x4c>
     f9c:	93 fd       	sbrc	r25, 3
     f9e:	85 91       	lpm	r24, Z+
     fa0:	93 ff       	sbrs	r25, 3
     fa2:	81 91       	ld	r24, Z+
     fa4:	7f 01       	movw	r14, r30
     fa6:	85 32       	cpi	r24, 0x25	; 37
     fa8:	29 f4       	brne	.+10     	; 0xfb4 <vfprintf+0x56>
     faa:	b6 01       	movw	r22, r12
     fac:	90 e0       	ldi	r25, 0x00	; 0
     fae:	0e 94 a5 0c 	call	0x194a	; 0x194a <fputc>
     fb2:	e7 cf       	rjmp	.-50     	; 0xf82 <vfprintf+0x24>
     fb4:	91 2c       	mov	r9, r1
     fb6:	21 2c       	mov	r2, r1
     fb8:	31 2c       	mov	r3, r1
     fba:	ff e1       	ldi	r31, 0x1F	; 31
     fbc:	f3 15       	cp	r31, r3
     fbe:	d8 f0       	brcs	.+54     	; 0xff6 <vfprintf+0x98>
     fc0:	8b 32       	cpi	r24, 0x2B	; 43
     fc2:	79 f0       	breq	.+30     	; 0xfe2 <vfprintf+0x84>
     fc4:	38 f4       	brcc	.+14     	; 0xfd4 <vfprintf+0x76>
     fc6:	80 32       	cpi	r24, 0x20	; 32
     fc8:	79 f0       	breq	.+30     	; 0xfe8 <vfprintf+0x8a>
     fca:	83 32       	cpi	r24, 0x23	; 35
     fcc:	a1 f4       	brne	.+40     	; 0xff6 <vfprintf+0x98>
     fce:	23 2d       	mov	r18, r3
     fd0:	20 61       	ori	r18, 0x10	; 16
     fd2:	1d c0       	rjmp	.+58     	; 0x100e <vfprintf+0xb0>
     fd4:	8d 32       	cpi	r24, 0x2D	; 45
     fd6:	61 f0       	breq	.+24     	; 0xff0 <vfprintf+0x92>
     fd8:	80 33       	cpi	r24, 0x30	; 48
     fda:	69 f4       	brne	.+26     	; 0xff6 <vfprintf+0x98>
     fdc:	23 2d       	mov	r18, r3
     fde:	21 60       	ori	r18, 0x01	; 1
     fe0:	16 c0       	rjmp	.+44     	; 0x100e <vfprintf+0xb0>
     fe2:	83 2d       	mov	r24, r3
     fe4:	82 60       	ori	r24, 0x02	; 2
     fe6:	38 2e       	mov	r3, r24
     fe8:	e3 2d       	mov	r30, r3
     fea:	e4 60       	ori	r30, 0x04	; 4
     fec:	3e 2e       	mov	r3, r30
     fee:	2a c0       	rjmp	.+84     	; 0x1044 <vfprintf+0xe6>
     ff0:	f3 2d       	mov	r31, r3
     ff2:	f8 60       	ori	r31, 0x08	; 8
     ff4:	1d c0       	rjmp	.+58     	; 0x1030 <vfprintf+0xd2>
     ff6:	37 fc       	sbrc	r3, 7
     ff8:	2d c0       	rjmp	.+90     	; 0x1054 <vfprintf+0xf6>
     ffa:	20 ed       	ldi	r18, 0xD0	; 208
     ffc:	28 0f       	add	r18, r24
     ffe:	2a 30       	cpi	r18, 0x0A	; 10
    1000:	40 f0       	brcs	.+16     	; 0x1012 <vfprintf+0xb4>
    1002:	8e 32       	cpi	r24, 0x2E	; 46
    1004:	b9 f4       	brne	.+46     	; 0x1034 <vfprintf+0xd6>
    1006:	36 fc       	sbrc	r3, 6
    1008:	81 c1       	rjmp	.+770    	; 0x130c <vfprintf+0x3ae>
    100a:	23 2d       	mov	r18, r3
    100c:	20 64       	ori	r18, 0x40	; 64
    100e:	32 2e       	mov	r3, r18
    1010:	19 c0       	rjmp	.+50     	; 0x1044 <vfprintf+0xe6>
    1012:	36 fe       	sbrs	r3, 6
    1014:	06 c0       	rjmp	.+12     	; 0x1022 <vfprintf+0xc4>
    1016:	8a e0       	ldi	r24, 0x0A	; 10
    1018:	98 9e       	mul	r9, r24
    101a:	20 0d       	add	r18, r0
    101c:	11 24       	eor	r1, r1
    101e:	92 2e       	mov	r9, r18
    1020:	11 c0       	rjmp	.+34     	; 0x1044 <vfprintf+0xe6>
    1022:	ea e0       	ldi	r30, 0x0A	; 10
    1024:	2e 9e       	mul	r2, r30
    1026:	20 0d       	add	r18, r0
    1028:	11 24       	eor	r1, r1
    102a:	22 2e       	mov	r2, r18
    102c:	f3 2d       	mov	r31, r3
    102e:	f0 62       	ori	r31, 0x20	; 32
    1030:	3f 2e       	mov	r3, r31
    1032:	08 c0       	rjmp	.+16     	; 0x1044 <vfprintf+0xe6>
    1034:	8c 36       	cpi	r24, 0x6C	; 108
    1036:	21 f4       	brne	.+8      	; 0x1040 <vfprintf+0xe2>
    1038:	83 2d       	mov	r24, r3
    103a:	80 68       	ori	r24, 0x80	; 128
    103c:	38 2e       	mov	r3, r24
    103e:	02 c0       	rjmp	.+4      	; 0x1044 <vfprintf+0xe6>
    1040:	88 36       	cpi	r24, 0x68	; 104
    1042:	41 f4       	brne	.+16     	; 0x1054 <vfprintf+0xf6>
    1044:	f7 01       	movw	r30, r14
    1046:	93 fd       	sbrc	r25, 3
    1048:	85 91       	lpm	r24, Z+
    104a:	93 ff       	sbrs	r25, 3
    104c:	81 91       	ld	r24, Z+
    104e:	7f 01       	movw	r14, r30
    1050:	81 11       	cpse	r24, r1
    1052:	b3 cf       	rjmp	.-154    	; 0xfba <vfprintf+0x5c>
    1054:	98 2f       	mov	r25, r24
    1056:	9f 7d       	andi	r25, 0xDF	; 223
    1058:	95 54       	subi	r25, 0x45	; 69
    105a:	93 30       	cpi	r25, 0x03	; 3
    105c:	28 f4       	brcc	.+10     	; 0x1068 <vfprintf+0x10a>
    105e:	0c 5f       	subi	r16, 0xFC	; 252
    1060:	1f 4f       	sbci	r17, 0xFF	; 255
    1062:	9f e3       	ldi	r25, 0x3F	; 63
    1064:	99 83       	std	Y+1, r25	; 0x01
    1066:	0d c0       	rjmp	.+26     	; 0x1082 <vfprintf+0x124>
    1068:	83 36       	cpi	r24, 0x63	; 99
    106a:	31 f0       	breq	.+12     	; 0x1078 <vfprintf+0x11a>
    106c:	83 37       	cpi	r24, 0x73	; 115
    106e:	71 f0       	breq	.+28     	; 0x108c <vfprintf+0x12e>
    1070:	83 35       	cpi	r24, 0x53	; 83
    1072:	09 f0       	breq	.+2      	; 0x1076 <vfprintf+0x118>
    1074:	59 c0       	rjmp	.+178    	; 0x1128 <vfprintf+0x1ca>
    1076:	21 c0       	rjmp	.+66     	; 0x10ba <vfprintf+0x15c>
    1078:	f8 01       	movw	r30, r16
    107a:	80 81       	ld	r24, Z
    107c:	89 83       	std	Y+1, r24	; 0x01
    107e:	0e 5f       	subi	r16, 0xFE	; 254
    1080:	1f 4f       	sbci	r17, 0xFF	; 255
    1082:	88 24       	eor	r8, r8
    1084:	83 94       	inc	r8
    1086:	91 2c       	mov	r9, r1
    1088:	53 01       	movw	r10, r6
    108a:	13 c0       	rjmp	.+38     	; 0x10b2 <vfprintf+0x154>
    108c:	28 01       	movw	r4, r16
    108e:	f2 e0       	ldi	r31, 0x02	; 2
    1090:	4f 0e       	add	r4, r31
    1092:	51 1c       	adc	r5, r1
    1094:	f8 01       	movw	r30, r16
    1096:	a0 80       	ld	r10, Z
    1098:	b1 80       	ldd	r11, Z+1	; 0x01
    109a:	36 fe       	sbrs	r3, 6
    109c:	03 c0       	rjmp	.+6      	; 0x10a4 <vfprintf+0x146>
    109e:	69 2d       	mov	r22, r9
    10a0:	70 e0       	ldi	r23, 0x00	; 0
    10a2:	02 c0       	rjmp	.+4      	; 0x10a8 <vfprintf+0x14a>
    10a4:	6f ef       	ldi	r22, 0xFF	; 255
    10a6:	7f ef       	ldi	r23, 0xFF	; 255
    10a8:	c5 01       	movw	r24, r10
    10aa:	0e 94 5c 0c 	call	0x18b8	; 0x18b8 <strnlen>
    10ae:	4c 01       	movw	r8, r24
    10b0:	82 01       	movw	r16, r4
    10b2:	f3 2d       	mov	r31, r3
    10b4:	ff 77       	andi	r31, 0x7F	; 127
    10b6:	3f 2e       	mov	r3, r31
    10b8:	16 c0       	rjmp	.+44     	; 0x10e6 <vfprintf+0x188>
    10ba:	28 01       	movw	r4, r16
    10bc:	22 e0       	ldi	r18, 0x02	; 2
    10be:	42 0e       	add	r4, r18
    10c0:	51 1c       	adc	r5, r1
    10c2:	f8 01       	movw	r30, r16
    10c4:	a0 80       	ld	r10, Z
    10c6:	b1 80       	ldd	r11, Z+1	; 0x01
    10c8:	36 fe       	sbrs	r3, 6
    10ca:	03 c0       	rjmp	.+6      	; 0x10d2 <vfprintf+0x174>
    10cc:	69 2d       	mov	r22, r9
    10ce:	70 e0       	ldi	r23, 0x00	; 0
    10d0:	02 c0       	rjmp	.+4      	; 0x10d6 <vfprintf+0x178>
    10d2:	6f ef       	ldi	r22, 0xFF	; 255
    10d4:	7f ef       	ldi	r23, 0xFF	; 255
    10d6:	c5 01       	movw	r24, r10
    10d8:	0e 94 51 0c 	call	0x18a2	; 0x18a2 <strnlen_P>
    10dc:	4c 01       	movw	r8, r24
    10de:	f3 2d       	mov	r31, r3
    10e0:	f0 68       	ori	r31, 0x80	; 128
    10e2:	3f 2e       	mov	r3, r31
    10e4:	82 01       	movw	r16, r4
    10e6:	33 fc       	sbrc	r3, 3
    10e8:	1b c0       	rjmp	.+54     	; 0x1120 <vfprintf+0x1c2>
    10ea:	82 2d       	mov	r24, r2
    10ec:	90 e0       	ldi	r25, 0x00	; 0
    10ee:	88 16       	cp	r8, r24
    10f0:	99 06       	cpc	r9, r25
    10f2:	b0 f4       	brcc	.+44     	; 0x1120 <vfprintf+0x1c2>
    10f4:	b6 01       	movw	r22, r12
    10f6:	80 e2       	ldi	r24, 0x20	; 32
    10f8:	90 e0       	ldi	r25, 0x00	; 0
    10fa:	0e 94 a5 0c 	call	0x194a	; 0x194a <fputc>
    10fe:	2a 94       	dec	r2
    1100:	f4 cf       	rjmp	.-24     	; 0x10ea <vfprintf+0x18c>
    1102:	f5 01       	movw	r30, r10
    1104:	37 fc       	sbrc	r3, 7
    1106:	85 91       	lpm	r24, Z+
    1108:	37 fe       	sbrs	r3, 7
    110a:	81 91       	ld	r24, Z+
    110c:	5f 01       	movw	r10, r30
    110e:	b6 01       	movw	r22, r12
    1110:	90 e0       	ldi	r25, 0x00	; 0
    1112:	0e 94 a5 0c 	call	0x194a	; 0x194a <fputc>
    1116:	21 10       	cpse	r2, r1
    1118:	2a 94       	dec	r2
    111a:	21 e0       	ldi	r18, 0x01	; 1
    111c:	82 1a       	sub	r8, r18
    111e:	91 08       	sbc	r9, r1
    1120:	81 14       	cp	r8, r1
    1122:	91 04       	cpc	r9, r1
    1124:	71 f7       	brne	.-36     	; 0x1102 <vfprintf+0x1a4>
    1126:	e8 c0       	rjmp	.+464    	; 0x12f8 <vfprintf+0x39a>
    1128:	84 36       	cpi	r24, 0x64	; 100
    112a:	11 f0       	breq	.+4      	; 0x1130 <vfprintf+0x1d2>
    112c:	89 36       	cpi	r24, 0x69	; 105
    112e:	41 f5       	brne	.+80     	; 0x1180 <vfprintf+0x222>
    1130:	f8 01       	movw	r30, r16
    1132:	37 fe       	sbrs	r3, 7
    1134:	07 c0       	rjmp	.+14     	; 0x1144 <vfprintf+0x1e6>
    1136:	60 81       	ld	r22, Z
    1138:	71 81       	ldd	r23, Z+1	; 0x01
    113a:	82 81       	ldd	r24, Z+2	; 0x02
    113c:	93 81       	ldd	r25, Z+3	; 0x03
    113e:	0c 5f       	subi	r16, 0xFC	; 252
    1140:	1f 4f       	sbci	r17, 0xFF	; 255
    1142:	08 c0       	rjmp	.+16     	; 0x1154 <vfprintf+0x1f6>
    1144:	60 81       	ld	r22, Z
    1146:	71 81       	ldd	r23, Z+1	; 0x01
    1148:	07 2e       	mov	r0, r23
    114a:	00 0c       	add	r0, r0
    114c:	88 0b       	sbc	r24, r24
    114e:	99 0b       	sbc	r25, r25
    1150:	0e 5f       	subi	r16, 0xFE	; 254
    1152:	1f 4f       	sbci	r17, 0xFF	; 255
    1154:	f3 2d       	mov	r31, r3
    1156:	ff 76       	andi	r31, 0x6F	; 111
    1158:	3f 2e       	mov	r3, r31
    115a:	97 ff       	sbrs	r25, 7
    115c:	09 c0       	rjmp	.+18     	; 0x1170 <vfprintf+0x212>
    115e:	90 95       	com	r25
    1160:	80 95       	com	r24
    1162:	70 95       	com	r23
    1164:	61 95       	neg	r22
    1166:	7f 4f       	sbci	r23, 0xFF	; 255
    1168:	8f 4f       	sbci	r24, 0xFF	; 255
    116a:	9f 4f       	sbci	r25, 0xFF	; 255
    116c:	f0 68       	ori	r31, 0x80	; 128
    116e:	3f 2e       	mov	r3, r31
    1170:	2a e0       	ldi	r18, 0x0A	; 10
    1172:	30 e0       	ldi	r19, 0x00	; 0
    1174:	a3 01       	movw	r20, r6
    1176:	0e 94 fa 0c 	call	0x19f4	; 0x19f4 <__ultoa_invert>
    117a:	88 2e       	mov	r8, r24
    117c:	86 18       	sub	r8, r6
    117e:	45 c0       	rjmp	.+138    	; 0x120a <vfprintf+0x2ac>
    1180:	85 37       	cpi	r24, 0x75	; 117
    1182:	31 f4       	brne	.+12     	; 0x1190 <vfprintf+0x232>
    1184:	23 2d       	mov	r18, r3
    1186:	2f 7e       	andi	r18, 0xEF	; 239
    1188:	b2 2e       	mov	r11, r18
    118a:	2a e0       	ldi	r18, 0x0A	; 10
    118c:	30 e0       	ldi	r19, 0x00	; 0
    118e:	25 c0       	rjmp	.+74     	; 0x11da <vfprintf+0x27c>
    1190:	93 2d       	mov	r25, r3
    1192:	99 7f       	andi	r25, 0xF9	; 249
    1194:	b9 2e       	mov	r11, r25
    1196:	8f 36       	cpi	r24, 0x6F	; 111
    1198:	c1 f0       	breq	.+48     	; 0x11ca <vfprintf+0x26c>
    119a:	18 f4       	brcc	.+6      	; 0x11a2 <vfprintf+0x244>
    119c:	88 35       	cpi	r24, 0x58	; 88
    119e:	79 f0       	breq	.+30     	; 0x11be <vfprintf+0x260>
    11a0:	b5 c0       	rjmp	.+362    	; 0x130c <vfprintf+0x3ae>
    11a2:	80 37       	cpi	r24, 0x70	; 112
    11a4:	19 f0       	breq	.+6      	; 0x11ac <vfprintf+0x24e>
    11a6:	88 37       	cpi	r24, 0x78	; 120
    11a8:	21 f0       	breq	.+8      	; 0x11b2 <vfprintf+0x254>
    11aa:	b0 c0       	rjmp	.+352    	; 0x130c <vfprintf+0x3ae>
    11ac:	e9 2f       	mov	r30, r25
    11ae:	e0 61       	ori	r30, 0x10	; 16
    11b0:	be 2e       	mov	r11, r30
    11b2:	b4 fe       	sbrs	r11, 4
    11b4:	0d c0       	rjmp	.+26     	; 0x11d0 <vfprintf+0x272>
    11b6:	fb 2d       	mov	r31, r11
    11b8:	f4 60       	ori	r31, 0x04	; 4
    11ba:	bf 2e       	mov	r11, r31
    11bc:	09 c0       	rjmp	.+18     	; 0x11d0 <vfprintf+0x272>
    11be:	34 fe       	sbrs	r3, 4
    11c0:	0a c0       	rjmp	.+20     	; 0x11d6 <vfprintf+0x278>
    11c2:	29 2f       	mov	r18, r25
    11c4:	26 60       	ori	r18, 0x06	; 6
    11c6:	b2 2e       	mov	r11, r18
    11c8:	06 c0       	rjmp	.+12     	; 0x11d6 <vfprintf+0x278>
    11ca:	28 e0       	ldi	r18, 0x08	; 8
    11cc:	30 e0       	ldi	r19, 0x00	; 0
    11ce:	05 c0       	rjmp	.+10     	; 0x11da <vfprintf+0x27c>
    11d0:	20 e1       	ldi	r18, 0x10	; 16
    11d2:	30 e0       	ldi	r19, 0x00	; 0
    11d4:	02 c0       	rjmp	.+4      	; 0x11da <vfprintf+0x27c>
    11d6:	20 e1       	ldi	r18, 0x10	; 16
    11d8:	32 e0       	ldi	r19, 0x02	; 2
    11da:	f8 01       	movw	r30, r16
    11dc:	b7 fe       	sbrs	r11, 7
    11de:	07 c0       	rjmp	.+14     	; 0x11ee <vfprintf+0x290>
    11e0:	60 81       	ld	r22, Z
    11e2:	71 81       	ldd	r23, Z+1	; 0x01
    11e4:	82 81       	ldd	r24, Z+2	; 0x02
    11e6:	93 81       	ldd	r25, Z+3	; 0x03
    11e8:	0c 5f       	subi	r16, 0xFC	; 252
    11ea:	1f 4f       	sbci	r17, 0xFF	; 255
    11ec:	06 c0       	rjmp	.+12     	; 0x11fa <vfprintf+0x29c>
    11ee:	60 81       	ld	r22, Z
    11f0:	71 81       	ldd	r23, Z+1	; 0x01
    11f2:	80 e0       	ldi	r24, 0x00	; 0
    11f4:	90 e0       	ldi	r25, 0x00	; 0
    11f6:	0e 5f       	subi	r16, 0xFE	; 254
    11f8:	1f 4f       	sbci	r17, 0xFF	; 255
    11fa:	a3 01       	movw	r20, r6
    11fc:	0e 94 fa 0c 	call	0x19f4	; 0x19f4 <__ultoa_invert>
    1200:	88 2e       	mov	r8, r24
    1202:	86 18       	sub	r8, r6
    1204:	fb 2d       	mov	r31, r11
    1206:	ff 77       	andi	r31, 0x7F	; 127
    1208:	3f 2e       	mov	r3, r31
    120a:	36 fe       	sbrs	r3, 6
    120c:	0d c0       	rjmp	.+26     	; 0x1228 <vfprintf+0x2ca>
    120e:	23 2d       	mov	r18, r3
    1210:	2e 7f       	andi	r18, 0xFE	; 254
    1212:	a2 2e       	mov	r10, r18
    1214:	89 14       	cp	r8, r9
    1216:	58 f4       	brcc	.+22     	; 0x122e <vfprintf+0x2d0>
    1218:	34 fe       	sbrs	r3, 4
    121a:	0b c0       	rjmp	.+22     	; 0x1232 <vfprintf+0x2d4>
    121c:	32 fc       	sbrc	r3, 2
    121e:	09 c0       	rjmp	.+18     	; 0x1232 <vfprintf+0x2d4>
    1220:	83 2d       	mov	r24, r3
    1222:	8e 7e       	andi	r24, 0xEE	; 238
    1224:	a8 2e       	mov	r10, r24
    1226:	05 c0       	rjmp	.+10     	; 0x1232 <vfprintf+0x2d4>
    1228:	b8 2c       	mov	r11, r8
    122a:	a3 2c       	mov	r10, r3
    122c:	03 c0       	rjmp	.+6      	; 0x1234 <vfprintf+0x2d6>
    122e:	b8 2c       	mov	r11, r8
    1230:	01 c0       	rjmp	.+2      	; 0x1234 <vfprintf+0x2d6>
    1232:	b9 2c       	mov	r11, r9
    1234:	a4 fe       	sbrs	r10, 4
    1236:	0f c0       	rjmp	.+30     	; 0x1256 <vfprintf+0x2f8>
    1238:	fe 01       	movw	r30, r28
    123a:	e8 0d       	add	r30, r8
    123c:	f1 1d       	adc	r31, r1
    123e:	80 81       	ld	r24, Z
    1240:	80 33       	cpi	r24, 0x30	; 48
    1242:	21 f4       	brne	.+8      	; 0x124c <vfprintf+0x2ee>
    1244:	9a 2d       	mov	r25, r10
    1246:	99 7e       	andi	r25, 0xE9	; 233
    1248:	a9 2e       	mov	r10, r25
    124a:	09 c0       	rjmp	.+18     	; 0x125e <vfprintf+0x300>
    124c:	a2 fe       	sbrs	r10, 2
    124e:	06 c0       	rjmp	.+12     	; 0x125c <vfprintf+0x2fe>
    1250:	b3 94       	inc	r11
    1252:	b3 94       	inc	r11
    1254:	04 c0       	rjmp	.+8      	; 0x125e <vfprintf+0x300>
    1256:	8a 2d       	mov	r24, r10
    1258:	86 78       	andi	r24, 0x86	; 134
    125a:	09 f0       	breq	.+2      	; 0x125e <vfprintf+0x300>
    125c:	b3 94       	inc	r11
    125e:	a3 fc       	sbrc	r10, 3
    1260:	11 c0       	rjmp	.+34     	; 0x1284 <vfprintf+0x326>
    1262:	a0 fe       	sbrs	r10, 0
    1264:	06 c0       	rjmp	.+12     	; 0x1272 <vfprintf+0x314>
    1266:	b2 14       	cp	r11, r2
    1268:	88 f4       	brcc	.+34     	; 0x128c <vfprintf+0x32e>
    126a:	28 0c       	add	r2, r8
    126c:	92 2c       	mov	r9, r2
    126e:	9b 18       	sub	r9, r11
    1270:	0e c0       	rjmp	.+28     	; 0x128e <vfprintf+0x330>
    1272:	b2 14       	cp	r11, r2
    1274:	60 f4       	brcc	.+24     	; 0x128e <vfprintf+0x330>
    1276:	b6 01       	movw	r22, r12
    1278:	80 e2       	ldi	r24, 0x20	; 32
    127a:	90 e0       	ldi	r25, 0x00	; 0
    127c:	0e 94 a5 0c 	call	0x194a	; 0x194a <fputc>
    1280:	b3 94       	inc	r11
    1282:	f7 cf       	rjmp	.-18     	; 0x1272 <vfprintf+0x314>
    1284:	b2 14       	cp	r11, r2
    1286:	18 f4       	brcc	.+6      	; 0x128e <vfprintf+0x330>
    1288:	2b 18       	sub	r2, r11
    128a:	02 c0       	rjmp	.+4      	; 0x1290 <vfprintf+0x332>
    128c:	98 2c       	mov	r9, r8
    128e:	21 2c       	mov	r2, r1
    1290:	a4 fe       	sbrs	r10, 4
    1292:	10 c0       	rjmp	.+32     	; 0x12b4 <vfprintf+0x356>
    1294:	b6 01       	movw	r22, r12
    1296:	80 e3       	ldi	r24, 0x30	; 48
    1298:	90 e0       	ldi	r25, 0x00	; 0
    129a:	0e 94 a5 0c 	call	0x194a	; 0x194a <fputc>
    129e:	a2 fe       	sbrs	r10, 2
    12a0:	17 c0       	rjmp	.+46     	; 0x12d0 <vfprintf+0x372>
    12a2:	a1 fc       	sbrc	r10, 1
    12a4:	03 c0       	rjmp	.+6      	; 0x12ac <vfprintf+0x34e>
    12a6:	88 e7       	ldi	r24, 0x78	; 120
    12a8:	90 e0       	ldi	r25, 0x00	; 0
    12aa:	02 c0       	rjmp	.+4      	; 0x12b0 <vfprintf+0x352>
    12ac:	88 e5       	ldi	r24, 0x58	; 88
    12ae:	90 e0       	ldi	r25, 0x00	; 0
    12b0:	b6 01       	movw	r22, r12
    12b2:	0c c0       	rjmp	.+24     	; 0x12cc <vfprintf+0x36e>
    12b4:	8a 2d       	mov	r24, r10
    12b6:	86 78       	andi	r24, 0x86	; 134
    12b8:	59 f0       	breq	.+22     	; 0x12d0 <vfprintf+0x372>
    12ba:	a1 fe       	sbrs	r10, 1
    12bc:	02 c0       	rjmp	.+4      	; 0x12c2 <vfprintf+0x364>
    12be:	8b e2       	ldi	r24, 0x2B	; 43
    12c0:	01 c0       	rjmp	.+2      	; 0x12c4 <vfprintf+0x366>
    12c2:	80 e2       	ldi	r24, 0x20	; 32
    12c4:	a7 fc       	sbrc	r10, 7
    12c6:	8d e2       	ldi	r24, 0x2D	; 45
    12c8:	b6 01       	movw	r22, r12
    12ca:	90 e0       	ldi	r25, 0x00	; 0
    12cc:	0e 94 a5 0c 	call	0x194a	; 0x194a <fputc>
    12d0:	89 14       	cp	r8, r9
    12d2:	38 f4       	brcc	.+14     	; 0x12e2 <vfprintf+0x384>
    12d4:	b6 01       	movw	r22, r12
    12d6:	80 e3       	ldi	r24, 0x30	; 48
    12d8:	90 e0       	ldi	r25, 0x00	; 0
    12da:	0e 94 a5 0c 	call	0x194a	; 0x194a <fputc>
    12de:	9a 94       	dec	r9
    12e0:	f7 cf       	rjmp	.-18     	; 0x12d0 <vfprintf+0x372>
    12e2:	8a 94       	dec	r8
    12e4:	f3 01       	movw	r30, r6
    12e6:	e8 0d       	add	r30, r8
    12e8:	f1 1d       	adc	r31, r1
    12ea:	80 81       	ld	r24, Z
    12ec:	b6 01       	movw	r22, r12
    12ee:	90 e0       	ldi	r25, 0x00	; 0
    12f0:	0e 94 a5 0c 	call	0x194a	; 0x194a <fputc>
    12f4:	81 10       	cpse	r8, r1
    12f6:	f5 cf       	rjmp	.-22     	; 0x12e2 <vfprintf+0x384>
    12f8:	22 20       	and	r2, r2
    12fa:	09 f4       	brne	.+2      	; 0x12fe <vfprintf+0x3a0>
    12fc:	42 ce       	rjmp	.-892    	; 0xf82 <vfprintf+0x24>
    12fe:	b6 01       	movw	r22, r12
    1300:	80 e2       	ldi	r24, 0x20	; 32
    1302:	90 e0       	ldi	r25, 0x00	; 0
    1304:	0e 94 a5 0c 	call	0x194a	; 0x194a <fputc>
    1308:	2a 94       	dec	r2
    130a:	f6 cf       	rjmp	.-20     	; 0x12f8 <vfprintf+0x39a>
    130c:	f6 01       	movw	r30, r12
    130e:	86 81       	ldd	r24, Z+6	; 0x06
    1310:	97 81       	ldd	r25, Z+7	; 0x07
    1312:	02 c0       	rjmp	.+4      	; 0x1318 <vfprintf+0x3ba>
    1314:	8f ef       	ldi	r24, 0xFF	; 255
    1316:	9f ef       	ldi	r25, 0xFF	; 255
    1318:	2b 96       	adiw	r28, 0x0b	; 11
    131a:	e2 e1       	ldi	r30, 0x12	; 18
    131c:	0c 94 77 0d 	jmp	0x1aee	; 0x1aee <__epilogue_restores__>

00001320 <putval>:
    1320:	20 fd       	sbrc	r18, 0
    1322:	09 c0       	rjmp	.+18     	; 0x1336 <putval+0x16>
    1324:	fc 01       	movw	r30, r24
    1326:	23 fd       	sbrc	r18, 3
    1328:	05 c0       	rjmp	.+10     	; 0x1334 <putval+0x14>
    132a:	22 ff       	sbrs	r18, 2
    132c:	02 c0       	rjmp	.+4      	; 0x1332 <putval+0x12>
    132e:	73 83       	std	Z+3, r23	; 0x03
    1330:	62 83       	std	Z+2, r22	; 0x02
    1332:	51 83       	std	Z+1, r21	; 0x01
    1334:	40 83       	st	Z, r20
    1336:	08 95       	ret

00001338 <mulacc>:
    1338:	44 fd       	sbrc	r20, 4
    133a:	17 c0       	rjmp	.+46     	; 0x136a <mulacc+0x32>
    133c:	46 fd       	sbrc	r20, 6
    133e:	17 c0       	rjmp	.+46     	; 0x136e <mulacc+0x36>
    1340:	ab 01       	movw	r20, r22
    1342:	bc 01       	movw	r22, r24
    1344:	da 01       	movw	r26, r20
    1346:	fb 01       	movw	r30, r22
    1348:	aa 0f       	add	r26, r26
    134a:	bb 1f       	adc	r27, r27
    134c:	ee 1f       	adc	r30, r30
    134e:	ff 1f       	adc	r31, r31
    1350:	10 94       	com	r1
    1352:	d1 f7       	brne	.-12     	; 0x1348 <mulacc+0x10>
    1354:	4a 0f       	add	r20, r26
    1356:	5b 1f       	adc	r21, r27
    1358:	6e 1f       	adc	r22, r30
    135a:	7f 1f       	adc	r23, r31
    135c:	cb 01       	movw	r24, r22
    135e:	ba 01       	movw	r22, r20
    1360:	66 0f       	add	r22, r22
    1362:	77 1f       	adc	r23, r23
    1364:	88 1f       	adc	r24, r24
    1366:	99 1f       	adc	r25, r25
    1368:	09 c0       	rjmp	.+18     	; 0x137c <mulacc+0x44>
    136a:	33 e0       	ldi	r19, 0x03	; 3
    136c:	01 c0       	rjmp	.+2      	; 0x1370 <mulacc+0x38>
    136e:	34 e0       	ldi	r19, 0x04	; 4
    1370:	66 0f       	add	r22, r22
    1372:	77 1f       	adc	r23, r23
    1374:	88 1f       	adc	r24, r24
    1376:	99 1f       	adc	r25, r25
    1378:	31 50       	subi	r19, 0x01	; 1
    137a:	d1 f7       	brne	.-12     	; 0x1370 <mulacc+0x38>
    137c:	62 0f       	add	r22, r18
    137e:	71 1d       	adc	r23, r1
    1380:	81 1d       	adc	r24, r1
    1382:	91 1d       	adc	r25, r1
    1384:	08 95       	ret

00001386 <skip_spaces>:
    1386:	0f 93       	push	r16
    1388:	1f 93       	push	r17
    138a:	cf 93       	push	r28
    138c:	df 93       	push	r29
    138e:	8c 01       	movw	r16, r24
    1390:	c8 01       	movw	r24, r16
    1392:	0e 94 67 0c 	call	0x18ce	; 0x18ce <fgetc>
    1396:	ec 01       	movw	r28, r24
    1398:	97 fd       	sbrc	r25, 7
    139a:	08 c0       	rjmp	.+16     	; 0x13ac <skip_spaces+0x26>
    139c:	0e 94 3d 0c 	call	0x187a	; 0x187a <isspace>
    13a0:	89 2b       	or	r24, r25
    13a2:	b1 f7       	brne	.-20     	; 0x1390 <skip_spaces+0xa>
    13a4:	b8 01       	movw	r22, r16
    13a6:	ce 01       	movw	r24, r28
    13a8:	0e 94 e1 0c 	call	0x19c2	; 0x19c2 <ungetc>
    13ac:	ce 01       	movw	r24, r28
    13ae:	df 91       	pop	r29
    13b0:	cf 91       	pop	r28
    13b2:	1f 91       	pop	r17
    13b4:	0f 91       	pop	r16
    13b6:	08 95       	ret

000013b8 <conv_int>:
    13b8:	8f 92       	push	r8
    13ba:	9f 92       	push	r9
    13bc:	af 92       	push	r10
    13be:	bf 92       	push	r11
    13c0:	ef 92       	push	r14
    13c2:	ff 92       	push	r15
    13c4:	0f 93       	push	r16
    13c6:	1f 93       	push	r17
    13c8:	cf 93       	push	r28
    13ca:	df 93       	push	r29
    13cc:	8c 01       	movw	r16, r24
    13ce:	d6 2f       	mov	r29, r22
    13d0:	7a 01       	movw	r14, r20
    13d2:	b2 2e       	mov	r11, r18
    13d4:	0e 94 67 0c 	call	0x18ce	; 0x18ce <fgetc>
    13d8:	9c 01       	movw	r18, r24
    13da:	33 27       	eor	r19, r19
    13dc:	2b 32       	cpi	r18, 0x2B	; 43
    13de:	31 05       	cpc	r19, r1
    13e0:	31 f0       	breq	.+12     	; 0x13ee <conv_int+0x36>
    13e2:	2d 32       	cpi	r18, 0x2D	; 45
    13e4:	31 05       	cpc	r19, r1
    13e6:	61 f4       	brne	.+24     	; 0x1400 <conv_int+0x48>
    13e8:	8b 2d       	mov	r24, r11
    13ea:	80 68       	ori	r24, 0x80	; 128
    13ec:	b8 2e       	mov	r11, r24
    13ee:	d1 50       	subi	r29, 0x01	; 1
    13f0:	11 f4       	brne	.+4      	; 0x13f6 <conv_int+0x3e>
    13f2:	80 e0       	ldi	r24, 0x00	; 0
    13f4:	68 c0       	rjmp	.+208    	; 0x14c6 <conv_int+0x10e>
    13f6:	c8 01       	movw	r24, r16
    13f8:	0e 94 67 0c 	call	0x18ce	; 0x18ce <fgetc>
    13fc:	97 fd       	sbrc	r25, 7
    13fe:	f9 cf       	rjmp	.-14     	; 0x13f2 <conv_int+0x3a>
    1400:	cb 2d       	mov	r28, r11
    1402:	cd 7f       	andi	r28, 0xFD	; 253
    1404:	2b 2d       	mov	r18, r11
    1406:	20 73       	andi	r18, 0x30	; 48
    1408:	09 f5       	brne	.+66     	; 0x144c <conv_int+0x94>
    140a:	80 33       	cpi	r24, 0x30	; 48
    140c:	f9 f4       	brne	.+62     	; 0x144c <conv_int+0x94>
    140e:	aa 24       	eor	r10, r10
    1410:	aa 94       	dec	r10
    1412:	ad 0e       	add	r10, r29
    1414:	09 f4       	brne	.+2      	; 0x1418 <conv_int+0x60>
    1416:	43 c0       	rjmp	.+134    	; 0x149e <conv_int+0xe6>
    1418:	c8 01       	movw	r24, r16
    141a:	0e 94 67 0c 	call	0x18ce	; 0x18ce <fgetc>
    141e:	97 fd       	sbrc	r25, 7
    1420:	3e c0       	rjmp	.+124    	; 0x149e <conv_int+0xe6>
    1422:	9c 01       	movw	r18, r24
    1424:	2f 7d       	andi	r18, 0xDF	; 223
    1426:	33 27       	eor	r19, r19
    1428:	28 35       	cpi	r18, 0x58	; 88
    142a:	31 05       	cpc	r19, r1
    142c:	49 f4       	brne	.+18     	; 0x1440 <conv_int+0x88>
    142e:	c2 64       	ori	r28, 0x42	; 66
    1430:	d2 50       	subi	r29, 0x02	; 2
    1432:	a9 f1       	breq	.+106    	; 0x149e <conv_int+0xe6>
    1434:	c8 01       	movw	r24, r16
    1436:	0e 94 67 0c 	call	0x18ce	; 0x18ce <fgetc>
    143a:	97 ff       	sbrs	r25, 7
    143c:	07 c0       	rjmp	.+14     	; 0x144c <conv_int+0x94>
    143e:	2f c0       	rjmp	.+94     	; 0x149e <conv_int+0xe6>
    1440:	b6 fe       	sbrs	r11, 6
    1442:	02 c0       	rjmp	.+4      	; 0x1448 <conv_int+0x90>
    1444:	c2 60       	ori	r28, 0x02	; 2
    1446:	01 c0       	rjmp	.+2      	; 0x144a <conv_int+0x92>
    1448:	c2 61       	ori	r28, 0x12	; 18
    144a:	da 2d       	mov	r29, r10
    144c:	81 2c       	mov	r8, r1
    144e:	91 2c       	mov	r9, r1
    1450:	54 01       	movw	r10, r8
    1452:	20 ed       	ldi	r18, 0xD0	; 208
    1454:	28 0f       	add	r18, r24
    1456:	28 30       	cpi	r18, 0x08	; 8
    1458:	80 f0       	brcs	.+32     	; 0x147a <conv_int+0xc2>
    145a:	c4 ff       	sbrs	r28, 4
    145c:	04 c0       	rjmp	.+8      	; 0x1466 <conv_int+0xae>
    145e:	b8 01       	movw	r22, r16
    1460:	0e 94 e1 0c 	call	0x19c2	; 0x19c2 <ungetc>
    1464:	19 c0       	rjmp	.+50     	; 0x1498 <conv_int+0xe0>
    1466:	2a 30       	cpi	r18, 0x0A	; 10
    1468:	40 f0       	brcs	.+16     	; 0x147a <conv_int+0xc2>
    146a:	c6 ff       	sbrs	r28, 6
    146c:	f8 cf       	rjmp	.-16     	; 0x145e <conv_int+0xa6>
    146e:	2f 7d       	andi	r18, 0xDF	; 223
    1470:	3f ee       	ldi	r19, 0xEF	; 239
    1472:	32 0f       	add	r19, r18
    1474:	36 30       	cpi	r19, 0x06	; 6
    1476:	98 f7       	brcc	.-26     	; 0x145e <conv_int+0xa6>
    1478:	27 50       	subi	r18, 0x07	; 7
    147a:	4c 2f       	mov	r20, r28
    147c:	c5 01       	movw	r24, r10
    147e:	b4 01       	movw	r22, r8
    1480:	0e 94 9c 09 	call	0x1338	; 0x1338 <mulacc>
    1484:	4b 01       	movw	r8, r22
    1486:	5c 01       	movw	r10, r24
    1488:	c2 60       	ori	r28, 0x02	; 2
    148a:	d1 50       	subi	r29, 0x01	; 1
    148c:	59 f0       	breq	.+22     	; 0x14a4 <conv_int+0xec>
    148e:	c8 01       	movw	r24, r16
    1490:	0e 94 67 0c 	call	0x18ce	; 0x18ce <fgetc>
    1494:	97 ff       	sbrs	r25, 7
    1496:	dd cf       	rjmp	.-70     	; 0x1452 <conv_int+0x9a>
    1498:	c1 fd       	sbrc	r28, 1
    149a:	04 c0       	rjmp	.+8      	; 0x14a4 <conv_int+0xec>
    149c:	aa cf       	rjmp	.-172    	; 0x13f2 <conv_int+0x3a>
    149e:	81 2c       	mov	r8, r1
    14a0:	91 2c       	mov	r9, r1
    14a2:	54 01       	movw	r10, r8
    14a4:	c7 ff       	sbrs	r28, 7
    14a6:	08 c0       	rjmp	.+16     	; 0x14b8 <conv_int+0x100>
    14a8:	b0 94       	com	r11
    14aa:	a0 94       	com	r10
    14ac:	90 94       	com	r9
    14ae:	80 94       	com	r8
    14b0:	81 1c       	adc	r8, r1
    14b2:	91 1c       	adc	r9, r1
    14b4:	a1 1c       	adc	r10, r1
    14b6:	b1 1c       	adc	r11, r1
    14b8:	2c 2f       	mov	r18, r28
    14ba:	b5 01       	movw	r22, r10
    14bc:	a4 01       	movw	r20, r8
    14be:	c7 01       	movw	r24, r14
    14c0:	0e 94 90 09 	call	0x1320	; 0x1320 <putval>
    14c4:	81 e0       	ldi	r24, 0x01	; 1
    14c6:	df 91       	pop	r29
    14c8:	cf 91       	pop	r28
    14ca:	1f 91       	pop	r17
    14cc:	0f 91       	pop	r16
    14ce:	ff 90       	pop	r15
    14d0:	ef 90       	pop	r14
    14d2:	bf 90       	pop	r11
    14d4:	af 90       	pop	r10
    14d6:	9f 90       	pop	r9
    14d8:	8f 90       	pop	r8
    14da:	08 95       	ret

000014dc <conv_brk>:
    14dc:	a0 e2       	ldi	r26, 0x20	; 32
    14de:	b0 e0       	ldi	r27, 0x00	; 0
    14e0:	e4 e7       	ldi	r30, 0x74	; 116
    14e2:	fa e0       	ldi	r31, 0x0A	; 10
    14e4:	0c 94 5e 0d 	jmp	0x1abc	; 0x1abc <__prologue_saves__+0x6>
    14e8:	5c 01       	movw	r10, r24
    14ea:	96 2e       	mov	r9, r22
    14ec:	7a 01       	movw	r14, r20
    14ee:	f9 01       	movw	r30, r18
    14f0:	8e 01       	movw	r16, r28
    14f2:	0f 5f       	subi	r16, 0xFF	; 255
    14f4:	1f 4f       	sbci	r17, 0xFF	; 255
    14f6:	68 01       	movw	r12, r16
    14f8:	80 e2       	ldi	r24, 0x20	; 32
    14fa:	d8 01       	movw	r26, r16
    14fc:	1d 92       	st	X+, r1
    14fe:	8a 95       	dec	r24
    1500:	e9 f7       	brne	.-6      	; 0x14fc <conv_brk+0x20>
    1502:	d5 01       	movw	r26, r10
    1504:	13 96       	adiw	r26, 0x03	; 3
    1506:	8c 90       	ld	r8, X
    1508:	80 e0       	ldi	r24, 0x00	; 0
    150a:	90 e0       	ldi	r25, 0x00	; 0
    150c:	61 2c       	mov	r6, r1
    150e:	71 2c       	mov	r7, r1
    1510:	30 e0       	ldi	r19, 0x00	; 0
    1512:	61 e0       	ldi	r22, 0x01	; 1
    1514:	70 e0       	ldi	r23, 0x00	; 0
    1516:	83 fc       	sbrc	r8, 3
    1518:	25 91       	lpm	r18, Z+
    151a:	83 fe       	sbrs	r8, 3
    151c:	21 91       	ld	r18, Z+
    151e:	8f 01       	movw	r16, r30
    1520:	52 2e       	mov	r5, r18
    1522:	21 11       	cpse	r18, r1
    1524:	03 c0       	rjmp	.+6      	; 0x152c <conv_brk+0x50>
    1526:	80 e0       	ldi	r24, 0x00	; 0
    1528:	90 e0       	ldi	r25, 0x00	; 0
    152a:	92 c0       	rjmp	.+292    	; 0x1650 <conv_brk+0x174>
    152c:	2e 35       	cpi	r18, 0x5E	; 94
    152e:	11 f4       	brne	.+4      	; 0x1534 <conv_brk+0x58>
    1530:	00 97       	sbiw	r24, 0x00	; 0
    1532:	51 f1       	breq	.+84     	; 0x1588 <conv_brk+0xac>
    1534:	43 2f       	mov	r20, r19
    1536:	50 e0       	ldi	r21, 0x00	; 0
    1538:	48 17       	cp	r20, r24
    153a:	59 07       	cpc	r21, r25
    153c:	3c f4       	brge	.+14     	; 0x154c <conv_brk+0x70>
    153e:	2d 35       	cpi	r18, 0x5D	; 93
    1540:	59 f1       	breq	.+86     	; 0x1598 <conv_brk+0xbc>
    1542:	2d 32       	cpi	r18, 0x2D	; 45
    1544:	19 f4       	brne	.+6      	; 0x154c <conv_brk+0x70>
    1546:	77 20       	and	r7, r7
    1548:	09 f1       	breq	.+66     	; 0x158c <conv_brk+0xb0>
    154a:	03 c0       	rjmp	.+6      	; 0x1552 <conv_brk+0x76>
    154c:	77 20       	and	r7, r7
    154e:	09 f4       	brne	.+2      	; 0x1552 <conv_brk+0x76>
    1550:	6a c0       	rjmp	.+212    	; 0x1626 <conv_brk+0x14a>
    1552:	45 2d       	mov	r20, r5
    1554:	46 95       	lsr	r20
    1556:	46 95       	lsr	r20
    1558:	46 95       	lsr	r20
    155a:	d6 01       	movw	r26, r12
    155c:	a4 0f       	add	r26, r20
    155e:	b1 1d       	adc	r27, r1
    1560:	45 2d       	mov	r20, r5
    1562:	47 70       	andi	r20, 0x07	; 7
    1564:	8b 01       	movw	r16, r22
    1566:	02 c0       	rjmp	.+4      	; 0x156c <conv_brk+0x90>
    1568:	00 0f       	add	r16, r16
    156a:	11 1f       	adc	r17, r17
    156c:	4a 95       	dec	r20
    156e:	e2 f7       	brpl	.-8      	; 0x1568 <conv_brk+0x8c>
    1570:	a8 01       	movw	r20, r16
    1572:	5c 91       	ld	r21, X
    1574:	45 2b       	or	r20, r21
    1576:	4c 93       	st	X, r20
    1578:	65 14       	cp	r6, r5
    157a:	59 f0       	breq	.+22     	; 0x1592 <conv_brk+0xb6>
    157c:	56 14       	cp	r5, r6
    157e:	10 f4       	brcc	.+4      	; 0x1584 <conv_brk+0xa8>
    1580:	53 94       	inc	r5
    1582:	e7 cf       	rjmp	.-50     	; 0x1552 <conv_brk+0x76>
    1584:	5a 94       	dec	r5
    1586:	e5 cf       	rjmp	.-54     	; 0x1552 <conv_brk+0x76>
    1588:	31 e0       	ldi	r19, 0x01	; 1
    158a:	04 c0       	rjmp	.+8      	; 0x1594 <conv_brk+0xb8>
    158c:	77 24       	eor	r7, r7
    158e:	73 94       	inc	r7
    1590:	01 c0       	rjmp	.+2      	; 0x1594 <conv_brk+0xb8>
    1592:	71 2c       	mov	r7, r1
    1594:	01 96       	adiw	r24, 0x01	; 1
    1596:	bf cf       	rjmp	.-130    	; 0x1516 <conv_brk+0x3a>
    1598:	77 20       	and	r7, r7
    159a:	19 f0       	breq	.+6      	; 0x15a2 <conv_brk+0xc6>
    159c:	8e 81       	ldd	r24, Y+6	; 0x06
    159e:	80 62       	ori	r24, 0x20	; 32
    15a0:	8e 83       	std	Y+6, r24	; 0x06
    15a2:	31 11       	cpse	r19, r1
    15a4:	03 c0       	rjmp	.+6      	; 0x15ac <conv_brk+0xd0>
    15a6:	88 24       	eor	r8, r8
    15a8:	83 94       	inc	r8
    15aa:	17 c0       	rjmp	.+46     	; 0x15da <conv_brk+0xfe>
    15ac:	f6 01       	movw	r30, r12
    15ae:	9e 01       	movw	r18, r28
    15b0:	2f 5d       	subi	r18, 0xDF	; 223
    15b2:	3f 4f       	sbci	r19, 0xFF	; 255
    15b4:	80 81       	ld	r24, Z
    15b6:	80 95       	com	r24
    15b8:	81 93       	st	Z+, r24
    15ba:	2e 17       	cp	r18, r30
    15bc:	3f 07       	cpc	r19, r31
    15be:	d1 f7       	brne	.-12     	; 0x15b4 <conv_brk+0xd8>
    15c0:	f2 cf       	rjmp	.-28     	; 0x15a6 <conv_brk+0xca>
    15c2:	e1 14       	cp	r14, r1
    15c4:	f1 04       	cpc	r15, r1
    15c6:	29 f0       	breq	.+10     	; 0x15d2 <conv_brk+0xf6>
    15c8:	d7 01       	movw	r26, r14
    15ca:	8c 93       	st	X, r24
    15cc:	f7 01       	movw	r30, r14
    15ce:	31 96       	adiw	r30, 0x01	; 1
    15d0:	7f 01       	movw	r14, r30
    15d2:	9a 94       	dec	r9
    15d4:	81 2c       	mov	r8, r1
    15d6:	99 20       	and	r9, r9
    15d8:	f9 f0       	breq	.+62     	; 0x1618 <conv_brk+0x13c>
    15da:	c5 01       	movw	r24, r10
    15dc:	0e 94 67 0c 	call	0x18ce	; 0x18ce <fgetc>
    15e0:	97 fd       	sbrc	r25, 7
    15e2:	18 c0       	rjmp	.+48     	; 0x1614 <conv_brk+0x138>
    15e4:	fc 01       	movw	r30, r24
    15e6:	ff 27       	eor	r31, r31
    15e8:	23 e0       	ldi	r18, 0x03	; 3
    15ea:	f5 95       	asr	r31
    15ec:	e7 95       	ror	r30
    15ee:	2a 95       	dec	r18
    15f0:	e1 f7       	brne	.-8      	; 0x15ea <conv_brk+0x10e>
    15f2:	ec 0d       	add	r30, r12
    15f4:	fd 1d       	adc	r31, r13
    15f6:	20 81       	ld	r18, Z
    15f8:	30 e0       	ldi	r19, 0x00	; 0
    15fa:	ac 01       	movw	r20, r24
    15fc:	47 70       	andi	r20, 0x07	; 7
    15fe:	55 27       	eor	r21, r21
    1600:	02 c0       	rjmp	.+4      	; 0x1606 <conv_brk+0x12a>
    1602:	35 95       	asr	r19
    1604:	27 95       	ror	r18
    1606:	4a 95       	dec	r20
    1608:	e2 f7       	brpl	.-8      	; 0x1602 <conv_brk+0x126>
    160a:	20 fd       	sbrc	r18, 0
    160c:	da cf       	rjmp	.-76     	; 0x15c2 <conv_brk+0xe6>
    160e:	b5 01       	movw	r22, r10
    1610:	0e 94 e1 0c 	call	0x19c2	; 0x19c2 <ungetc>
    1614:	81 10       	cpse	r8, r1
    1616:	87 cf       	rjmp	.-242    	; 0x1526 <conv_brk+0x4a>
    1618:	e1 14       	cp	r14, r1
    161a:	f1 04       	cpc	r15, r1
    161c:	11 f0       	breq	.+4      	; 0x1622 <conv_brk+0x146>
    161e:	d7 01       	movw	r26, r14
    1620:	1c 92       	st	X, r1
    1622:	c8 01       	movw	r24, r16
    1624:	15 c0       	rjmp	.+42     	; 0x1650 <conv_brk+0x174>
    1626:	42 2f       	mov	r20, r18
    1628:	46 95       	lsr	r20
    162a:	46 95       	lsr	r20
    162c:	46 95       	lsr	r20
    162e:	d6 01       	movw	r26, r12
    1630:	a4 0f       	add	r26, r20
    1632:	b1 1d       	adc	r27, r1
    1634:	42 2f       	mov	r20, r18
    1636:	47 70       	andi	r20, 0x07	; 7
    1638:	8b 01       	movw	r16, r22
    163a:	02 c0       	rjmp	.+4      	; 0x1640 <conv_brk+0x164>
    163c:	00 0f       	add	r16, r16
    163e:	11 1f       	adc	r17, r17
    1640:	4a 95       	dec	r20
    1642:	e2 f7       	brpl	.-8      	; 0x163c <conv_brk+0x160>
    1644:	a8 01       	movw	r20, r16
    1646:	5c 91       	ld	r21, X
    1648:	45 2b       	or	r20, r21
    164a:	4c 93       	st	X, r20
    164c:	62 2e       	mov	r6, r18
    164e:	a2 cf       	rjmp	.-188    	; 0x1594 <conv_brk+0xb8>
    1650:	a0 96       	adiw	r28, 0x20	; 32
    1652:	ef e0       	ldi	r30, 0x0F	; 15
    1654:	0c 94 7a 0d 	jmp	0x1af4	; 0x1af4 <__epilogue_restores__+0x6>

00001658 <vfscanf>:
    1658:	a0 e0       	ldi	r26, 0x00	; 0
    165a:	b0 e0       	ldi	r27, 0x00	; 0
    165c:	e2 e3       	ldi	r30, 0x32	; 50
    165e:	fb e0       	ldi	r31, 0x0B	; 11
    1660:	0c 94 5e 0d 	jmp	0x1abc	; 0x1abc <__prologue_saves__+0x6>
    1664:	6c 01       	movw	r12, r24
    1666:	eb 01       	movw	r28, r22
    1668:	5a 01       	movw	r10, r20
    166a:	fc 01       	movw	r30, r24
    166c:	17 82       	std	Z+7, r1	; 0x07
    166e:	16 82       	std	Z+6, r1	; 0x06
    1670:	51 2c       	mov	r5, r1
    1672:	f6 01       	movw	r30, r12
    1674:	e3 80       	ldd	r14, Z+3	; 0x03
    1676:	fe 01       	movw	r30, r28
    1678:	e3 fc       	sbrc	r14, 3
    167a:	85 91       	lpm	r24, Z+
    167c:	e3 fe       	sbrs	r14, 3
    167e:	81 91       	ld	r24, Z+
    1680:	18 2f       	mov	r17, r24
    1682:	ef 01       	movw	r28, r30
    1684:	88 23       	and	r24, r24
    1686:	09 f4       	brne	.+2      	; 0x168a <vfscanf+0x32>
    1688:	ee c0       	rjmp	.+476    	; 0x1866 <vfscanf+0x20e>
    168a:	90 e0       	ldi	r25, 0x00	; 0
    168c:	0e 94 3d 0c 	call	0x187a	; 0x187a <isspace>
    1690:	89 2b       	or	r24, r25
    1692:	21 f0       	breq	.+8      	; 0x169c <vfscanf+0x44>
    1694:	c6 01       	movw	r24, r12
    1696:	0e 94 c3 09 	call	0x1386	; 0x1386 <skip_spaces>
    169a:	eb cf       	rjmp	.-42     	; 0x1672 <vfscanf+0x1a>
    169c:	15 32       	cpi	r17, 0x25	; 37
    169e:	41 f4       	brne	.+16     	; 0x16b0 <vfscanf+0x58>
    16a0:	fe 01       	movw	r30, r28
    16a2:	e3 fc       	sbrc	r14, 3
    16a4:	15 91       	lpm	r17, Z+
    16a6:	e3 fe       	sbrs	r14, 3
    16a8:	11 91       	ld	r17, Z+
    16aa:	ef 01       	movw	r28, r30
    16ac:	15 32       	cpi	r17, 0x25	; 37
    16ae:	81 f4       	brne	.+32     	; 0x16d0 <vfscanf+0x78>
    16b0:	c6 01       	movw	r24, r12
    16b2:	0e 94 67 0c 	call	0x18ce	; 0x18ce <fgetc>
    16b6:	97 fd       	sbrc	r25, 7
    16b8:	d4 c0       	rjmp	.+424    	; 0x1862 <vfscanf+0x20a>
    16ba:	41 2f       	mov	r20, r17
    16bc:	50 e0       	ldi	r21, 0x00	; 0
    16be:	9c 01       	movw	r18, r24
    16c0:	33 27       	eor	r19, r19
    16c2:	24 17       	cp	r18, r20
    16c4:	35 07       	cpc	r19, r21
    16c6:	a9 f2       	breq	.-86     	; 0x1672 <vfscanf+0x1a>
    16c8:	b6 01       	movw	r22, r12
    16ca:	0e 94 e1 0c 	call	0x19c2	; 0x19c2 <ungetc>
    16ce:	cb c0       	rjmp	.+406    	; 0x1866 <vfscanf+0x20e>
    16d0:	1a 32       	cpi	r17, 0x2A	; 42
    16d2:	39 f4       	brne	.+14     	; 0x16e2 <vfscanf+0x8a>
    16d4:	e3 fc       	sbrc	r14, 3
    16d6:	15 91       	lpm	r17, Z+
    16d8:	e3 fe       	sbrs	r14, 3
    16da:	11 91       	ld	r17, Z+
    16dc:	ef 01       	movw	r28, r30
    16de:	01 e0       	ldi	r16, 0x01	; 1
    16e0:	01 c0       	rjmp	.+2      	; 0x16e4 <vfscanf+0x8c>
    16e2:	00 e0       	ldi	r16, 0x00	; 0
    16e4:	f1 2c       	mov	r15, r1
    16e6:	20 ed       	ldi	r18, 0xD0	; 208
    16e8:	21 0f       	add	r18, r17
    16ea:	2a 30       	cpi	r18, 0x0A	; 10
    16ec:	80 f4       	brcc	.+32     	; 0x170e <vfscanf+0xb6>
    16ee:	02 60       	ori	r16, 0x02	; 2
    16f0:	6f 2d       	mov	r22, r15
    16f2:	70 e0       	ldi	r23, 0x00	; 0
    16f4:	80 e0       	ldi	r24, 0x00	; 0
    16f6:	90 e0       	ldi	r25, 0x00	; 0
    16f8:	40 e2       	ldi	r20, 0x20	; 32
    16fa:	0e 94 9c 09 	call	0x1338	; 0x1338 <mulacc>
    16fe:	f6 2e       	mov	r15, r22
    1700:	fe 01       	movw	r30, r28
    1702:	e3 fc       	sbrc	r14, 3
    1704:	15 91       	lpm	r17, Z+
    1706:	e3 fe       	sbrs	r14, 3
    1708:	11 91       	ld	r17, Z+
    170a:	ef 01       	movw	r28, r30
    170c:	ec cf       	rjmp	.-40     	; 0x16e6 <vfscanf+0x8e>
    170e:	01 ff       	sbrs	r16, 1
    1710:	03 c0       	rjmp	.+6      	; 0x1718 <vfscanf+0xc0>
    1712:	f1 10       	cpse	r15, r1
    1714:	03 c0       	rjmp	.+6      	; 0x171c <vfscanf+0xc4>
    1716:	a7 c0       	rjmp	.+334    	; 0x1866 <vfscanf+0x20e>
    1718:	ff 24       	eor	r15, r15
    171a:	fa 94       	dec	r15
    171c:	18 36       	cpi	r17, 0x68	; 104
    171e:	19 f0       	breq	.+6      	; 0x1726 <vfscanf+0xce>
    1720:	1c 36       	cpi	r17, 0x6C	; 108
    1722:	51 f0       	breq	.+20     	; 0x1738 <vfscanf+0xe0>
    1724:	10 c0       	rjmp	.+32     	; 0x1746 <vfscanf+0xee>
    1726:	fe 01       	movw	r30, r28
    1728:	e3 fc       	sbrc	r14, 3
    172a:	15 91       	lpm	r17, Z+
    172c:	e3 fe       	sbrs	r14, 3
    172e:	11 91       	ld	r17, Z+
    1730:	ef 01       	movw	r28, r30
    1732:	18 36       	cpi	r17, 0x68	; 104
    1734:	41 f4       	brne	.+16     	; 0x1746 <vfscanf+0xee>
    1736:	08 60       	ori	r16, 0x08	; 8
    1738:	04 60       	ori	r16, 0x04	; 4
    173a:	fe 01       	movw	r30, r28
    173c:	e3 fc       	sbrc	r14, 3
    173e:	15 91       	lpm	r17, Z+
    1740:	e3 fe       	sbrs	r14, 3
    1742:	11 91       	ld	r17, Z+
    1744:	ef 01       	movw	r28, r30
    1746:	11 23       	and	r17, r17
    1748:	09 f4       	brne	.+2      	; 0x174c <vfscanf+0xf4>
    174a:	8d c0       	rjmp	.+282    	; 0x1866 <vfscanf+0x20e>
    174c:	61 2f       	mov	r22, r17
    174e:	70 e0       	ldi	r23, 0x00	; 0
    1750:	88 e6       	ldi	r24, 0x68	; 104
    1752:	90 e0       	ldi	r25, 0x00	; 0
    1754:	0e 94 46 0c 	call	0x188c	; 0x188c <strchr_P>
    1758:	89 2b       	or	r24, r25
    175a:	09 f4       	brne	.+2      	; 0x175e <vfscanf+0x106>
    175c:	84 c0       	rjmp	.+264    	; 0x1866 <vfscanf+0x20e>
    175e:	00 fd       	sbrc	r16, 0
    1760:	07 c0       	rjmp	.+14     	; 0x1770 <vfscanf+0x118>
    1762:	f5 01       	movw	r30, r10
    1764:	80 80       	ld	r8, Z
    1766:	91 80       	ldd	r9, Z+1	; 0x01
    1768:	c5 01       	movw	r24, r10
    176a:	02 96       	adiw	r24, 0x02	; 2
    176c:	5c 01       	movw	r10, r24
    176e:	02 c0       	rjmp	.+4      	; 0x1774 <vfscanf+0x11c>
    1770:	81 2c       	mov	r8, r1
    1772:	91 2c       	mov	r9, r1
    1774:	1e 36       	cpi	r17, 0x6E	; 110
    1776:	51 f4       	brne	.+20     	; 0x178c <vfscanf+0x134>
    1778:	f6 01       	movw	r30, r12
    177a:	46 81       	ldd	r20, Z+6	; 0x06
    177c:	57 81       	ldd	r21, Z+7	; 0x07
    177e:	60 e0       	ldi	r22, 0x00	; 0
    1780:	70 e0       	ldi	r23, 0x00	; 0
    1782:	20 2f       	mov	r18, r16
    1784:	c4 01       	movw	r24, r8
    1786:	0e 94 90 09 	call	0x1320	; 0x1320 <putval>
    178a:	73 cf       	rjmp	.-282    	; 0x1672 <vfscanf+0x1a>
    178c:	13 36       	cpi	r17, 0x63	; 99
    178e:	a9 f4       	brne	.+42     	; 0x17ba <vfscanf+0x162>
    1790:	01 fd       	sbrc	r16, 1
    1792:	02 c0       	rjmp	.+4      	; 0x1798 <vfscanf+0x140>
    1794:	ff 24       	eor	r15, r15
    1796:	f3 94       	inc	r15
    1798:	c6 01       	movw	r24, r12
    179a:	0e 94 67 0c 	call	0x18ce	; 0x18ce <fgetc>
    179e:	97 fd       	sbrc	r25, 7
    17a0:	60 c0       	rjmp	.+192    	; 0x1862 <vfscanf+0x20a>
    17a2:	81 14       	cp	r8, r1
    17a4:	91 04       	cpc	r9, r1
    17a6:	29 f0       	breq	.+10     	; 0x17b2 <vfscanf+0x15a>
    17a8:	f4 01       	movw	r30, r8
    17aa:	80 83       	st	Z, r24
    17ac:	c4 01       	movw	r24, r8
    17ae:	01 96       	adiw	r24, 0x01	; 1
    17b0:	4c 01       	movw	r8, r24
    17b2:	fa 94       	dec	r15
    17b4:	f1 10       	cpse	r15, r1
    17b6:	f0 cf       	rjmp	.-32     	; 0x1798 <vfscanf+0x140>
    17b8:	50 c0       	rjmp	.+160    	; 0x185a <vfscanf+0x202>
    17ba:	1b 35       	cpi	r17, 0x5B	; 91
    17bc:	59 f4       	brne	.+22     	; 0x17d4 <vfscanf+0x17c>
    17be:	9e 01       	movw	r18, r28
    17c0:	a4 01       	movw	r20, r8
    17c2:	6f 2d       	mov	r22, r15
    17c4:	c6 01       	movw	r24, r12
    17c6:	0e 94 6e 0a 	call	0x14dc	; 0x14dc <conv_brk>
    17ca:	ec 01       	movw	r28, r24
    17cc:	89 2b       	or	r24, r25
    17ce:	09 f0       	breq	.+2      	; 0x17d2 <vfscanf+0x17a>
    17d0:	44 c0       	rjmp	.+136    	; 0x185a <vfscanf+0x202>
    17d2:	3e c0       	rjmp	.+124    	; 0x1850 <vfscanf+0x1f8>
    17d4:	c6 01       	movw	r24, r12
    17d6:	0e 94 c3 09 	call	0x1386	; 0x1386 <skip_spaces>
    17da:	97 fd       	sbrc	r25, 7
    17dc:	42 c0       	rjmp	.+132    	; 0x1862 <vfscanf+0x20a>
    17de:	1f 36       	cpi	r17, 0x6F	; 111
    17e0:	61 f1       	breq	.+88     	; 0x183a <vfscanf+0x1e2>
    17e2:	28 f4       	brcc	.+10     	; 0x17ee <vfscanf+0x196>
    17e4:	14 36       	cpi	r17, 0x64	; 100
    17e6:	39 f1       	breq	.+78     	; 0x1836 <vfscanf+0x1de>
    17e8:	19 36       	cpi	r17, 0x69	; 105
    17ea:	51 f1       	breq	.+84     	; 0x1840 <vfscanf+0x1e8>
    17ec:	28 c0       	rjmp	.+80     	; 0x183e <vfscanf+0x1e6>
    17ee:	13 37       	cpi	r17, 0x73	; 115
    17f0:	71 f0       	breq	.+28     	; 0x180e <vfscanf+0x1b6>
    17f2:	15 37       	cpi	r17, 0x75	; 117
    17f4:	01 f1       	breq	.+64     	; 0x1836 <vfscanf+0x1de>
    17f6:	23 c0       	rjmp	.+70     	; 0x183e <vfscanf+0x1e6>
    17f8:	81 14       	cp	r8, r1
    17fa:	91 04       	cpc	r9, r1
    17fc:	29 f0       	breq	.+10     	; 0x1808 <vfscanf+0x1b0>
    17fe:	f4 01       	movw	r30, r8
    1800:	60 82       	st	Z, r6
    1802:	c4 01       	movw	r24, r8
    1804:	01 96       	adiw	r24, 0x01	; 1
    1806:	4c 01       	movw	r8, r24
    1808:	fa 94       	dec	r15
    180a:	ff 20       	and	r15, r15
    180c:	71 f0       	breq	.+28     	; 0x182a <vfscanf+0x1d2>
    180e:	c6 01       	movw	r24, r12
    1810:	0e 94 67 0c 	call	0x18ce	; 0x18ce <fgetc>
    1814:	3c 01       	movw	r6, r24
    1816:	97 fd       	sbrc	r25, 7
    1818:	08 c0       	rjmp	.+16     	; 0x182a <vfscanf+0x1d2>
    181a:	0e 94 3d 0c 	call	0x187a	; 0x187a <isspace>
    181e:	89 2b       	or	r24, r25
    1820:	59 f3       	breq	.-42     	; 0x17f8 <vfscanf+0x1a0>
    1822:	b6 01       	movw	r22, r12
    1824:	c3 01       	movw	r24, r6
    1826:	0e 94 e1 0c 	call	0x19c2	; 0x19c2 <ungetc>
    182a:	81 14       	cp	r8, r1
    182c:	91 04       	cpc	r9, r1
    182e:	a9 f0       	breq	.+42     	; 0x185a <vfscanf+0x202>
    1830:	f4 01       	movw	r30, r8
    1832:	10 82       	st	Z, r1
    1834:	12 c0       	rjmp	.+36     	; 0x185a <vfscanf+0x202>
    1836:	00 62       	ori	r16, 0x20	; 32
    1838:	03 c0       	rjmp	.+6      	; 0x1840 <vfscanf+0x1e8>
    183a:	00 61       	ori	r16, 0x10	; 16
    183c:	01 c0       	rjmp	.+2      	; 0x1840 <vfscanf+0x1e8>
    183e:	00 64       	ori	r16, 0x40	; 64
    1840:	20 2f       	mov	r18, r16
    1842:	a4 01       	movw	r20, r8
    1844:	6f 2d       	mov	r22, r15
    1846:	c6 01       	movw	r24, r12
    1848:	0e 94 dc 09 	call	0x13b8	; 0x13b8 <conv_int>
    184c:	81 11       	cpse	r24, r1
    184e:	05 c0       	rjmp	.+10     	; 0x185a <vfscanf+0x202>
    1850:	f6 01       	movw	r30, r12
    1852:	83 81       	ldd	r24, Z+3	; 0x03
    1854:	80 73       	andi	r24, 0x30	; 48
    1856:	29 f4       	brne	.+10     	; 0x1862 <vfscanf+0x20a>
    1858:	06 c0       	rjmp	.+12     	; 0x1866 <vfscanf+0x20e>
    185a:	00 fd       	sbrc	r16, 0
    185c:	0a cf       	rjmp	.-492    	; 0x1672 <vfscanf+0x1a>
    185e:	53 94       	inc	r5
    1860:	08 cf       	rjmp	.-496    	; 0x1672 <vfscanf+0x1a>
    1862:	55 20       	and	r5, r5
    1864:	19 f0       	breq	.+6      	; 0x186c <vfscanf+0x214>
    1866:	85 2d       	mov	r24, r5
    1868:	90 e0       	ldi	r25, 0x00	; 0
    186a:	02 c0       	rjmp	.+4      	; 0x1870 <vfscanf+0x218>
    186c:	8f ef       	ldi	r24, 0xFF	; 255
    186e:	9f ef       	ldi	r25, 0xFF	; 255
    1870:	cd b7       	in	r28, 0x3d	; 61
    1872:	de b7       	in	r29, 0x3e	; 62
    1874:	ef e0       	ldi	r30, 0x0F	; 15
    1876:	0c 94 7a 0d 	jmp	0x1af4	; 0x1af4 <__epilogue_restores__+0x6>

0000187a <isspace>:
    187a:	91 11       	cpse	r25, r1
    187c:	0c 94 58 0d 	jmp	0x1ab0	; 0x1ab0 <__ctype_isfalse>
    1880:	80 32       	cpi	r24, 0x20	; 32
    1882:	19 f0       	breq	.+6      	; 0x188a <isspace+0x10>
    1884:	89 50       	subi	r24, 0x09	; 9
    1886:	85 50       	subi	r24, 0x05	; 5
    1888:	c8 f7       	brcc	.-14     	; 0x187c <isspace+0x2>
    188a:	08 95       	ret

0000188c <strchr_P>:
    188c:	fc 01       	movw	r30, r24
    188e:	05 90       	lpm	r0, Z+
    1890:	06 16       	cp	r0, r22
    1892:	21 f0       	breq	.+8      	; 0x189c <strchr_P+0x10>
    1894:	00 20       	and	r0, r0
    1896:	d9 f7       	brne	.-10     	; 0x188e <strchr_P+0x2>
    1898:	c0 01       	movw	r24, r0
    189a:	08 95       	ret
    189c:	31 97       	sbiw	r30, 0x01	; 1
    189e:	cf 01       	movw	r24, r30
    18a0:	08 95       	ret

000018a2 <strnlen_P>:
    18a2:	fc 01       	movw	r30, r24
    18a4:	05 90       	lpm	r0, Z+
    18a6:	61 50       	subi	r22, 0x01	; 1
    18a8:	70 40       	sbci	r23, 0x00	; 0
    18aa:	01 10       	cpse	r0, r1
    18ac:	d8 f7       	brcc	.-10     	; 0x18a4 <strnlen_P+0x2>
    18ae:	80 95       	com	r24
    18b0:	90 95       	com	r25
    18b2:	8e 0f       	add	r24, r30
    18b4:	9f 1f       	adc	r25, r31
    18b6:	08 95       	ret

000018b8 <strnlen>:
    18b8:	fc 01       	movw	r30, r24
    18ba:	61 50       	subi	r22, 0x01	; 1
    18bc:	70 40       	sbci	r23, 0x00	; 0
    18be:	01 90       	ld	r0, Z+
    18c0:	01 10       	cpse	r0, r1
    18c2:	d8 f7       	brcc	.-10     	; 0x18ba <strnlen+0x2>
    18c4:	80 95       	com	r24
    18c6:	90 95       	com	r25
    18c8:	8e 0f       	add	r24, r30
    18ca:	9f 1f       	adc	r25, r31
    18cc:	08 95       	ret

000018ce <fgetc>:
    18ce:	cf 93       	push	r28
    18d0:	df 93       	push	r29
    18d2:	ec 01       	movw	r28, r24
    18d4:	2b 81       	ldd	r18, Y+3	; 0x03
    18d6:	20 ff       	sbrs	r18, 0
    18d8:	33 c0       	rjmp	.+102    	; 0x1940 <fgetc+0x72>
    18da:	26 ff       	sbrs	r18, 6
    18dc:	0a c0       	rjmp	.+20     	; 0x18f2 <fgetc+0x24>
    18de:	2f 7b       	andi	r18, 0xBF	; 191
    18e0:	2b 83       	std	Y+3, r18	; 0x03
    18e2:	8e 81       	ldd	r24, Y+6	; 0x06
    18e4:	9f 81       	ldd	r25, Y+7	; 0x07
    18e6:	01 96       	adiw	r24, 0x01	; 1
    18e8:	9f 83       	std	Y+7, r25	; 0x07
    18ea:	8e 83       	std	Y+6, r24	; 0x06
    18ec:	8a 81       	ldd	r24, Y+2	; 0x02
    18ee:	90 e0       	ldi	r25, 0x00	; 0
    18f0:	29 c0       	rjmp	.+82     	; 0x1944 <fgetc+0x76>
    18f2:	22 ff       	sbrs	r18, 2
    18f4:	0f c0       	rjmp	.+30     	; 0x1914 <fgetc+0x46>
    18f6:	e8 81       	ld	r30, Y
    18f8:	f9 81       	ldd	r31, Y+1	; 0x01
    18fa:	80 81       	ld	r24, Z
    18fc:	08 2e       	mov	r0, r24
    18fe:	00 0c       	add	r0, r0
    1900:	99 0b       	sbc	r25, r25
    1902:	00 97       	sbiw	r24, 0x00	; 0
    1904:	19 f4       	brne	.+6      	; 0x190c <fgetc+0x3e>
    1906:	20 62       	ori	r18, 0x20	; 32
    1908:	2b 83       	std	Y+3, r18	; 0x03
    190a:	1a c0       	rjmp	.+52     	; 0x1940 <fgetc+0x72>
    190c:	31 96       	adiw	r30, 0x01	; 1
    190e:	f9 83       	std	Y+1, r31	; 0x01
    1910:	e8 83       	st	Y, r30
    1912:	0e c0       	rjmp	.+28     	; 0x1930 <fgetc+0x62>
    1914:	ea 85       	ldd	r30, Y+10	; 0x0a
    1916:	fb 85       	ldd	r31, Y+11	; 0x0b
    1918:	09 95       	icall
    191a:	97 ff       	sbrs	r25, 7
    191c:	09 c0       	rjmp	.+18     	; 0x1930 <fgetc+0x62>
    191e:	2b 81       	ldd	r18, Y+3	; 0x03
    1920:	01 96       	adiw	r24, 0x01	; 1
    1922:	11 f0       	breq	.+4      	; 0x1928 <fgetc+0x5a>
    1924:	80 e2       	ldi	r24, 0x20	; 32
    1926:	01 c0       	rjmp	.+2      	; 0x192a <fgetc+0x5c>
    1928:	80 e1       	ldi	r24, 0x10	; 16
    192a:	82 2b       	or	r24, r18
    192c:	8b 83       	std	Y+3, r24	; 0x03
    192e:	08 c0       	rjmp	.+16     	; 0x1940 <fgetc+0x72>
    1930:	2e 81       	ldd	r18, Y+6	; 0x06
    1932:	3f 81       	ldd	r19, Y+7	; 0x07
    1934:	2f 5f       	subi	r18, 0xFF	; 255
    1936:	3f 4f       	sbci	r19, 0xFF	; 255
    1938:	3f 83       	std	Y+7, r19	; 0x07
    193a:	2e 83       	std	Y+6, r18	; 0x06
    193c:	99 27       	eor	r25, r25
    193e:	02 c0       	rjmp	.+4      	; 0x1944 <fgetc+0x76>
    1940:	8f ef       	ldi	r24, 0xFF	; 255
    1942:	9f ef       	ldi	r25, 0xFF	; 255
    1944:	df 91       	pop	r29
    1946:	cf 91       	pop	r28
    1948:	08 95       	ret

0000194a <fputc>:
    194a:	0f 93       	push	r16
    194c:	1f 93       	push	r17
    194e:	cf 93       	push	r28
    1950:	df 93       	push	r29
    1952:	fb 01       	movw	r30, r22
    1954:	23 81       	ldd	r18, Z+3	; 0x03
    1956:	21 fd       	sbrc	r18, 1
    1958:	03 c0       	rjmp	.+6      	; 0x1960 <fputc+0x16>
    195a:	8f ef       	ldi	r24, 0xFF	; 255
    195c:	9f ef       	ldi	r25, 0xFF	; 255
    195e:	2c c0       	rjmp	.+88     	; 0x19b8 <fputc+0x6e>
    1960:	22 ff       	sbrs	r18, 2
    1962:	16 c0       	rjmp	.+44     	; 0x1990 <fputc+0x46>
    1964:	46 81       	ldd	r20, Z+6	; 0x06
    1966:	57 81       	ldd	r21, Z+7	; 0x07
    1968:	24 81       	ldd	r18, Z+4	; 0x04
    196a:	35 81       	ldd	r19, Z+5	; 0x05
    196c:	42 17       	cp	r20, r18
    196e:	53 07       	cpc	r21, r19
    1970:	44 f4       	brge	.+16     	; 0x1982 <fputc+0x38>
    1972:	a0 81       	ld	r26, Z
    1974:	b1 81       	ldd	r27, Z+1	; 0x01
    1976:	9d 01       	movw	r18, r26
    1978:	2f 5f       	subi	r18, 0xFF	; 255
    197a:	3f 4f       	sbci	r19, 0xFF	; 255
    197c:	31 83       	std	Z+1, r19	; 0x01
    197e:	20 83       	st	Z, r18
    1980:	8c 93       	st	X, r24
    1982:	26 81       	ldd	r18, Z+6	; 0x06
    1984:	37 81       	ldd	r19, Z+7	; 0x07
    1986:	2f 5f       	subi	r18, 0xFF	; 255
    1988:	3f 4f       	sbci	r19, 0xFF	; 255
    198a:	37 83       	std	Z+7, r19	; 0x07
    198c:	26 83       	std	Z+6, r18	; 0x06
    198e:	14 c0       	rjmp	.+40     	; 0x19b8 <fputc+0x6e>
    1990:	8b 01       	movw	r16, r22
    1992:	ec 01       	movw	r28, r24
    1994:	fb 01       	movw	r30, r22
    1996:	00 84       	ldd	r0, Z+8	; 0x08
    1998:	f1 85       	ldd	r31, Z+9	; 0x09
    199a:	e0 2d       	mov	r30, r0
    199c:	09 95       	icall
    199e:	89 2b       	or	r24, r25
    19a0:	e1 f6       	brne	.-72     	; 0x195a <fputc+0x10>
    19a2:	d8 01       	movw	r26, r16
    19a4:	16 96       	adiw	r26, 0x06	; 6
    19a6:	8d 91       	ld	r24, X+
    19a8:	9c 91       	ld	r25, X
    19aa:	17 97       	sbiw	r26, 0x07	; 7
    19ac:	01 96       	adiw	r24, 0x01	; 1
    19ae:	17 96       	adiw	r26, 0x07	; 7
    19b0:	9c 93       	st	X, r25
    19b2:	8e 93       	st	-X, r24
    19b4:	16 97       	sbiw	r26, 0x06	; 6
    19b6:	ce 01       	movw	r24, r28
    19b8:	df 91       	pop	r29
    19ba:	cf 91       	pop	r28
    19bc:	1f 91       	pop	r17
    19be:	0f 91       	pop	r16
    19c0:	08 95       	ret

000019c2 <ungetc>:
    19c2:	fb 01       	movw	r30, r22
    19c4:	23 81       	ldd	r18, Z+3	; 0x03
    19c6:	20 ff       	sbrs	r18, 0
    19c8:	12 c0       	rjmp	.+36     	; 0x19ee <ungetc+0x2c>
    19ca:	26 fd       	sbrc	r18, 6
    19cc:	10 c0       	rjmp	.+32     	; 0x19ee <ungetc+0x2c>
    19ce:	8f 3f       	cpi	r24, 0xFF	; 255
    19d0:	3f ef       	ldi	r19, 0xFF	; 255
    19d2:	93 07       	cpc	r25, r19
    19d4:	61 f0       	breq	.+24     	; 0x19ee <ungetc+0x2c>
    19d6:	82 83       	std	Z+2, r24	; 0x02
    19d8:	2f 7d       	andi	r18, 0xDF	; 223
    19da:	20 64       	ori	r18, 0x40	; 64
    19dc:	23 83       	std	Z+3, r18	; 0x03
    19de:	26 81       	ldd	r18, Z+6	; 0x06
    19e0:	37 81       	ldd	r19, Z+7	; 0x07
    19e2:	21 50       	subi	r18, 0x01	; 1
    19e4:	31 09       	sbc	r19, r1
    19e6:	37 83       	std	Z+7, r19	; 0x07
    19e8:	26 83       	std	Z+6, r18	; 0x06
    19ea:	99 27       	eor	r25, r25
    19ec:	08 95       	ret
    19ee:	8f ef       	ldi	r24, 0xFF	; 255
    19f0:	9f ef       	ldi	r25, 0xFF	; 255
    19f2:	08 95       	ret

000019f4 <__ultoa_invert>:
    19f4:	fa 01       	movw	r30, r20
    19f6:	aa 27       	eor	r26, r26
    19f8:	28 30       	cpi	r18, 0x08	; 8
    19fa:	51 f1       	breq	.+84     	; 0x1a50 <__ultoa_invert+0x5c>
    19fc:	20 31       	cpi	r18, 0x10	; 16
    19fe:	81 f1       	breq	.+96     	; 0x1a60 <__ultoa_invert+0x6c>
    1a00:	e8 94       	clt
    1a02:	6f 93       	push	r22
    1a04:	6e 7f       	andi	r22, 0xFE	; 254
    1a06:	6e 5f       	subi	r22, 0xFE	; 254
    1a08:	7f 4f       	sbci	r23, 0xFF	; 255
    1a0a:	8f 4f       	sbci	r24, 0xFF	; 255
    1a0c:	9f 4f       	sbci	r25, 0xFF	; 255
    1a0e:	af 4f       	sbci	r26, 0xFF	; 255
    1a10:	b1 e0       	ldi	r27, 0x01	; 1
    1a12:	3e d0       	rcall	.+124    	; 0x1a90 <__ultoa_invert+0x9c>
    1a14:	b4 e0       	ldi	r27, 0x04	; 4
    1a16:	3c d0       	rcall	.+120    	; 0x1a90 <__ultoa_invert+0x9c>
    1a18:	67 0f       	add	r22, r23
    1a1a:	78 1f       	adc	r23, r24
    1a1c:	89 1f       	adc	r24, r25
    1a1e:	9a 1f       	adc	r25, r26
    1a20:	a1 1d       	adc	r26, r1
    1a22:	68 0f       	add	r22, r24
    1a24:	79 1f       	adc	r23, r25
    1a26:	8a 1f       	adc	r24, r26
    1a28:	91 1d       	adc	r25, r1
    1a2a:	a1 1d       	adc	r26, r1
    1a2c:	6a 0f       	add	r22, r26
    1a2e:	71 1d       	adc	r23, r1
    1a30:	81 1d       	adc	r24, r1
    1a32:	91 1d       	adc	r25, r1
    1a34:	a1 1d       	adc	r26, r1
    1a36:	20 d0       	rcall	.+64     	; 0x1a78 <__ultoa_invert+0x84>
    1a38:	09 f4       	brne	.+2      	; 0x1a3c <__ultoa_invert+0x48>
    1a3a:	68 94       	set
    1a3c:	3f 91       	pop	r19
    1a3e:	2a e0       	ldi	r18, 0x0A	; 10
    1a40:	26 9f       	mul	r18, r22
    1a42:	11 24       	eor	r1, r1
    1a44:	30 19       	sub	r19, r0
    1a46:	30 5d       	subi	r19, 0xD0	; 208
    1a48:	31 93       	st	Z+, r19
    1a4a:	de f6       	brtc	.-74     	; 0x1a02 <__ultoa_invert+0xe>
    1a4c:	cf 01       	movw	r24, r30
    1a4e:	08 95       	ret
    1a50:	46 2f       	mov	r20, r22
    1a52:	47 70       	andi	r20, 0x07	; 7
    1a54:	40 5d       	subi	r20, 0xD0	; 208
    1a56:	41 93       	st	Z+, r20
    1a58:	b3 e0       	ldi	r27, 0x03	; 3
    1a5a:	0f d0       	rcall	.+30     	; 0x1a7a <__ultoa_invert+0x86>
    1a5c:	c9 f7       	brne	.-14     	; 0x1a50 <__ultoa_invert+0x5c>
    1a5e:	f6 cf       	rjmp	.-20     	; 0x1a4c <__ultoa_invert+0x58>
    1a60:	46 2f       	mov	r20, r22
    1a62:	4f 70       	andi	r20, 0x0F	; 15
    1a64:	40 5d       	subi	r20, 0xD0	; 208
    1a66:	4a 33       	cpi	r20, 0x3A	; 58
    1a68:	18 f0       	brcs	.+6      	; 0x1a70 <__ultoa_invert+0x7c>
    1a6a:	49 5d       	subi	r20, 0xD9	; 217
    1a6c:	31 fd       	sbrc	r19, 1
    1a6e:	40 52       	subi	r20, 0x20	; 32
    1a70:	41 93       	st	Z+, r20
    1a72:	02 d0       	rcall	.+4      	; 0x1a78 <__ultoa_invert+0x84>
    1a74:	a9 f7       	brne	.-22     	; 0x1a60 <__ultoa_invert+0x6c>
    1a76:	ea cf       	rjmp	.-44     	; 0x1a4c <__ultoa_invert+0x58>
    1a78:	b4 e0       	ldi	r27, 0x04	; 4
    1a7a:	a6 95       	lsr	r26
    1a7c:	97 95       	ror	r25
    1a7e:	87 95       	ror	r24
    1a80:	77 95       	ror	r23
    1a82:	67 95       	ror	r22
    1a84:	ba 95       	dec	r27
    1a86:	c9 f7       	brne	.-14     	; 0x1a7a <__ultoa_invert+0x86>
    1a88:	00 97       	sbiw	r24, 0x00	; 0
    1a8a:	61 05       	cpc	r22, r1
    1a8c:	71 05       	cpc	r23, r1
    1a8e:	08 95       	ret
    1a90:	9b 01       	movw	r18, r22
    1a92:	ac 01       	movw	r20, r24
    1a94:	0a 2e       	mov	r0, r26
    1a96:	06 94       	lsr	r0
    1a98:	57 95       	ror	r21
    1a9a:	47 95       	ror	r20
    1a9c:	37 95       	ror	r19
    1a9e:	27 95       	ror	r18
    1aa0:	ba 95       	dec	r27
    1aa2:	c9 f7       	brne	.-14     	; 0x1a96 <__ultoa_invert+0xa2>
    1aa4:	62 0f       	add	r22, r18
    1aa6:	73 1f       	adc	r23, r19
    1aa8:	84 1f       	adc	r24, r20
    1aaa:	95 1f       	adc	r25, r21
    1aac:	a0 1d       	adc	r26, r0
    1aae:	08 95       	ret

00001ab0 <__ctype_isfalse>:
    1ab0:	99 27       	eor	r25, r25
    1ab2:	88 27       	eor	r24, r24

00001ab4 <__ctype_istrue>:
    1ab4:	08 95       	ret

00001ab6 <__prologue_saves__>:
    1ab6:	2f 92       	push	r2
    1ab8:	3f 92       	push	r3
    1aba:	4f 92       	push	r4
    1abc:	5f 92       	push	r5
    1abe:	6f 92       	push	r6
    1ac0:	7f 92       	push	r7
    1ac2:	8f 92       	push	r8
    1ac4:	9f 92       	push	r9
    1ac6:	af 92       	push	r10
    1ac8:	bf 92       	push	r11
    1aca:	cf 92       	push	r12
    1acc:	df 92       	push	r13
    1ace:	ef 92       	push	r14
    1ad0:	ff 92       	push	r15
    1ad2:	0f 93       	push	r16
    1ad4:	1f 93       	push	r17
    1ad6:	cf 93       	push	r28
    1ad8:	df 93       	push	r29
    1ada:	cd b7       	in	r28, 0x3d	; 61
    1adc:	de b7       	in	r29, 0x3e	; 62
    1ade:	ca 1b       	sub	r28, r26
    1ae0:	db 0b       	sbc	r29, r27
    1ae2:	0f b6       	in	r0, 0x3f	; 63
    1ae4:	f8 94       	cli
    1ae6:	de bf       	out	0x3e, r29	; 62
    1ae8:	0f be       	out	0x3f, r0	; 63
    1aea:	cd bf       	out	0x3d, r28	; 61
    1aec:	09 94       	ijmp

00001aee <__epilogue_restores__>:
    1aee:	2a 88       	ldd	r2, Y+18	; 0x12
    1af0:	39 88       	ldd	r3, Y+17	; 0x11
    1af2:	48 88       	ldd	r4, Y+16	; 0x10
    1af4:	5f 84       	ldd	r5, Y+15	; 0x0f
    1af6:	6e 84       	ldd	r6, Y+14	; 0x0e
    1af8:	7d 84       	ldd	r7, Y+13	; 0x0d
    1afa:	8c 84       	ldd	r8, Y+12	; 0x0c
    1afc:	9b 84       	ldd	r9, Y+11	; 0x0b
    1afe:	aa 84       	ldd	r10, Y+10	; 0x0a
    1b00:	b9 84       	ldd	r11, Y+9	; 0x09
    1b02:	c8 84       	ldd	r12, Y+8	; 0x08
    1b04:	df 80       	ldd	r13, Y+7	; 0x07
    1b06:	ee 80       	ldd	r14, Y+6	; 0x06
    1b08:	fd 80       	ldd	r15, Y+5	; 0x05
    1b0a:	0c 81       	ldd	r16, Y+4	; 0x04
    1b0c:	1b 81       	ldd	r17, Y+3	; 0x03
    1b0e:	aa 81       	ldd	r26, Y+2	; 0x02
    1b10:	b9 81       	ldd	r27, Y+1	; 0x01
    1b12:	ce 0f       	add	r28, r30
    1b14:	d1 1d       	adc	r29, r1
    1b16:	0f b6       	in	r0, 0x3f	; 63
    1b18:	f8 94       	cli
    1b1a:	de bf       	out	0x3e, r29	; 62
    1b1c:	0f be       	out	0x3f, r0	; 63
    1b1e:	cd bf       	out	0x3d, r28	; 61
    1b20:	ed 01       	movw	r28, r26
    1b22:	08 95       	ret

00001b24 <_exit>:
    1b24:	f8 94       	cli

00001b26 <__stop_program>:
    1b26:	ff cf       	rjmp	.-2      	; 0x1b26 <__stop_program>
